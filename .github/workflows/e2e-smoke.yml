name: E2E Smoke Test

on:
  workflow_dispatch:
    inputs:
      VERSION:
        description: 'kubeblocks release version'
        required: true
        default: ''
      TEST_TYPE:
        description: 'test type (e.g. mysql|postgres|redis|mongo|pulsar|greptimedb|nebula|risingwave|starrocks)'
        required: false
        default: ''
      CLOUD_PROVIDER:
        description: 'cloud provider'
        required: true
        default: 'gke'
        type: choice
        options:
          - gke
          - eks
      CLUSTER_VERSION:
        description: 'k8s cluster version (e.g. 1.26)'
        required: false
        default: '1.26'
        type: choice
        options:
          - 1.27
          - 1.26
          - 1.25
          - 1.24
      INSTANCE_TYPE:
        description: 'node instance types (e.g. amd64/arm64)'
        required: false
        default: 'amd64'
        type: choice
        options:
          - amd64
          - arm64

run-name: smoke:${{ inputs.VERSION }} ${{ inputs.CLOUD_PROVIDER }}:${{ inputs.CLUSTER_VERSION }}:${{ inputs.INSTANCE_TYPE }}

env:
  GH_TOKEN: ${{ github.token }}

jobs:
  check:
    runs-on: ubuntu-latest
    outputs:
      release-version: ${{ steps.get_release_version.outputs.release-version }}
      cluster-region: ${{ steps.get_release_version.outputs.cluster-region }}
    steps:
      - uses: actions/checkout@v3
      - name: check release version
        id: get_release_version
        run: |
          RELEASE_VERSION=`bash .github/utils/utils.sh --type 18 \
              --tag-name "${{ inputs.VERSION }}"`
          if [[ -z "$RELEASE_VERSION" ]]; then
              echo "release version ${{ inputs.VERSION }} not exists"
              exit 1
          else
              echo $RELEASE_VERSION
              echo release-version=$RELEASE_VERSION >> $GITHUB_OUTPUT
          fi

          CLUSTER_REGION=""
          if [[ "${{ inputs.CLOUD_PROVIDER }}" == 'eks' && -z "$CLUSTER_REGION" ]]; then
              CLUSTER_REGION="${{ vars.REGION_AWS_EKS }}"
          elif [[ "${{ inputs.CLOUD_PROVIDER }}" == 'gke' && -z "$CLUSTER_REGION" ]]; then
              CLUSTER_REGION="${{ vars.REGION_GCP_GEK }}"
          fi
          echo cluster-region=$CLUSTER_REGION >> $GITHUB_OUTPUT

  e2e:
    name: ${{ inputs.CLOUD_PROVIDER }}
    needs: check
    uses: apecloud/apecloud-cd/.github/workflows/smoke-test-k8s.yml@v0.1.21
    with:
      CLOUD_PROVIDER: "${{ inputs.CLOUD_PROVIDER }}"
      KB_VERSION: "${{ needs.check.outputs.release-version }}"
      CLUSTER_VERSION: "${{ inputs.CLUSTER_VERSION }}"
      INSTANCE_TYPE: "${{ inputs.INSTANCE_TYPE }}"
      REGION: "${{ needs.check.outputs.cluster-region }}"
      TEST_TYPE: "${{ inputs.TEST_TYPE }}"
      APECD_REF: "v0.1.21"
    secrets: inherit
