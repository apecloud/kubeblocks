name: MERGE-E2E-SMOKE

on:
  push:
    branches:
      - 'main'

env:
  GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
  K3D_NAME: default
  K3S_VERSION: v1.26
  BASE_BRANCH: origin/main

jobs:
  trigger-mode:
    runs-on: ubuntu-latest
    outputs:
      trigger-mode: ${{ steps.get_trigger_mode.outputs.trigger_mode }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          repository: ${{ github.event.pull_request.head.repo.full_name }}

      - name: Get trigger mode
        id: get_trigger_mode
        run: |
          TRIGGER_MODE=`bash .github/utils/utils.sh --type 6 \
              --branch-name "${{ github.ref_name }}" \
              --base-branch "${{ env.BASE_BRANCH }}"`
          echo $TRIGGER_MODE
          echo trigger_mode=$TRIGGER_MODE >> $GITHUB_OUTPUT

  e2e-test:
    runs-on: [ self-hosted, k3d-runner ]
    if: ${{ contains(needs.trigger-mode.outputs.trigger-mode, '[test]') }}
    needs: trigger-mode
    strategy:
      fail-fast: false
      matrix:
        test-type: [ wesql, postgresql, redis, mongodb, pulsar ]
    name: ${{matrix.test-type}} smoke test
    outputs:
      runner-name1: ${{ steps.get_runner_name.outputs.runner_name1 }}
      runner-name2: ${{ steps.get_runner_name.outputs.runner_name2 }}
      runner-name3: ${{ steps.get_runner_name.outputs.runner_name3 }}
      runner-name4: ${{ steps.get_runner_name.outputs.runner_name4 }}
      runner-name5: ${{ steps.get_runner_name.outputs.runner_name5 }}
    steps:
      - uses: actions/checkout@v4
      - name: setup k3d k3s
        uses: apecloud/setup-k3d-k3s@v1
        with:
          k3d-name: ${{ env.K3D_NAME }}
          version: ${{ env.K3S_VERSION }}
          github-token: ${{ env.GITHUB_TOKEN }}
          k3d-args: --no-lb --k3s-node-label topology.hostpath.csi/node=k3d-default-server-0@server:0

      - name: install crds
        run: |
          make install

      - name: run kubeblocks controller
        run: |
          export KUBECONFIG=~/.kube/config
          go run cmd/manager/main.go &
          sleep 30

      - name: run e2e smoke test
        run: |
          make test-e2e-local TEST_TYPE=${{matrix.test-type}}

      - name: show smoke test result
        if: ${{ always() }}
        run: |
          cat ./test/e2e/*-log.txt
          test_ret="$( grep "[ERROR]" ./test/e2e/*-log.txt || true )"
          if [[ -n "$test_ret" ]]; then
              exit 1
          fi

      - name: delete k3d cluster
        if: ${{ always() }}
        run: |
          k3d cluster delete ${{ env.K3D_NAME }}

      - name: get runner_name
        id: get_runner_name
        if: ${{ always() }}
        run: |
          TEST_TYPE="${{matrix.test-type}}"
          case "$TEST_TYPE" in
              wesql)
                  echo runner_name1=${RUNNER_NAME} >> $GITHUB_OUTPUT
              ;;
              postgresql)
                  echo runner_name2=${RUNNER_NAME} >> $GITHUB_OUTPUT
              ;;
              redis)
                  echo runner_name3=${RUNNER_NAME} >> $GITHUB_OUTPUT
              ;;
              mongodb)
                  echo runner_name4=${RUNNER_NAME} >> $GITHUB_OUTPUT
              ;;
              pulsar)
                  echo runner_name5=${RUNNER_NAME} >> $GITHUB_OUTPUT
              ;;
          esac

  remove-runner:
    needs: [ trigger-mode, e2e-test ]
    runs-on: ubuntu-latest
    if: ${{ contains(needs.trigger-mode.outputs.trigger-mode, '[test]') && always() }}
    steps:
      - uses: actions/checkout@v4
      - name: remove runner
        run: |
          RUNNER_NAME="${{ needs.e2e-test.outputs.runner-name1 }}|${{ needs.e2e-test.outputs.runner-name2 }}|${{ needs.e2e-test.outputs.runner-name3 }}|${{ needs.e2e-test.outputs.runner-name4 }}|${{ needs.e2e-test.outputs.runner-name5 }}"
          bash .github/utils/utils.sh --type 9 \
            --github-token "${{ env.GITHUB_TOKEN }}" \
            --runner-name "${RUNNER_NAME}"
