name: RELEASE-CREATE

on:
  push:
    tags:
      - v*

env:
  GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
  RELEASE_BOT_WEBHOOK: ${{ secrets.RELEASE_BOT_WEBHOOK }}

jobs:
  publish:
    name: create a release
    runs-on: ubuntu-latest
    outputs:
      rel-version: ${{ steps.get_rel_version.outputs.rel_version }}
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v3
      - name: Parse release version and set REL_VERSION
        id: get_rel_version
        run: |
          python ./.github/utils/is_rc_or_stable_release_version.py
          echo rel_version=v${{ env.REL_VERSION }} >> $GITHUB_OUTPUT

      - name: release pre-release without release notes
        uses: softprops/action-gh-release@v1
        if: not ${{ env.WITH_RELEASE_NOTES }}
        with:
          # body_path: ./docs/release_notes/v${{ env.REL_VERSION }}/v${{ env.REL_VERSION }}.md
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          name: KubeBlocks v${{ env.REL_VERSION }}
          generate_release_notes: true
          tag_name: v${{ env.REL_VERSION }}
          prerelease: true
      - name: release RC with release notes
        uses: softprops/action-gh-release@v1
        if: ${{ env.WITH_RELEASE_NOTES }}
        with:
          body_path: ./docs/release_notes/v${{ env.REL_VERSION }}/v${{ env.REL_VERSION }}.md
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          name: KubeBlocks v${{ env.REL_VERSION }}
          tag_name: v${{ env.REL_VERSION }}
          prerelease: true
      - name: sanitized release body 
        if: not ${{ env.WITH_RELEASE_NOTES }}
        run: ./.github/utils/sanitize_release_body.sh

  send-message:
    runs-on: ubuntu-latest
    needs: publish
    if: ${{ failure() || cancelled() }}
    steps:
      - uses: actions/checkout@v3
      - name: send message
        run: |
          bash .github/utils/utils.sh --type 12 \
            --tag-name ${{ needs.publish.outputs.rel-version }} \
            --content "release\u00a0${{ needs.publish.outputs.rel-version }}\u00a0create\u00a0error"\
            --bot-webhook ${{ env.RELEASE_BOT_WEBHOOK }} \
            --run-url "$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID"