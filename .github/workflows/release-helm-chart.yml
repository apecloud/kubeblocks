name: RELEASE-CHART

on:
  workflow_dispatch:
    inputs:
      chart_version:
        description: 'The version of helm chart'
        required: true
        default: ''
  release:
    types:
      - published

env:
  RELEASE_VERSION: ${{ github.ref_name }}
  RELEASE_BOT_WEBHOOK: ${{ secrets.RELEASE_BOT_WEBHOOK }}


jobs:
  chart-version:
    runs-on: ubuntu-latest
    outputs:
      chart-version: ${{ steps.get_version.outputs.chart_version }}
    steps:
      - name: Get Chart Version
        id: get_version
        run: |
          VERSION=${{ inputs.chart_version }}
          if [ -z "$VERSION" ]; then
              VERSION=${{ env.RELEASE_VERSION }}
          fi
          echo chart_version=$VERSION >> $GITHUB_OUTPUT

  release-chart:
    needs: chart-version
    uses: apecloud/apecloud-cd/.github/workflows/release-charts.yml@v0.1.0
    with:
      MAKE_OPS: "bump-chart-ver"
      VERSION: "${{ needs.chart-version.outputs.chart-version }}"
      CHART_NAME: "kubeblocks"
      CHART_DIR: "deploy/helm"
      DEP_CHART_DIR: "deploy/helm/depend-charts"
      DEP_REPO: "helm dep update deploy/delphic"
      APECD_REF: "v0.1.0"
    secrets: inherit

  send-message:
    runs-on: ubuntu-latest
    needs: release-chart
    if: ${{ always() && github.event.action == 'published' }}
    steps:
      - uses: actions/checkout@v3
      - name: send message
        id: send_message
        run: |
          release_result="${{ env.RELEASE_VERSION }}-chart"
          touch ${release_result}
          echo 'release-result='${release_result} >> $GITHUB_OUTPUT
          
          CONTENT="release\u00a0${{ env.RELEASE_VERSION }}\u00a0chart\u00a0error"
          if [[ "${{ needs.release-chart.result }}" == "success" ]]; then
              CONTENT="release\u00a0${{ env.RELEASE_VERSION }}\u00a0chart\u00a0success"
              echo "success" > ${release_result}
          else
              echo "error" > ${release_result}
          fi
          
          bash .github/utils/utils.sh --type 12 \
            --tag-name ${{ env.RELEASE_VERSION }} \
            --content "${CONTENT}"\
            --bot-webhook ${{ env.RELEASE_BOT_WEBHOOK }} \
            --run-url "$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID"

      - name: Save Artifact
        id: cache-artifact-save
        uses: actions/cache/save@v3
        with:
          path: |
            ${{ steps.send_message.outputs.release-result }}
          key: ${{ steps.send_message.outputs.release-result }}


