name: RELEASE-PUBLISH

on:
  release:
    types:
      - published

env:
  GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
  TAG_NAME: ${{ github.ref_name }}
  GO_VERSION: '1.19'
  CLI_NAME: 'kbcli'

jobs:
  upload-release:
    name: Upload ${{ matrix.filename }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        filename: [install_cli.sh, install_cli_docker.sh]
    steps:
      - uses: actions/checkout@v3
      - name: Get release
        id: get_release
        uses: bruceadams/get-release@v1.2.3

      - name: upload release asset  ${{ matrix.filename }}
        uses: actions/upload-release-asset@main
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: ./hack/${{ matrix.filename }}
          asset_name: ${{ matrix.filename }}
          asset_content_type: text/plan


  upload-release-assert:
    name: Upload ${{ matrix.os }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [linux-amd64, linux-arm64, darwin-amd64, darwin-arm64, windows-amd64]
    steps:
      - uses: actions/checkout@v3
      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}
          
      - name: make generate
        run: make generate
        
      - name: Get release
        id: get_release
        uses: bruceadams/get-release@v1.2.3
        
      - name: make build
        env:
          CLI_BINARY: ${{ env.CLI_NAME }}-${{ matrix.os }}-${{ env.TAG_NAME }}.tar.gz
        run: |
          mkdir -p ${{ matrix.os }}
          
          CLI_OS_ARCH=`bash ${{ github.workspace }}/.github/utils/utils.sh ${{ matrix.os }}`
          RELEASE_VERSION=`bash ${{ github.workspace }}/.github/utils/utils.sh ${{ env.TAG_NAME }} 1`
          
          VERSION=$RELEASE_VERSION make bin/${{ env.CLI_NAME }}.$CLI_OS_ARCH
          
          mv bin/${{ env.CLI_NAME }}.$CLI_OS_ARCH ${{ matrix.os }}/${{ env.CLI_NAME }}
          
          tar -zcvf ${{ env.CLI_BINARY }} ${{ matrix.os }}
          
          mv ${{ env.CLI_BINARY }} bin/

      - name: upload release asset ${{ matrix.os }}
        uses: actions/upload-release-asset@main
        env:
          CLI_BINARY: ${{ env.CLI_NAME }}-${{ matrix.os }}-${{ env.TAG_NAME }}.tar.gz
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: ./bin/${{ env.CLI_BINARY }}
          asset_name: ${{ env.CLI_BINARY }}
          asset_content_type: application/zip
