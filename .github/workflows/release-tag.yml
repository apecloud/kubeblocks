name: RELEASE-TAG

on:
  push:
    branches:
      - master
      - release-*
    tags:
      - v*

jobs:
  publish:
    name: publish a release
    runs-on: ubuntu-latest
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v3
      - name: Parse release version and set REL_VERSION and LATEST_RELEASE
        run: python ./.github/utils/get_release_version.py ${{ github.event_name }}
      - name: create release
        if: startswith(github.ref, 'refs/tags/v')
        run: |
          echo "installing github-release-cli..."
          sudo npm install --silent --no-progress -g github-release-cli@2.1.0
          if [ "$LATEST_RELEASE" = "true" ]; then
          export RELEASE_BODY=`cat ./docs/release_notes/v${REL_VERSION}.md`
          else
          export RELEASE_BODY="This is the release candidate ${REL_VERSION}"
          fi
          # Parse repository to get owner and repo names
          OWNER_NAME="${GITHUB_REPOSITORY%%/*}"
          REPO_NAME="${GITHUB_REPOSITORY#*/}"
          export GITHUB_TOKEN=${{ secrets.PERSONAL_ACCESS_TOKEN }}
          github-release upload \
            --owner $OWNER_NAME \
            --repo $REPO_NAME \
            --tag "v${REL_VERSION}" \
            --release-name "KubeBlocks v${REL_VERSION}" \
            --body "${RELEASE_BODY}" \
            --prerelease true \
