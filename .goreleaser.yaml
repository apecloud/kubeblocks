builds:
  - env:
      - CGO_ENABLED=0
    id: kbcli
    main: ./cmd/cli/main.go
    binary: kbcli
    goos:
      - linux
      - darwin

    # GOARCH to build for.
    # For more info refer to: https://golang.org/doc/install/source#environment
    # Defaults are 386, amd64 and arm64.
    goarch:
      - amd64
      - arm64
archives:
  - format: tar.gz
    # this name template makes the OS and Arch compatible with the results of uname.
    name_template: >-
      kbcli_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    # use zip for windows archives
    format_overrides:
    - goos: windows
      format: zip
checksum:
  name_template: 'checksums.txt'
snapshot:
  name_template: "{{ incpatch .Version }}-next"
changelog:
  sort: asc
  filters:
    exclude:
      - '^docs:'
      - '^test:'

# The lines beneath this are called `modelines`. See `:help modeline`
# Feel free to remove those if you don't want/use them.
# yaml-language-server: $schema=https://goreleaser.com/static/schema.json
# vim: set ts=2 sw=2 tw=0 fo=cnqoj
# .goreleaser.yaml
brews:
  -
    # Name template of the recipe
    # Default to project name
    name: kbcli

    # IDs of the archives to use.
    # Defaults to all.
    ids:
    - kbcli

    # NOTE: make sure the url_template, the token and given repo (github or
    # gitlab) owner and name are from the same kind.
    # We will probably unify this in the next major version like it is
    # done with scoop.

    # GitHub/GitLab repository to push the formula to
    tap:
      # Repository owner template. (templateable)
      owner: apecloud

      # Repository name. (templateable)
      name: homebrew-tap

      # Optionally a branch can be provided. (templateable)
      #
      # Defaults to the default repository branch.
      branch: main

      # Optionally a token can be provided, if it differs from the token
      # provided to GoReleaser
      token: "{{ .Env.HOMEBREW_TAP_GITHUB_TOKEN }}"

    url_template: "https://github.com/apecloud/kbcli/releases/download/{{ .Tag }}/{{ .ArtifactName }}"

    # The project name and current git tag are used in the format string.
    commit_msg_template: "Brew formula update for {{ .ProjectName }} version {{ .Tag }}"

    # Folder inside the repository to put the formula.
    # Default is the root folder.
    folder: Formula

    # Your app's homepage.
    # Default is empty.
    homepage: "https://kubeblocks.io/"

    # Template of your app's description.
    # Default is empty.
    description: "Command-line for KubeBlocks"

    # Setting this will prevent goreleaser to actually try to commit the updated
    # formula - instead, the formula file will be stored on the dist folder only,
    # leaving the responsibility of publishing it to the user.
    # If set to auto, the release will not be uploaded to the homebrew tap
    # in case there is an indicator for prerelease in the tag e.g. v1.0.0-rc1
    # Default is false.
    skip_upload: true

    # Packages your package depends on.
    dependencies:
      - name: kubernetes-cli

    # Packages that conflict with your package.
    conflicts:
      - svn
      - bash
    # Custom install script for brew.
    # Default is 'bin.install "the binary name"'.
    install: |
      bin.install "kbcli"
      generate_completions_from_executable(bin/"kbcli", "completion", shells: [:bash, :zsh])