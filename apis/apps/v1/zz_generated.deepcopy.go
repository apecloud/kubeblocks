//go:build !ignore_autogenerated

/*
Copyright (C) 2022-2024 ApeCloud Co., Ltd

This file is part of KubeBlocks project

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU Affero General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Affero General Public License for more details.

You should have received a copy of the GNU Affero General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterDefinition) DeepCopyInto(out *ClusterDefinition) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	out.Status = in.Status
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterDefinition.
func (in *ClusterDefinition) DeepCopy() *ClusterDefinition {
	if in == nil {
		return nil
	}
	out := new(ClusterDefinition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClusterDefinition) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterDefinitionList) DeepCopyInto(out *ClusterDefinitionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ClusterDefinition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterDefinitionList.
func (in *ClusterDefinitionList) DeepCopy() *ClusterDefinitionList {
	if in == nil {
		return nil
	}
	out := new(ClusterDefinitionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClusterDefinitionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterDefinitionSpec) DeepCopyInto(out *ClusterDefinitionSpec) {
	*out = *in
	if in.Topologies != nil {
		in, out := &in.Topologies, &out.Topologies
		*out = make([]ClusterTopology, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterDefinitionSpec.
func (in *ClusterDefinitionSpec) DeepCopy() *ClusterDefinitionSpec {
	if in == nil {
		return nil
	}
	out := new(ClusterDefinitionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterDefinitionStatus) DeepCopyInto(out *ClusterDefinitionStatus) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterDefinitionStatus.
func (in *ClusterDefinitionStatus) DeepCopy() *ClusterDefinitionStatus {
	if in == nil {
		return nil
	}
	out := new(ClusterDefinitionStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterTopology) DeepCopyInto(out *ClusterTopology) {
	*out = *in
	if in.Components != nil {
		in, out := &in.Components, &out.Components
		*out = make([]ClusterTopologyComponent, len(*in))
		copy(*out, *in)
	}
	if in.Orders != nil {
		in, out := &in.Orders, &out.Orders
		*out = new(ClusterTopologyOrders)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterTopology.
func (in *ClusterTopology) DeepCopy() *ClusterTopology {
	if in == nil {
		return nil
	}
	out := new(ClusterTopology)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterTopologyComponent) DeepCopyInto(out *ClusterTopologyComponent) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterTopologyComponent.
func (in *ClusterTopologyComponent) DeepCopy() *ClusterTopologyComponent {
	if in == nil {
		return nil
	}
	out := new(ClusterTopologyComponent)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterTopologyOrders) DeepCopyInto(out *ClusterTopologyOrders) {
	*out = *in
	if in.Provision != nil {
		in, out := &in.Provision, &out.Provision
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Terminate != nil {
		in, out := &in.Terminate, &out.Terminate
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Update != nil {
		in, out := &in.Update, &out.Update
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterTopologyOrders.
func (in *ClusterTopologyOrders) DeepCopy() *ClusterTopologyOrders {
	if in == nil {
		return nil
	}
	out := new(ClusterTopologyOrders)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComponentVersion) DeepCopyInto(out *ComponentVersion) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	out.Status = in.Status
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComponentVersion.
func (in *ComponentVersion) DeepCopy() *ComponentVersion {
	if in == nil {
		return nil
	}
	out := new(ComponentVersion)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ComponentVersion) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComponentVersionCompatibilityRule) DeepCopyInto(out *ComponentVersionCompatibilityRule) {
	*out = *in
	if in.CompDefs != nil {
		in, out := &in.CompDefs, &out.CompDefs
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Releases != nil {
		in, out := &in.Releases, &out.Releases
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComponentVersionCompatibilityRule.
func (in *ComponentVersionCompatibilityRule) DeepCopy() *ComponentVersionCompatibilityRule {
	if in == nil {
		return nil
	}
	out := new(ComponentVersionCompatibilityRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComponentVersionList) DeepCopyInto(out *ComponentVersionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ComponentVersion, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComponentVersionList.
func (in *ComponentVersionList) DeepCopy() *ComponentVersionList {
	if in == nil {
		return nil
	}
	out := new(ComponentVersionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ComponentVersionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComponentVersionRelease) DeepCopyInto(out *ComponentVersionRelease) {
	*out = *in
	if in.Images != nil {
		in, out := &in.Images, &out.Images
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComponentVersionRelease.
func (in *ComponentVersionRelease) DeepCopy() *ComponentVersionRelease {
	if in == nil {
		return nil
	}
	out := new(ComponentVersionRelease)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComponentVersionSpec) DeepCopyInto(out *ComponentVersionSpec) {
	*out = *in
	if in.CompatibilityRules != nil {
		in, out := &in.CompatibilityRules, &out.CompatibilityRules
		*out = make([]ComponentVersionCompatibilityRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Releases != nil {
		in, out := &in.Releases, &out.Releases
		*out = make([]ComponentVersionRelease, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComponentVersionSpec.
func (in *ComponentVersionSpec) DeepCopy() *ComponentVersionSpec {
	if in == nil {
		return nil
	}
	out := new(ComponentVersionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComponentVersionStatus) DeepCopyInto(out *ComponentVersionStatus) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComponentVersionStatus.
func (in *ComponentVersionStatus) DeepCopy() *ComponentVersionStatus {
	if in == nil {
		return nil
	}
	out := new(ComponentVersionStatus)
	in.DeepCopyInto(out)
	return out
}
