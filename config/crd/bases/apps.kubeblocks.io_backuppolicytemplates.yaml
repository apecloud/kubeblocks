apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.1
  labels:
    app.kubernetes.io/name: kubeblocks
  name: backuppolicytemplates.apps.kubeblocks.io
spec:
  group: apps.kubeblocks.io
  names:
    categories:
    - kubeblocks
    kind: BackupPolicyTemplate
    listKind: BackupPolicyTemplateList
    plural: backuppolicytemplates
    shortNames:
    - bpt
    singular: backuppolicytemplate
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - description: ClusterDefinition referenced by cluster.
      jsonPath: .spec.clusterDefinitionRef
      name: CLUSTER-DEFINITION
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: BackupPolicyTemplate should be provided by addon developers and
          is linked to a ClusterDefinition and its associated ComponentDefinitions.
          It is responsible for generating BackupPolicies for Components that require
          backup operations, also determining the suitable backup methods and strategies.
          This template is automatically selected based on the specified ClusterDefinition
          and ComponentDefinitions when a Cluster is created.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Defines the desired state of the BackupPolicyTemplate.
            properties:
              backupPolicies:
                description: Represents an array of BackupPolicy templates, with each
                  template corresponding to a specified ComponentDefinition or to
                  a group of ComponentDefinitions that are different versions of definitions
                  of the same component.
                items:
                  description: BackupPolicy is the template corresponding to a specified
                    ComponentDefinition or to a group of ComponentDefinitions that
                    are different versions of definitions of the same component.
                  properties:
                    backoffLimit:
                      default: 2
                      description: Specifies the maximum number of retry attempts
                        for a backup before it is considered a failure.
                      format: int32
                      maximum: 10
                      minimum: 0
                      type: integer
                    backupMethods:
                      description: Defines an array of BackupMethods to be used.
                      items:
                        properties:
                          actionSetName:
                            description: Refers to the ActionSet object that defines
                              the backup actions. For volume snapshot backup, the
                              actionSet is not required, the controller will use the
                              CSI volume snapshotter to create the snapshot.
                            type: string
                          env:
                            description: Specifies the environment variables for the
                              backup workload.
                            items:
                              description: EnvVar represents an environment variable
                                present in a Container.
                              properties:
                                name:
                                  description: Name of the environment variable. Must
                                    be a C_IDENTIFIER.
                                  type: string
                                value:
                                  description: 'Variable references $(VAR_NAME) are
                                    expanded using the previously defined environment
                                    variables in the container and any service environment
                                    variables. If a variable cannot be resolved, the
                                    reference in the input string will be unchanged.
                                    Double $$ are reduced to a single $, which allows
                                    for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)"
                                    will produce the string literal "$(VAR_NAME)".
                                    Escaped references will never be expanded, regardless
                                    of whether the variable exists or not. Defaults
                                    to "".'
                                  type: string
                                valueFrom:
                                  description: Source for the environment variable's
                                    value. Cannot be used if value is not empty.
                                  properties:
                                    configMapKeyRef:
                                      description: Selects a key of a ConfigMap.
                                      properties:
                                        key:
                                          description: The key to select.
                                          type: string
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                        optional:
                                          description: Specify whether the ConfigMap
                                            or its key must be defined
                                          type: boolean
                                      required:
                                      - key
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    fieldRef:
                                      description: 'Selects a field of the pod: supports
                                        metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`,
                                        `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                        spec.serviceAccountName, status.hostIP, status.podIP,
                                        status.podIPs.'
                                      properties:
                                        apiVersion:
                                          description: Version of the schema the FieldPath
                                            is written in terms of, defaults to "v1".
                                          type: string
                                        fieldPath:
                                          description: Path of the field to select
                                            in the specified API version.
                                          type: string
                                      required:
                                      - fieldPath
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    resourceFieldRef:
                                      description: 'Selects a resource of the container:
                                        only resources limits and requests (limits.cpu,
                                        limits.memory, limits.ephemeral-storage, requests.cpu,
                                        requests.memory and requests.ephemeral-storage)
                                        are currently supported.'
                                      properties:
                                        containerName:
                                          description: 'Container name: required for
                                            volumes, optional for env vars'
                                          type: string
                                        divisor:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: Specifies the output format
                                            of the exposed resources, defaults to
                                            "1"
                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          x-kubernetes-int-or-string: true
                                        resource:
                                          description: 'Required: resource to select'
                                          type: string
                                      required:
                                      - resource
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    secretKeyRef:
                                      description: Selects a key of a secret in the
                                        pod's namespace
                                      properties:
                                        key:
                                          description: The key of the secret to select
                                            from.  Must be a valid secret key.
                                          type: string
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                        optional:
                                          description: Specify whether the Secret
                                            or its key must be defined
                                          type: boolean
                                      required:
                                      - key
                                      type: object
                                      x-kubernetes-map-type: atomic
                                  type: object
                              required:
                              - name
                              type: object
                            type: array
                          envMapping:
                            description: Specifies a mapping of an environment variable
                              key to the appropriate version of the tool image required
                              for backups, as determined by ClusterVersion and ComponentDefinition.
                              The environment variable is then injected into the container
                              executing the backup task.
                            items:
                              properties:
                                key:
                                  description: Specifies the environment variable
                                    key in the mapping.
                                  type: string
                                valueFrom:
                                  description: Specifies the source used to derive
                                    the value of the environment variable, which typically
                                    represents the tool image required for backup
                                    operation.
                                  properties:
                                    clusterVersionRef:
                                      description: "Determine the appropriate version
                                        of the backup tool image from ClusterVersion.
                                        \n Deprecated since v0.9, since ClusterVersion
                                        is deprecated."
                                      items:
                                        properties:
                                          mappingValue:
                                            description: Specifies the appropriate
                                              version of the backup tool image.
                                            type: string
                                          names:
                                            description: "Represents an array of names
                                              of ClusterVersion or ComponentDefinition
                                              that can be mapped to the appropriate
                                              version of the backup tool image. \n
                                              This mapping allows different versions
                                              of component images to correspond to
                                              specific versions of backup tool images."
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - mappingValue
                                        - names
                                        type: object
                                      type: array
                                    componentDef:
                                      description: Determine the appropriate version
                                        of the backup tool image from ComponentDefinition.
                                      items:
                                        properties:
                                          mappingValue:
                                            description: Specifies the appropriate
                                              version of the backup tool image.
                                            type: string
                                          names:
                                            description: "Represents an array of names
                                              of ClusterVersion or ComponentDefinition
                                              that can be mapped to the appropriate
                                              version of the backup tool image. \n
                                              This mapping allows different versions
                                              of component images to correspond to
                                              specific versions of backup tool images."
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - mappingValue
                                        - names
                                        type: object
                                      type: array
                                  type: object
                              required:
                              - key
                              - valueFrom
                              type: object
                            type: array
                          name:
                            description: The name of backup method.
                            pattern: ^[a-z0-9]([a-z0-9\.\-]*[a-z0-9])?$
                            type: string
                          runtimeSettings:
                            description: Specifies runtime settings for the backup
                              workload container.
                            properties:
                              resources:
                                description: 'Specifies the resource required by container.
                                  More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                                properties:
                                  claims:
                                    description: "Claims lists the names of resources,
                                      defined in spec.resourceClaims, that are used
                                      by this container. \n This is an alpha field
                                      and requires enabling the DynamicResourceAllocation
                                      feature gate. \n This field is immutable. It
                                      can only be set for containers."
                                    items:
                                      description: ResourceClaim references one entry
                                        in PodSpec.ResourceClaims.
                                      properties:
                                        name:
                                          description: Name must match the name of
                                            one entry in pod.spec.resourceClaims of
                                            the Pod where this field is used. It makes
                                            that resource available inside a container.
                                          type: string
                                      required:
                                      - name
                                      type: object
                                    type: array
                                    x-kubernetes-list-map-keys:
                                    - name
                                    x-kubernetes-list-type: map
                                  limits:
                                    additionalProperties:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    description: 'Limits describes the maximum amount
                                      of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                    type: object
                                  requests:
                                    additionalProperties:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    description: 'Requests describes the minimum amount
                                      of compute resources required. If Requests is
                                      omitted for a container, it defaults to Limits
                                      if that is explicitly specified, otherwise to
                                      an implementation-defined value. Requests cannot
                                      exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                    type: object
                                type: object
                            type: object
                          snapshotVolumes:
                            default: false
                            description: Specifies whether to take snapshots of persistent
                              volumes. If true, the ActionSetName is not required,
                              the controller will use the CSI volume snapshotter to
                              create the snapshot.
                            type: boolean
                          target:
                            description: Specifies the target information to back
                              up, it will override the target in backup policy.
                            properties:
                              account:
                                description: "If `backupPolicy.componentDefs` is set,
                                  this field is required to specify the system account
                                  name. This account must match one listed in `componentDefinition.spec.systemAccounts[*].name`.
                                  The corresponding secret created by this account
                                  is used to connect to the database. \n If `backupPolicy.componentDefRef`
                                  (a legacy and deprecated API) is set, the secret
                                  defined in `clusterDefinition.spec.ConnectionCredential`
                                  is used instead."
                                type: string
                              connectionCredential:
                                description: Specifies the connection credential to
                                  connect to the target database cluster.
                                properties:
                                  hostKey:
                                    description: Specifies the map key of the host
                                      in the connection credential secret.
                                    type: string
                                  passwordKey:
                                    default: password
                                    description: Specifies the map key of the password
                                      in the connection credential secret. This password
                                      will be saved in the backup annotation for full
                                      backup. You can use the environment variable
                                      DP_ENCRYPTION_KEY to specify encryption key.
                                    type: string
                                  portKey:
                                    description: Specifies the map key of the port
                                      in the connection credential secret.
                                    type: string
                                  secretName:
                                    description: Refers to the Secret object that
                                      contains the connection credential.
                                    pattern: ^[a-z0-9]([a-z0-9\.\-]*[a-z0-9])?$
                                    type: string
                                  usernameKey:
                                    default: username
                                    description: Specifies the map key of the user
                                      in the connection credential secret.
                                    type: string
                                required:
                                - secretName
                                type: object
                              connectionCredentialKey:
                                description: Specifies the keys of the connection
                                  credential secret defined in `clusterDefinition.spec.ConnectionCredential`.
                                  It will be ignored when the `account` is set.
                                properties:
                                  hostKey:
                                    description: Defines the key of the host in the
                                      connection credential secret.
                                    type: string
                                  passwordKey:
                                    description: Represents the key of the password
                                      in the connection credential secret. If not
                                      specified, the default key "password" is used.
                                    type: string
                                  portKey:
                                    description: Indicates map key of the port in
                                      the connection credential secret.
                                    type: string
                                  usernameKey:
                                    description: Represents the key of the username
                                      in the connection credential secret. If not
                                      specified, the default key "username" is used.
                                    type: string
                                type: object
                              name:
                                description: Specifies a mandatory and unique identifier
                                  for each target when using the "targets" field.
                                  The backup data for the current target is stored
                                  in a uniquely named subdirectory.
                                type: string
                              podSelector:
                                description: Used to find the target pod. The volumes
                                  of the target pod will be backed up.
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label
                                      selector requirements. The requirements are
                                      ANDed.
                                    items:
                                      description: A label selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the
                                            selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's
                                            relationship to a set of values. Valid
                                            operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string
                                            values. If the operator is In or NotIn,
                                            the values array must be non-empty. If
                                            the operator is Exists or DoesNotExist,
                                            the values array must be empty. This array
                                            is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value}
                                      pairs. A single {key,value} in the matchLabels
                                      map is equivalent to an element of matchExpressions,
                                      whose key field is "key", the operator is "In",
                                      and the values array contains only "value".
                                      The requirements are ANDed.
                                    type: object
                                  strategy:
                                    default: Any
                                    description: "Specifies the strategy to select
                                      the target pod when multiple pods are selected.
                                      Valid values are: \n - `Any`: select any one
                                      pod that match the labelsSelector. - `All`:
                                      select all pods that match the labelsSelector.
                                      The backup data for the current pod will be
                                      stored in a subdirectory named after the pod."
                                    enum:
                                    - Any
                                    - All
                                    type: string
                                type: object
                                x-kubernetes-map-type: atomic
                              resources:
                                description: Specifies the kubernetes resources to
                                  back up.
                                properties:
                                  excluded:
                                    description: excluded is a slice of namespaced-scoped
                                      resource type names to exclude in the kubernetes
                                      resources. The default value is empty.
                                    items:
                                      type: string
                                    type: array
                                  included:
                                    description: included is a slice of namespaced-scoped
                                      resource type names to include in the kubernetes
                                      resources. The default value is empty.
                                    items:
                                      type: string
                                    type: array
                                  selector:
                                    description: A metav1.LabelSelector to filter
                                      the target kubernetes resources that need to
                                      be backed up. If not set, will do not back up
                                      any kubernetes resources.
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of
                                          label selector requirements. The requirements
                                          are ANDed.
                                        items:
                                          description: A label selector requirement
                                            is a selector that contains values, a
                                            key, and an operator that relates the
                                            key and values.
                                          properties:
                                            key:
                                              description: key is the label key that
                                                the selector applies to.
                                              type: string
                                            operator:
                                              description: operator represents a key's
                                                relationship to a set of values. Valid
                                                operators are In, NotIn, Exists and
                                                DoesNotExist.
                                              type: string
                                            values:
                                              description: values is an array of string
                                                values. If the operator is In or NotIn,
                                                the values array must be non-empty.
                                                If the operator is Exists or DoesNotExist,
                                                the values array must be empty. This
                                                array is replaced during a strategic
                                                merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                          - key
                                          - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: matchLabels is a map of {key,value}
                                          pairs. A single {key,value} in the matchLabels
                                          map is equivalent to an element of matchExpressions,
                                          whose key field is "key", the operator is
                                          "In", and the values array contains only
                                          "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                    x-kubernetes-map-type: atomic
                                type: object
                              role:
                                description: "Specifies the role to select one or
                                  more replicas for backup. \n - If no replica with
                                  the specified role exists, the backup task will
                                  fail. Special case: If there is only one replica
                                  in the cluster, it will be used for backup, even
                                  if its role differs from the specified one. For
                                  example, if you specify backing up on a secondary
                                  replica, but the cluster is single-node with only
                                  one primary replica, the primary will be used for
                                  backup. Future versions will address this special
                                  case using role priorities. - If multiple replicas
                                  satisfy the specified role, the choice (`Any` or
                                  `All`) will be made according to the `strategy`
                                  field below."
                                type: string
                              serviceAccountName:
                                description: Specifies the service account to run
                                  the backup workload.
                                type: string
                              strategy:
                                description: "Specifies the PodSelectionStrategy to
                                  use when multiple pods are selected for the backup
                                  target. Valid values are: \n - Any: Selects any
                                  one pod that matches the labelsSelector. - All:
                                  Selects all pods that match the labelsSelector."
                                enum:
                                - Any
                                - All
                                type: string
                            required:
                            - role
                            type: object
                          targetVolumes:
                            description: Specifies which volumes from the target should
                              be mounted in the backup workload.
                            properties:
                              volumeMounts:
                                description: Specifies the mount for the volumes specified
                                  in `volumes` section.
                                items:
                                  description: VolumeMount describes a mounting of
                                    a Volume within a container.
                                  properties:
                                    mountPath:
                                      description: Path within the container at which
                                        the volume should be mounted.  Must not contain
                                        ':'.
                                      type: string
                                    mountPropagation:
                                      description: mountPropagation determines how
                                        mounts are propagated from the host to container
                                        and the other way around. When not set, MountPropagationNone
                                        is used. This field is beta in 1.10.
                                      type: string
                                    name:
                                      description: This must match the Name of a Volume.
                                      type: string
                                    readOnly:
                                      description: Mounted read-only if true, read-write
                                        otherwise (false or unspecified). Defaults
                                        to false.
                                      type: boolean
                                    subPath:
                                      description: Path within the volume from which
                                        the container's volume should be mounted.
                                        Defaults to "" (volume's root).
                                      type: string
                                    subPathExpr:
                                      description: Expanded path within the volume
                                        from which the container's volume should be
                                        mounted. Behaves similarly to SubPath but
                                        environment variable references $(VAR_NAME)
                                        are expanded using the container's environment.
                                        Defaults to "" (volume's root). SubPathExpr
                                        and SubPath are mutually exclusive.
                                      type: string
                                  required:
                                  - mountPath
                                  - name
                                  type: object
                                type: array
                              volumes:
                                description: Specifies the list of volumes of targeted
                                  application that should be mounted on the backup
                                  workload.
                                items:
                                  type: string
                                type: array
                            type: object
                          targets:
                            description: Specifies multiple target information for
                              backup operations. This includes details such as the
                              target pod and cluster connection credentials. All specified
                              targets will be backed up collectively.
                            items:
                              properties:
                                connectionCredential:
                                  description: Specifies the connection credential
                                    to connect to the target database cluster.
                                  properties:
                                    hostKey:
                                      description: Specifies the map key of the host
                                        in the connection credential secret.
                                      type: string
                                    passwordKey:
                                      default: password
                                      description: Specifies the map key of the password
                                        in the connection credential secret. This
                                        password will be saved in the backup annotation
                                        for full backup. You can use the environment
                                        variable DP_ENCRYPTION_KEY to specify encryption
                                        key.
                                      type: string
                                    portKey:
                                      description: Specifies the map key of the port
                                        in the connection credential secret.
                                      type: string
                                    secretName:
                                      description: Refers to the Secret object that
                                        contains the connection credential.
                                      pattern: ^[a-z0-9]([a-z0-9\.\-]*[a-z0-9])?$
                                      type: string
                                    usernameKey:
                                      default: username
                                      description: Specifies the map key of the user
                                        in the connection credential secret.
                                      type: string
                                  required:
                                  - secretName
                                  type: object
                                name:
                                  description: Specifies a mandatory and unique identifier
                                    for each target when using the "targets" field.
                                    The backup data for the current target is stored
                                    in a uniquely named subdirectory.
                                  type: string
                                podSelector:
                                  description: Used to find the target pod. The volumes
                                    of the target pod will be backed up.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: A label selector requirement
                                          is a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's
                                              relationship to a set of values. Valid
                                              operators are In, NotIn, Exists and
                                              DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string
                                              values. If the operator is In or NotIn,
                                              the values array must be non-empty.
                                              If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This
                                              array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: matchLabels is a map of {key,value}
                                        pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions,
                                        whose key field is "key", the operator is
                                        "In", and the values array contains only "value".
                                        The requirements are ANDed.
                                      type: object
                                    strategy:
                                      default: Any
                                      description: "Specifies the strategy to select
                                        the target pod when multiple pods are selected.
                                        Valid values are: \n - `Any`: select any one
                                        pod that match the labelsSelector. - `All`:
                                        select all pods that match the labelsSelector.
                                        The backup data for the current pod will be
                                        stored in a subdirectory named after the pod."
                                      enum:
                                      - Any
                                      - All
                                      type: string
                                  type: object
                                  x-kubernetes-map-type: atomic
                                resources:
                                  description: Specifies the kubernetes resources
                                    to back up.
                                  properties:
                                    excluded:
                                      description: excluded is a slice of namespaced-scoped
                                        resource type names to exclude in the kubernetes
                                        resources. The default value is empty.
                                      items:
                                        type: string
                                      type: array
                                    included:
                                      description: included is a slice of namespaced-scoped
                                        resource type names to include in the kubernetes
                                        resources. The default value is empty.
                                      items:
                                        type: string
                                      type: array
                                    selector:
                                      description: A metav1.LabelSelector to filter
                                        the target kubernetes resources that need
                                        to be backed up. If not set, will do not back
                                        up any kubernetes resources.
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list
                                            of label selector requirements. The requirements
                                            are ANDed.
                                          items:
                                            description: A label selector requirement
                                              is a selector that contains values,
                                              a key, and an operator that relates
                                              the key and values.
                                            properties:
                                              key:
                                                description: key is the label key
                                                  that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a
                                                  key's relationship to a set of values.
                                                  Valid operators are In, NotIn, Exists
                                                  and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of
                                                  string values. If the operator is
                                                  In or NotIn, the values array must
                                                  be non-empty. If the operator is
                                                  Exists or DoesNotExist, the values
                                                  array must be empty. This array
                                                  is replaced during a strategic merge
                                                  patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - key
                                            - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value}
                                            pairs. A single {key,value} in the matchLabels
                                            map is equivalent to an element of matchExpressions,
                                            whose key field is "key", the operator
                                            is "In", and the values array contains
                                            only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                  type: object
                                serviceAccountName:
                                  description: Specifies the service account to run
                                    the backup workload.
                                  type: string
                              type: object
                            type: array
                        required:
                        - name
                        type: object
                      type: array
                    componentDefRef:
                      description: "Specifies the name of ClusterComponentDefinition
                        defined in the ClusterDefinition. Must comply with the IANA
                        Service Naming rule. \n Deprecated since v0.9, should use
                        `componentDefs` instead. This field is maintained for backward
                        compatibility and its use is discouraged. Existing usage should
                        be updated to the current preferred approach to avoid compatibility
                        issues in future releases."
                      maxLength: 22
                      pattern: ^[a-z]([a-z0-9\-]*[a-z0-9])?$
                      type: string
                    componentDefs:
                      description: Specifies a list of names of ComponentDefinitions
                        that the specified ClusterDefinition references. They should
                        be different versions of definitions of the same component,
                        thus allowing them to share a single BackupPolicy. Each name
                        must adhere to the IANA Service Naming rule.
                      items:
                        type: string
                      type: array
                    schedules:
                      description: Defines the execution plans for backup tasks, specifying
                        when and how backups should occur, and the retention period
                        of backup files.
                      items:
                        properties:
                          backupMethod:
                            description: Defines the backup method name that is defined
                              in backupPolicy.
                            type: string
                          cronExpression:
                            description: Represents the cron expression for schedule,
                              with the timezone set in UTC. Refer to https://en.wikipedia.org/wiki/Cron
                              for more details.
                            type: string
                          enabled:
                            description: Specifies whether the backup schedule is
                              enabled or not.
                            type: boolean
                          retentionPeriod:
                            default: 7d
                            description: "Determines the duration for which the backup
                              should be retained. The controller will remove all backups
                              that are older than the RetentionPeriod. For instance,
                              a RetentionPeriod of `30d` will retain only the backups
                              from the last 30 days. Sample duration format: \n -
                              years: \t2y - months: \t6mo - days: \t\t30d - hours:
                              \t12h - minutes: \t30m \n These durations can also be
                              combined, for example: 30d12h30m."
                            type: string
                        required:
                        - backupMethod
                        - cronExpression
                        type: object
                      type: array
                    target:
                      description: Defines the selection criteria of instance to be
                        backed up, and the connection credential to be used during
                        the backup process.
                      properties:
                        account:
                          description: "If `backupPolicy.componentDefs` is set, this
                            field is required to specify the system account name.
                            This account must match one listed in `componentDefinition.spec.systemAccounts[*].name`.
                            The corresponding secret created by this account is used
                            to connect to the database. \n If `backupPolicy.componentDefRef`
                            (a legacy and deprecated API) is set, the secret defined
                            in `clusterDefinition.spec.ConnectionCredential` is used
                            instead."
                          type: string
                        connectionCredentialKey:
                          description: Specifies the keys of the connection credential
                            secret defined in `clusterDefinition.spec.ConnectionCredential`.
                            It will be ignored when the `account` is set.
                          properties:
                            hostKey:
                              description: Defines the key of the host in the connection
                                credential secret.
                              type: string
                            passwordKey:
                              description: Represents the key of the password in the
                                connection credential secret. If not specified, the
                                default key "password" is used.
                              type: string
                            portKey:
                              description: Indicates map key of the port in the connection
                                credential secret.
                              type: string
                            usernameKey:
                              description: Represents the key of the username in the
                                connection credential secret. If not specified, the
                                default key "username" is used.
                              type: string
                          type: object
                        role:
                          description: "Specifies the role to select one or more replicas
                            for backup. \n - If no replica with the specified role
                            exists, the backup task will fail. Special case: If there
                            is only one replica in the cluster, it will be used for
                            backup, even if its role differs from the specified one.
                            For example, if you specify backing up on a secondary
                            replica, but the cluster is single-node with only one
                            primary replica, the primary will be used for backup.
                            Future versions will address this special case using role
                            priorities. - If multiple replicas satisfy the specified
                            role, the choice (`Any` or `All`) will be made according
                            to the `strategy` field below."
                          type: string
                        strategy:
                          description: "Specifies the PodSelectionStrategy to use
                            when multiple pods are selected for the backup target.
                            Valid values are: \n - Any: Selects any one pod that matches
                            the labelsSelector. - All: Selects all pods that match
                            the labelsSelector."
                          enum:
                          - Any
                          - All
                          type: string
                      required:
                      - role
                      type: object
                  required:
                  - backupMethods
                  type: object
                minItems: 1
                type: array
              clusterDefinitionRef:
                description: Specifies the name of a ClusterDefinition. This is an
                  immutable attribute that cannot be changed after creation. And this
                  field is deprecated since v0.9, consider using the ComponentDef
                  instead.
                pattern: ^[a-z0-9]([a-z0-9\.\-]*[a-z0-9])?$
                type: string
                x-kubernetes-validations:
                - message: clusterDefinitionRef is immutable
                  rule: self == oldSelf
              identifier:
                description: "Specifies a unique identifier for the BackupPolicyTemplate.
                  \n This identifier will be used as the suffix of the name of automatically
                  generated BackupPolicy. This prevents unintended overwriting of
                  BackupPolicies due to name conflicts when multiple BackupPolicyTemplates
                  are present. For instance, using \"backup-policy\" for regular backups
                  and \"backup-policy-hscale\" for horizontal-scale ops can differentiate
                  the policies."
                maxLength: 20
                type: string
            required:
            - backupPolicies
            type: object
          status:
            description: Populated by the system, it represents the current information
              about the BackupPolicyTemplate.
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
