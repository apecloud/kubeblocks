apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.1
  labels:
    app.kubernetes.io/name: kubeblocks
  name: backuppolicytemplates.apps.kubeblocks.io
spec:
  group: apps.kubeblocks.io
  names:
    categories:
    - kubeblocks
    kind: BackupPolicyTemplate
    listKind: BackupPolicyTemplateList
    plural: backuppolicytemplates
    shortNames:
    - bpt
    singular: backuppolicytemplate
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - description: ClusterDefinition referenced by cluster.
      jsonPath: .spec.clusterDefinitionRef
      name: CLUSTER-DEFINITION
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: BackupPolicyTemplate is the Schema for the BackupPolicyTemplates
          API (defined by provider)
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: BackupPolicyTemplateSpec defines the desired state of BackupPolicyTemplate
            properties:
              backupPolicies:
                description: backupPolicies is a list of backup policy template for
                  the specified componentDefinition.
                items:
                  properties:
                    backoffLimit:
                      description: Specifies the number of retries before marking
                        the backup failed.
                      format: int32
                      maximum: 10
                      minimum: 0
                      type: integer
                    backupMethods:
                      description: backupMethods defines the backup methods.
                      items:
                        properties:
                          actionSetName:
                            description: actionSetName refers to the ActionSet object
                              that defines the backup actions. For volume snapshot
                              backup, the actionSet is not required, the controller
                              will use the CSI volume snapshotter to create the snapshot.
                            type: string
                          env:
                            description: env specifies the environment variables for
                              the backup workload.
                            items:
                              description: EnvVar represents an environment variable
                                present in a Container.
                              properties:
                                name:
                                  description: Name of the environment variable. Must
                                    be a C_IDENTIFIER.
                                  type: string
                                value:
                                  description: 'Variable references $(VAR_NAME) are
                                    expanded using the previously defined environment
                                    variables in the container and any service environment
                                    variables. If a variable cannot be resolved, the
                                    reference in the input string will be unchanged.
                                    Double $$ are reduced to a single $, which allows
                                    for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)"
                                    will produce the string literal "$(VAR_NAME)".
                                    Escaped references will never be expanded, regardless
                                    of whether the variable exists or not. Defaults
                                    to "".'
                                  type: string
                                valueFrom:
                                  description: Source for the environment variable's
                                    value. Cannot be used if value is not empty.
                                  properties:
                                    configMapKeyRef:
                                      description: Selects a key of a ConfigMap.
                                      properties:
                                        key:
                                          description: The key to select.
                                          type: string
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                        optional:
                                          description: Specify whether the ConfigMap
                                            or its key must be defined
                                          type: boolean
                                      required:
                                      - key
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    fieldRef:
                                      description: 'Selects a field of the pod: supports
                                        metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`,
                                        `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                        spec.serviceAccountName, status.hostIP, status.podIP,
                                        status.podIPs.'
                                      properties:
                                        apiVersion:
                                          description: Version of the schema the FieldPath
                                            is written in terms of, defaults to "v1".
                                          type: string
                                        fieldPath:
                                          description: Path of the field to select
                                            in the specified API version.
                                          type: string
                                      required:
                                      - fieldPath
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    resourceFieldRef:
                                      description: 'Selects a resource of the container:
                                        only resources limits and requests (limits.cpu,
                                        limits.memory, limits.ephemeral-storage, requests.cpu,
                                        requests.memory and requests.ephemeral-storage)
                                        are currently supported.'
                                      properties:
                                        containerName:
                                          description: 'Container name: required for
                                            volumes, optional for env vars'
                                          type: string
                                        divisor:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: Specifies the output format
                                            of the exposed resources, defaults to
                                            "1"
                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          x-kubernetes-int-or-string: true
                                        resource:
                                          description: 'Required: resource to select'
                                          type: string
                                      required:
                                      - resource
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    secretKeyRef:
                                      description: Selects a key of a secret in the
                                        pod's namespace
                                      properties:
                                        key:
                                          description: The key of the secret to select
                                            from.  Must be a valid secret key.
                                          type: string
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                        optional:
                                          description: Specify whether the Secret
                                            or its key must be defined
                                          type: boolean
                                      required:
                                      - key
                                      type: object
                                      x-kubernetes-map-type: atomic
                                  type: object
                              required:
                              - name
                              type: object
                            type: array
                          envMapping:
                            description: envMapping defines the variables of cluster
                              mapped to env values' keys.
                            items:
                              properties:
                                key:
                                  description: env key which needs to mapping.
                                  type: string
                                valueFrom:
                                  description: valueFrom defines source of the env
                                    value.
                                  properties:
                                    clusterVersionRef:
                                      description: mapped ClusterVersionRef to env
                                        value.
                                      items:
                                        properties:
                                          mappingValue:
                                            description: mapping value for the specified
                                              ClusterVersion names.
                                            type: string
                                          names:
                                            description: the array of ClusterVersion
                                              name which can be mapped to the env
                                              value.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - mappingValue
                                        - names
                                        type: object
                                      type: array
                                  required:
                                  - clusterVersionRef
                                  type: object
                              required:
                              - key
                              - valueFrom
                              type: object
                            type: array
                          name:
                            description: the name of backup method.
                            pattern: ^[a-z0-9]([a-z0-9\.\-]*[a-z0-9])?$
                            type: string
                          runtimeSettings:
                            description: runtimeSettings specifies runtime settings
                              for the backup workload container.
                            properties:
                              resources:
                                description: 'resources specifies the resource required
                                  by container. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                                properties:
                                  claims:
                                    description: "Claims lists the names of resources,
                                      defined in spec.resourceClaims, that are used
                                      by this container. \n This is an alpha field
                                      and requires enabling the DynamicResourceAllocation
                                      feature gate. \n This field is immutable. It
                                      can only be set for containers."
                                    items:
                                      description: ResourceClaim references one entry
                                        in PodSpec.ResourceClaims.
                                      properties:
                                        name:
                                          description: Name must match the name of
                                            one entry in pod.spec.resourceClaims of
                                            the Pod where this field is used. It makes
                                            that resource available inside a container.
                                          type: string
                                      required:
                                      - name
                                      type: object
                                    type: array
                                    x-kubernetes-list-map-keys:
                                    - name
                                    x-kubernetes-list-type: map
                                  limits:
                                    additionalProperties:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    description: 'Limits describes the maximum amount
                                      of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                    type: object
                                  requests:
                                    additionalProperties:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    description: 'Requests describes the minimum amount
                                      of compute resources required. If Requests is
                                      omitted for a container, it defaults to Limits
                                      if that is explicitly specified, otherwise to
                                      an implementation-defined value. Requests cannot
                                      exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                    type: object
                                type: object
                            type: object
                          snapshotVolumes:
                            default: false
                            description: snapshotVolumes specifies whether to take
                              snapshots of persistent volumes. if true, the BackupScript
                              is not required, the controller will use the CSI volume
                              snapshotter to create the snapshot.
                            type: boolean
                          target:
                            description: target specifies the target information to
                              back up, it will override the global target policy.
                            properties:
                              account:
                                description: refer to spec.componentDef.systemAccounts.accounts[*].name
                                  in ClusterDefinition. the secret created by this
                                  account will be used to connect the database. if
                                  not set, the secret created by spec.ConnectionCredential
                                  of the ClusterDefinition will be used. it will be
                                  transformed to a secret for BackupPolicy's target
                                  secret.
                                type: string
                              connectionCredential:
                                description: connectionCredential specifies the connection
                                  credential to connect to the target database cluster.
                                properties:
                                  hostKey:
                                    description: hostKey specifies the map key of
                                      the host in the connection credential secret.
                                    type: string
                                  passwordKey:
                                    default: password
                                    description: passwordKey specifies the map key
                                      of the password in the connection credential
                                      secret. This password will be saved in the backup
                                      annotation for full backup. You can use the
                                      environment variable DP_ENCRYPTION_KEY to specify
                                      encryption key.
                                    type: string
                                  portKey:
                                    description: portKey specifies the map key of
                                      the port in the connection credential secret.
                                    type: string
                                  secretName:
                                    description: secretName refers to the Secret object
                                      that contains the connection credential.
                                    pattern: ^[a-z0-9]([a-z0-9\.\-]*[a-z0-9])?$
                                    type: string
                                  usernameKey:
                                    default: username
                                    description: usernameKey specifies the map key
                                      of the user in the connection credential secret.
                                    type: string
                                required:
                                - secretName
                                type: object
                              connectionCredentialKey:
                                description: connectionCredentialKey defines connection
                                  credential key in secret which created by spec.ConnectionCredential
                                  of the ClusterDefinition. it will be ignored when
                                  "account" is set.
                                properties:
                                  hostKey:
                                    description: hostKey specifies the map key of
                                      the host in the connection credential secret.
                                    type: string
                                  passwordKey:
                                    description: the key of password in the ConnectionCredential
                                      secret. if not set, the default key is "password".
                                    type: string
                                  portKey:
                                    description: portKey specifies the map key of
                                      the port in the connection credential secret.
                                    type: string
                                  usernameKey:
                                    description: the key of username in the ConnectionCredential
                                      secret. if not set, the default key is "username".
                                    type: string
                                type: object
                              podSelector:
                                description: podSelector is used to find the target
                                  pod. The volumes of the target pod will be backed
                                  up.
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label
                                      selector requirements. The requirements are
                                      ANDed.
                                    items:
                                      description: A label selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the
                                            selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's
                                            relationship to a set of values. Valid
                                            operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string
                                            values. If the operator is In or NotIn,
                                            the values array must be non-empty. If
                                            the operator is Exists or DoesNotExist,
                                            the values array must be empty. This array
                                            is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value}
                                      pairs. A single {key,value} in the matchLabels
                                      map is equivalent to an element of matchExpressions,
                                      whose key field is "key", the operator is "In",
                                      and the values array contains only "value".
                                      The requirements are ANDed.
                                    type: object
                                  strategy:
                                    default: Any
                                    description: 'strategy specifies the strategy
                                      to select the target pod when multiple pods
                                      are selected. Valid values are: - Any: select
                                      any one pod that match the labelsSelector.'
                                    enum:
                                    - Any
                                    - All
                                    type: string
                                type: object
                                x-kubernetes-map-type: atomic
                              resources:
                                description: resources specifies the kubernetes resources
                                  to back up.
                                properties:
                                  excluded:
                                    description: excluded is a slice of namespaced-scoped
                                      resource type names to exclude in the kubernetes
                                      resources. The default value is empty.
                                    items:
                                      type: string
                                    type: array
                                  included:
                                    default:
                                    - '*'
                                    description: included is a slice of namespaced-scoped
                                      resource type names to include in the kubernetes
                                      resources. The default value is "*", which means
                                      all resource types will be included.
                                    items:
                                      type: string
                                    type: array
                                  selector:
                                    description: selector is a metav1.LabelSelector
                                      to filter the target kubernetes resources that
                                      need to be backed up. If not set, will do not
                                      back up any kubernetes resources.
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of
                                          label selector requirements. The requirements
                                          are ANDed.
                                        items:
                                          description: A label selector requirement
                                            is a selector that contains values, a
                                            key, and an operator that relates the
                                            key and values.
                                          properties:
                                            key:
                                              description: key is the label key that
                                                the selector applies to.
                                              type: string
                                            operator:
                                              description: operator represents a key's
                                                relationship to a set of values. Valid
                                                operators are In, NotIn, Exists and
                                                DoesNotExist.
                                              type: string
                                            values:
                                              description: values is an array of string
                                                values. If the operator is In or NotIn,
                                                the values array must be non-empty.
                                                If the operator is Exists or DoesNotExist,
                                                the values array must be empty. This
                                                array is replaced during a strategic
                                                merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                          - key
                                          - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: matchLabels is a map of {key,value}
                                          pairs. A single {key,value} in the matchLabels
                                          map is equivalent to an element of matchExpressions,
                                          whose key field is "key", the operator is
                                          "In", and the values array contains only
                                          "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                    x-kubernetes-map-type: atomic
                                type: object
                              role:
                                description: 'select instance of corresponding role
                                  for backup, role are: - the name of Leader/Follower/Leaner
                                  for Consensus component. - primary or secondary
                                  for Replication component. finally, invalid role
                                  of the component will be ignored. such as if workload
                                  type is Replication and component''s replicas is
                                  1, the secondary role is invalid. and it also will
                                  be ignored when component is Stateful/Stateless.
                                  the role will be transformed to a role LabelSelector
                                  for BackupPolicy''s target attribute.'
                                type: string
                              serviceAccountName:
                                description: serviceAccountName specifies the service
                                  account to run the backup workload.
                                type: string
                            type: object
                          targetVolumes:
                            description: targetVolumes specifies which volumes from
                              the target should be mounted in the backup workload.
                            properties:
                              volumeMounts:
                                description: volumeMounts specifies the mount for
                                  the volumes specified in `Volumes` section.
                                items:
                                  description: VolumeMount describes a mounting of
                                    a Volume within a container.
                                  properties:
                                    mountPath:
                                      description: Path within the container at which
                                        the volume should be mounted.  Must not contain
                                        ':'.
                                      type: string
                                    mountPropagation:
                                      description: mountPropagation determines how
                                        mounts are propagated from the host to container
                                        and the other way around. When not set, MountPropagationNone
                                        is used. This field is beta in 1.10.
                                      type: string
                                    name:
                                      description: This must match the Name of a Volume.
                                      type: string
                                    readOnly:
                                      description: Mounted read-only if true, read-write
                                        otherwise (false or unspecified). Defaults
                                        to false.
                                      type: boolean
                                    subPath:
                                      description: Path within the volume from which
                                        the container's volume should be mounted.
                                        Defaults to "" (volume's root).
                                      type: string
                                    subPathExpr:
                                      description: Expanded path within the volume
                                        from which the container's volume should be
                                        mounted. Behaves similarly to SubPath but
                                        environment variable references $(VAR_NAME)
                                        are expanded using the container's environment.
                                        Defaults to "" (volume's root). SubPathExpr
                                        and SubPath are mutually exclusive.
                                      type: string
                                  required:
                                  - mountPath
                                  - name
                                  type: object
                                type: array
                              volumes:
                                description: Volumes indicates the list of volumes
                                  of targeted application that should be mounted on
                                  the backup job.
                                items:
                                  type: string
                                type: array
                            type: object
                        required:
                        - name
                        type: object
                      type: array
                    componentDef:
                      description: componentDef references componentDefinition. Need
                        to comply with IANA Service Naming rule.
                      maxLength: 22
                      pattern: ^[a-z]([a-z0-9\-]*[a-z0-9])?$
                      type: string
                    componentDefRef:
                      description: componentDefRef references componentDef defined
                        in ClusterDefinition spec. Need to comply with IANA Service
                        Naming rule.
                      maxLength: 22
                      pattern: ^[a-z]([a-z0-9\-]*[a-z0-9])?$
                      type: string
                    schedules:
                      description: schedule policy for backup.
                      items:
                        properties:
                          backupMethod:
                            description: backupMethod specifies the backup method
                              name that is defined in backupPolicy.
                            type: string
                          cronExpression:
                            description: the cron expression for schedule, the timezone
                              is in UTC. see https://en.wikipedia.org/wiki/Cron.
                            type: string
                          enabled:
                            description: enabled specifies whether the backup schedule
                              is enabled or not.
                            type: boolean
                          retentionPeriod:
                            default: 7d
                            description: "retentionPeriod determines a duration up
                              to which the backup should be kept. controller will
                              remove all backups that are older than the RetentionPeriod.
                              For example, RetentionPeriod of `30d` will keep only
                              the backups of last 30 days. Sample duration format:
                              - years: \t2y - months: \t6mo - days: \t\t30d - hours:
                              \t12h - minutes: \t30m You can also combine the above
                              durations. For example: 30d12h30m"
                            type: string
                        required:
                        - backupMethod
                        - cronExpression
                        type: object
                      type: array
                    target:
                      description: target instance for backup.
                      properties:
                        account:
                          description: refer to spec.componentDef.systemAccounts.accounts[*].name
                            in ClusterDefinition. the secret created by this account
                            will be used to connect the database. if not set, the
                            secret created by spec.ConnectionCredential of the ClusterDefinition
                            will be used. it will be transformed to a secret for BackupPolicy's
                            target secret.
                          type: string
                        connectionCredentialKey:
                          description: connectionCredentialKey defines connection
                            credential key in secret which created by spec.ConnectionCredential
                            of the ClusterDefinition. it will be ignored when "account"
                            is set.
                          properties:
                            hostKey:
                              description: hostKey specifies the map key of the host
                                in the connection credential secret.
                              type: string
                            passwordKey:
                              description: the key of password in the ConnectionCredential
                                secret. if not set, the default key is "password".
                              type: string
                            portKey:
                              description: portKey specifies the map key of the port
                                in the connection credential secret.
                              type: string
                            usernameKey:
                              description: the key of username in the ConnectionCredential
                                secret. if not set, the default key is "username".
                              type: string
                          type: object
                        role:
                          description: 'select instance of corresponding role for
                            backup, role are: - the name of Leader/Follower/Leaner
                            for Consensus component. - primary or secondary for Replication
                            component. finally, invalid role of the component will
                            be ignored. such as if workload type is Replication and
                            component''s replicas is 1, the secondary role is invalid.
                            and it also will be ignored when component is Stateful/Stateless.
                            the role will be transformed to a role LabelSelector for
                            BackupPolicy''s target attribute.'
                          type: string
                      type: object
                  required:
                  - backupMethods
                  type: object
                minItems: 1
                type: array
              clusterDefinitionRef:
                description: clusterDefinitionRef references ClusterDefinition name,
                  this is an immutable attribute.
                pattern: ^[a-z0-9]([a-z0-9\.\-]*[a-z0-9])?$
                type: string
                x-kubernetes-validations:
                - message: clusterDefinitionRef is immutable
                  rule: self == oldSelf
              identifier:
                description: Identifier is a unique identifier for this BackupPolicyTemplate.
                  this identifier will be the suffix of the automatically generated
                  backupPolicy name. and must be added when multiple BackupPolicyTemplates
                  exist, otherwise the generated backupPolicy override will occur.
                maxLength: 20
                type: string
            required:
            - backupPolicies
            - clusterDefinitionRef
            type: object
          status:
            description: BackupPolicyTemplateStatus defines the observed state of
              BackupPolicyTemplate
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
