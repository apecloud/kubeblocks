---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.0
  creationTimestamp: null
  name: clusters.apps.kubeblocks.io
spec:
  group: apps.kubeblocks.io
  names:
    categories:
    - kubeblocks
    - all
    kind: Cluster
    listKind: ClusterList
    plural: clusters
    singular: cluster
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: ClusterDefinition referenced by cluster.
      jsonPath: .spec.clusterDefinitionRef
      name: CLUSTER-DEFINITION
      type: string
    - description: Cluster Application Version.
      jsonPath: .spec.clusterVersionRef
      name: VERSION
      type: string
    - description: Cluster termination policy.
      jsonPath: .spec.terminationPolicy
      name: TERMINATION-POLICY
      type: string
    - description: Cluster Status.
      jsonPath: .status.phase
      name: STATUS
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Cluster is the Schema for the clusters API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ClusterSpec defines the desired state of Cluster.
            properties:
              affinity:
                description: affinity is a group of affinity scheduling rules.
                properties:
                  nodeLabels:
                    additionalProperties:
                      type: string
                    description: nodeLabels describes that pods must be scheduled
                      to the nodes with the specified node labels.
                    type: object
                  podAntiAffinity:
                    default: Preferred
                    description: podAntiAffinity describes the anti-affinity level
                      of pods within a component. Preferred means try spread pods
                      by `TopologyKeys`. Required means must spread pods by `TopologyKeys`.
                    enum:
                    - Preferred
                    - Required
                    type: string
                  tenancy:
                    default: SharedNode
                    description: tenancy describes how pods are distributed across
                      node. SharedNode means multiple pods may share the same node.
                      DedicatedNode means each pod runs on their own dedicated node.
                    enum:
                    - SharedNode
                    - DedicatedNode
                    type: string
                  topologyKeys:
                    description: topologyKey is the key of node labels. Nodes that
                      have a label with this key and identical values are considered
                      to be in the same topology. It's used as the topology domain
                      for pod anti-affinity and pod spread constraint. Some well-known
                      label keys, such as "kubernetes.io/hostname" and "topology.kubernetes.io/zone"
                      are often used as TopologyKey, as well as any other custom label
                      key.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                type: object
              availabilityPolicy:
                description: availabilityPolicy describes the availability policy,
                  including zone, node, and none.
                enum:
                - zone
                - node
                - none
                type: string
              backup:
                description: cluster backup configuration.
                properties:
                  cronExpression:
                    description: the cron expression for schedule, the timezone is
                      in UTC. see https://en.wikipedia.org/wiki/Cron.
                    type: string
                  enabled:
                    default: false
                    description: enabled defines whether to enable automated backup.
                    type: boolean
                  method:
                    allOf:
                    - enum:
                      - snapshot
                      - backupTool
                    - enum:
                      - snapshot
                      - backupTool
                    default: snapshot
                    description: 'backup method, support: snapshot, backupTool.'
                    type: string
                  pitrEnabled:
                    default: false
                    description: pitrEnabled defines whether to enable point-in-time
                      recovery.
                    type: boolean
                  repoName:
                    description: repoName is the name of the backupRepo, if not set,
                      will use the default backupRepo.
                    type: string
                  retentionPeriod:
                    default: 1d
                    description: retentionPeriod is a time string ending with the
                      'd'|'D'|'h'|'H' character to describe how long the Backup should
                      be retained. if not set, will be retained forever.
                    pattern: ^\d+[d|D|h|H]$
                    type: string
                  startingDeadlineMinutes:
                    description: startingDeadlineMinutes defines the deadline in minutes
                      for starting the backup job if it misses scheduled time for
                      any reason.
                    format: int64
                    maximum: 1440
                    minimum: 0
                    type: integer
                required:
                - method
                type: object
              clusterDefinitionRef:
                description: Cluster referencing ClusterDefinition name. This is an
                  immutable attribute.
                maxLength: 63
                pattern: ^[a-z0-9]([a-z0-9\.\-]*[a-z0-9])?$
                type: string
                x-kubernetes-validations:
                - message: clusterDefinitionRef is immutable
                  rule: self == oldSelf
              clusterVersionRef:
                description: Cluster referencing ClusterVersion name.
                maxLength: 63
                pattern: ^[a-z0-9]([a-z0-9\.\-]*[a-z0-9])?$
                type: string
              componentSpecs:
                description: List of componentSpecs you want to replace in ClusterDefinition
                  and ClusterVersion. It will replace the field in ClusterDefinition's
                  and ClusterVersion's component if type is matching.
                items:
                  description: ClusterComponentSpec defines the cluster component
                    spec.
                  properties:
                    affinity:
                      description: affinity describes affinities specified by users.
                      properties:
                        nodeLabels:
                          additionalProperties:
                            type: string
                          description: nodeLabels describes that pods must be scheduled
                            to the nodes with the specified node labels.
                          type: object
                        podAntiAffinity:
                          default: Preferred
                          description: podAntiAffinity describes the anti-affinity
                            level of pods within a component. Preferred means try
                            spread pods by `TopologyKeys`. Required means must spread
                            pods by `TopologyKeys`.
                          enum:
                          - Preferred
                          - Required
                          type: string
                        tenancy:
                          default: SharedNode
                          description: tenancy describes how pods are distributed
                            across node. SharedNode means multiple pods may share
                            the same node. DedicatedNode means each pod runs on their
                            own dedicated node.
                          enum:
                          - SharedNode
                          - DedicatedNode
                          type: string
                        topologyKeys:
                          description: topologyKey is the key of node labels. Nodes
                            that have a label with this key and identical values are
                            considered to be in the same topology. It's used as the
                            topology domain for pod anti-affinity and pod spread constraint.
                            Some well-known label keys, such as "kubernetes.io/hostname"
                            and "topology.kubernetes.io/zone" are often used as TopologyKey,
                            as well as any other custom label key.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                      type: object
                    classDefRef:
                      description: classDefRef references the class defined in ComponentClassDefinition.
                      properties:
                        class:
                          description: Class refers to the name of the class that
                            is defined in the ComponentClassDefinition.
                          type: string
                        name:
                          description: Name refers to the name of the ComponentClassDefinition.
                          maxLength: 63
                          pattern: ^[a-z0-9]([a-z0-9\.\-]*[a-z0-9])?$
                          type: string
                      required:
                      - class
                      type: object
                    componentDefRef:
                      description: componentDefRef references componentDef defined
                        in ClusterDefinition spec. Need to comply with IANA Service
                        Naming rule.
                      maxLength: 22
                      pattern: ^[a-z]([a-z0-9\-]*[a-z0-9])?$
                      type: string
                    enabledLogs:
                      description: enabledLogs indicates which log file takes effect
                        in the database cluster. element is the log type which is
                        defined in cluster definition logConfig.name, and will set
                        relative variables about this log type in database kernel.
                      items:
                        type: string
                      type: array
                      x-kubernetes-list-type: set
                    issuer:
                      description: issuer defines provider context for TLS certs.
                        required when TLS enabled
                      properties:
                        name:
                          default: KubeBlocks
                          description: 'Name of issuer. Options supported: - KubeBlocks
                            - Certificates signed by KubeBlocks Operator. - UserProvided
                            - User provided own CA-signed certificates.'
                          enum:
                          - KubeBlocks
                          - UserProvided
                          type: string
                        secretRef:
                          description: secretRef. TLS certs Secret reference required
                            when from is UserProvided
                          properties:
                            ca:
                              description: CA cert key in Secret
                              type: string
                            cert:
                              description: Cert key in Secret
                              type: string
                            key:
                              description: Key of TLS private key in Secret
                              type: string
                            name:
                              description: Name of the Secret
                              type: string
                          required:
                          - ca
                          - cert
                          - key
                          - name
                          type: object
                      required:
                      - name
                      type: object
                    monitor:
                      default: false
                      description: monitor is a switch to enable monitoring and is
                        set as false by default. KubeBlocks provides an extension
                        mechanism to support component level monitoring, which will
                        scrape metrics auto or manually from servers in component
                        and export metrics to Time Series Database.
                      type: boolean
                    name:
                      description: name defines cluster's component name, this name
                        is also part of Service DNS name, so this name will comply
                        with IANA Service Naming rule.
                      maxLength: 22
                      pattern: ^[a-z]([a-z0-9\-]*[a-z0-9])?$
                      type: string
                    noCreatePDB:
                      default: false
                      description: noCreatePDB defines the PodDisruptionBudget creation
                        behavior and is set to true if creation of PodDisruptionBudget
                        for this component is not needed. It defaults to false.
                      type: boolean
                    replicas:
                      default: 1
                      description: Component replicas. The default value is used in
                        ClusterDefinition spec if not specified.
                      format: int32
                      minimum: 0
                      type: integer
                    resources:
                      description: Resources requests and limits of workload.
                      properties:
                        claims:
                          description: "Claims lists the names of resources, defined
                            in spec.resourceClaims, that are used by this container.
                            \n This is an alpha field and requires enabling the DynamicResourceAllocation
                            feature gate. \n This field is immutable. It can only
                            be set for containers."
                          items:
                            description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                            properties:
                              name:
                                description: Name must match the name of one entry
                                  in pod.spec.resourceClaims of the Pod where this
                                  field is used. It makes that resource available
                                  inside a container.
                                type: string
                            required:
                            - name
                            type: object
                          type: array
                          x-kubernetes-list-map-keys:
                          - name
                          x-kubernetes-list-type: map
                        limits:
                          additionalProperties:
                            anyOf:
                            - type: integer
                            - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: 'Limits describes the maximum amount of compute
                            resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                            - type: integer
                            - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: 'Requests describes the minimum amount of compute
                            resources required. If Requests is omitted for a container,
                            it defaults to Limits if that is explicitly specified,
                            otherwise to an implementation-defined value. More info:
                            https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                          type: object
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    serviceAccountName:
                      description: serviceAccountName is the name of the ServiceAccount
                        that running component depends on.
                      type: string
                    services:
                      description: Services expose endpoints that can be accessed
                        by clients.
                      items:
                        properties:
                          annotations:
                            additionalProperties:
                              type: string
                            description: 'If ServiceType is LoadBalancer, cloud provider
                              related parameters can be put here More info: https://kubernetes.io/docs/concepts/services-networking/service/#loadbalancer.'
                            type: object
                          name:
                            description: Service name
                            maxLength: 15
                            type: string
                          serviceType:
                            default: ClusterIP
                            description: 'serviceType determines how the Service is
                              exposed. Valid options are ClusterIP, NodePort, and
                              LoadBalancer. "ClusterIP" allocates a cluster-internal
                              IP address for load-balancing to endpoints. Endpoints
                              are determined by the selector or if that is not specified,
                              they are determined by manual construction of an Endpoints
                              object or EndpointSlice objects. If clusterIP is "None",
                              no virtual IP is allocated and the endpoints are published
                              as a set of endpoints rather than a virtual IP. "NodePort"
                              builds on ClusterIP and allocates a port on every node
                              which routes to the same endpoints as the clusterIP.
                              "LoadBalancer" builds on NodePort and creates an external
                              load-balancer (if supported in the current cloud) which
                              routes to the same endpoints as the clusterIP. More
                              info: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types.'
                            enum:
                            - ClusterIP
                            - NodePort
                            - LoadBalancer
                            type: string
                            x-kubernetes-preserve-unknown-fields: true
                        required:
                        - name
                        type: object
                      type: array
                    switchPolicy:
                      description: switchPolicy defines the strategy for switchover
                        and failover when workloadType is Replication.
                      properties:
                        type:
                          default: Noop
                          description: 'clusterSwitchPolicy defines type of the switchPolicy
                            when workloadType is Replication. MaximumAvailability:
                            [WIP] when the primary is active, do switch if the synchronization
                            delay = 0 in the user-defined lagProbe data delay detection
                            logic, otherwise do not switch. The primary is down, switch
                            immediately. It will be available in future versions.
                            MaximumDataProtection: [WIP] when the primary is active,
                            do switch if synchronization delay = 0 in the user-defined
                            lagProbe data lag detection logic, otherwise do not switch.
                            If the primary is down, if it can be judged that the primary
                            and secondary data are consistent, then do the switch,
                            otherwise do not switch. It will be available in future
                            versions. Noop: KubeBlocks will not perform high-availability
                            switching on components. Users need to implement HA by
                            themselves or integrate open source HA solution.'
                          enum:
                          - Noop
                          type: string
                      type: object
                    tls:
                      description: Enables or disables TLS certs.
                      type: boolean
                    tolerations:
                      description: Component tolerations will override ClusterSpec.Tolerations
                        if specified.
                      items:
                        description: The pod this Toleration is attached to tolerates
                          any taint that matches the triple <key,value,effect> using
                          the matching operator <operator>.
                        properties:
                          effect:
                            description: Effect indicates the taint effect to match.
                              Empty means match all taint effects. When specified,
                              allowed values are NoSchedule, PreferNoSchedule and
                              NoExecute.
                            type: string
                          key:
                            description: Key is the taint key that the toleration
                              applies to. Empty means match all taint keys. If the
                              key is empty, operator must be Exists; this combination
                              means to match all values and all keys.
                            type: string
                          operator:
                            description: Operator represents a key's relationship
                              to the value. Valid operators are Exists and Equal.
                              Defaults to Equal. Exists is equivalent to wildcard
                              for value, so that a pod can tolerate all taints of
                              a particular category.
                            type: string
                          tolerationSeconds:
                            description: TolerationSeconds represents the period of
                              time the toleration (which must be of effect NoExecute,
                              otherwise this field is ignored) tolerates the taint.
                              By default, it is not set, which means tolerate the
                              taint forever (do not evict). Zero and negative values
                              will be treated as 0 (evict immediately) by the system.
                            format: int64
                            type: integer
                          value:
                            description: Value is the taint value the toleration matches
                              to. If the operator is Exists, the value should be empty,
                              otherwise just a regular string.
                            type: string
                        type: object
                      type: array
                      x-kubernetes-preserve-unknown-fields: true
                    volumeClaimTemplates:
                      description: volumeClaimTemplates information for statefulset.spec.volumeClaimTemplates.
                      items:
                        properties:
                          name:
                            description: Reference `ClusterDefinition.spec.componentDefs.containers.volumeMounts.name`.
                            type: string
                          spec:
                            description: spec defines the desired characteristics
                              of a volume requested by a pod author.
                            properties:
                              accessModes:
                                description: 'accessModes contains the desired access
                                  modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1.'
                                items:
                                  type: string
                                type: array
                                x-kubernetes-preserve-unknown-fields: true
                              resources:
                                description: 'resources represents the minimum resources
                                  the volume should have. If RecoverVolumeExpansionFailure
                                  feature is enabled users are allowed to specify
                                  resource requirements that are lower than previous
                                  value but must still be higher than capacity recorded
                                  in the status field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources.'
                                properties:
                                  claims:
                                    description: "Claims lists the names of resources,
                                      defined in spec.resourceClaims, that are used
                                      by this container. \n This is an alpha field
                                      and requires enabling the DynamicResourceAllocation
                                      feature gate. \n This field is immutable. It
                                      can only be set for containers."
                                    items:
                                      description: ResourceClaim references one entry
                                        in PodSpec.ResourceClaims.
                                      properties:
                                        name:
                                          description: Name must match the name of
                                            one entry in pod.spec.resourceClaims of
                                            the Pod where this field is used. It makes
                                            that resource available inside a container.
                                          type: string
                                      required:
                                      - name
                                      type: object
                                    type: array
                                    x-kubernetes-list-map-keys:
                                    - name
                                    x-kubernetes-list-type: map
                                  limits:
                                    additionalProperties:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    description: 'Limits describes the maximum amount
                                      of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                    type: object
                                  requests:
                                    additionalProperties:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    description: 'Requests describes the minimum amount
                                      of compute resources required. If Requests is
                                      omitted for a container, it defaults to Limits
                                      if that is explicitly specified, otherwise to
                                      an implementation-defined value. More info:
                                      https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                    type: object
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              storageClassName:
                                description: 'storageClassName is the name of the
                                  StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1.'
                                type: string
                            type: object
                        required:
                        - name
                        type: object
                      type: array
                  required:
                  - componentDefRef
                  - name
                  - replicas
                  type: object
                minItems: 1
                type: array
                x-kubernetes-list-map-keys:
                - name
                x-kubernetes-list-type: map
              mode:
                description: 'mode specifies the mode of this cluster, the value of
                  this can be one of the following: Standalone, Replication, RaftGroup.'
                type: string
              monitor:
                description: monitor specifies the configuration of monitor
                properties:
                  monitoringInterval:
                    anyOf:
                    - type: integer
                    - type: string
                    description: monitoringInterval specifies interval of monitoring,
                      no monitor if set to 0
                    x-kubernetes-int-or-string: true
                type: object
              network:
                description: network specifies the configuration of network
                properties:
                  hostNetworkAccessible:
                    default: false
                    description: hostNetworkAccessible specifies whether host network
                      is accessible. It defaults to false
                    type: boolean
                  publiclyAccessible:
                    default: false
                    description: publiclyAccessible specifies whether it is publicly
                      accessible. It defaults to false
                    type: boolean
                type: object
              parameters:
                additionalProperties:
                  type: string
                description: customized parameters that is used in different clusterdefinition
                type: object
              replicas:
                description: replicas specifies the replicas of the first componentSpec,
                  if the replicas of the first componentSpec is specified, this value
                  will be ignored.
                format: int32
                type: integer
              resources:
                description: resources specifies the resources of the first componentSpec,
                  if the resources of the first componentSpec is specified, this value
                  will be ignored.
                properties:
                  cpu:
                    anyOf:
                    - type: integer
                    - type: string
                    description: 'cpu resource needed, more info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                  memory:
                    anyOf:
                    - type: integer
                    - type: string
                    description: 'memory resource needed, more info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                type: object
              storage:
                description: storage specifies the storage of the first componentSpec,
                  if the storage of the first componentSpec is specified, this value
                  will be ignored.
                properties:
                  size:
                    anyOf:
                    - type: integer
                    - type: string
                    description: 'storage size needed, more info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                type: object
              tenancy:
                description: tenancy describes how pods are distributed across node.
                  SharedNode means multiple pods may share the same node. DedicatedNode
                  means each pod runs on their own dedicated node.
                enum:
                - SharedNode
                - DedicatedNode
                type: string
              terminationPolicy:
                description: Cluster termination policy. Valid values are DoNotTerminate,
                  Halt, Delete, WipeOut. DoNotTerminate will block delete operation.
                  Halt will delete workload resources such as statefulset, deployment
                  workloads but keep PVCs. Delete is based on Halt and deletes PVCs.
                  WipeOut is based on Delete and wipe out all volume snapshots and
                  snapshot data from backup storage location.
                enum:
                - DoNotTerminate
                - Halt
                - Delete
                - WipeOut
                type: string
              tolerations:
                description: tolerations are attached to tolerate any taint that matches
                  the triple `key,value,effect` using the matching operator `operator`.
                items:
                  description: The pod this Toleration is attached to tolerates any
                    taint that matches the triple <key,value,effect> using the matching
                    operator <operator>.
                  properties:
                    effect:
                      description: Effect indicates the taint effect to match. Empty
                        means match all taint effects. When specified, allowed values
                        are NoSchedule, PreferNoSchedule and NoExecute.
                      type: string
                    key:
                      description: Key is the taint key that the toleration applies
                        to. Empty means match all taint keys. If the key is empty,
                        operator must be Exists; this combination means to match all
                        values and all keys.
                      type: string
                    operator:
                      description: Operator represents a key's relationship to the
                        value. Valid operators are Exists and Equal. Defaults to Equal.
                        Exists is equivalent to wildcard for value, so that a pod
                        can tolerate all taints of a particular category.
                      type: string
                    tolerationSeconds:
                      description: TolerationSeconds represents the period of time
                        the toleration (which must be of effect NoExecute, otherwise
                        this field is ignored) tolerates the taint. By default, it
                        is not set, which means tolerate the taint forever (do not
                        evict). Zero and negative values will be treated as 0 (evict
                        immediately) by the system.
                      format: int64
                      type: integer
                    value:
                      description: Value is the taint value the toleration matches
                        to. If the operator is Exists, the value should be empty,
                        otherwise just a regular string.
                      type: string
                  type: object
                type: array
                x-kubernetes-preserve-unknown-fields: true
            required:
            - clusterDefinitionRef
            - terminationPolicy
            type: object
          status:
            description: ClusterStatus defines the observed state of Cluster.
            properties:
              clusterDefGeneration:
                description: clusterDefGeneration represents the generation number
                  of ClusterDefinition referenced.
                format: int64
                type: integer
              components:
                additionalProperties:
                  description: ClusterComponentStatus records components status.
                  properties:
                    consensusSetStatus:
                      description: consensusSetStatus specifies the mapping of role
                        and pod name.
                      properties:
                        followers:
                          description: Followers status.
                          items:
                            properties:
                              accessMode:
                                default: ReadWrite
                                description: accessMode defines what service this
                                  pod provides.
                                enum:
                                - None
                                - Readonly
                                - ReadWrite
                                type: string
                              name:
                                default: leader
                                description: Defines the role name.
                                type: string
                              pod:
                                default: Unknown
                                description: Pod name.
                                type: string
                            required:
                            - accessMode
                            - name
                            - pod
                            type: object
                          type: array
                        leader:
                          description: Leader status.
                          properties:
                            accessMode:
                              default: ReadWrite
                              description: accessMode defines what service this pod
                                provides.
                              enum:
                              - None
                              - Readonly
                              - ReadWrite
                              type: string
                            name:
                              default: leader
                              description: Defines the role name.
                              type: string
                            pod:
                              default: Unknown
                              description: Pod name.
                              type: string
                          required:
                          - accessMode
                          - name
                          - pod
                          type: object
                        learner:
                          description: Learner status.
                          properties:
                            accessMode:
                              default: ReadWrite
                              description: accessMode defines what service this pod
                                provides.
                              enum:
                              - None
                              - Readonly
                              - ReadWrite
                              type: string
                            name:
                              default: leader
                              description: Defines the role name.
                              type: string
                            pod:
                              default: Unknown
                              description: Pod name.
                              type: string
                          required:
                          - accessMode
                          - name
                          - pod
                          type: object
                      required:
                      - leader
                      type: object
                    message:
                      additionalProperties:
                        type: string
                      description: message records the component details message in
                        current phase. Keys are podName or deployName or statefulSetName.
                        The format is `ObjectKind/Name`.
                      type: object
                    phase:
                      description: 'phase describes the phase of the component and
                        the detail information of the phases are as following: Running:
                        the component is running. [terminal state] Stopped: the component
                        is stopped, as no running pod. [terminal state] Failed: the
                        component is unavailable, i.e. all pods are not ready for
                        Stateless/Stateful component and Leader/Primary pod is not
                        ready for Consensus/Replication component. [terminal state]
                        Abnormal: the component is running but part of its pods are
                        not ready. Leader/Primary pod is ready for Consensus/Replication
                        component. [terminal state] Creating: the component has entered
                        creating process. Updating: the component has entered updating
                        process, triggered by Spec. updated.'
                      enum:
                      - Running
                      - Stopped
                      - Failed
                      - Abnormal
                      - Creating
                      - Updating
                      type: string
                    podsReady:
                      description: podsReady checks if all pods of the component are
                        ready.
                      type: boolean
                    podsReadyTime:
                      description: podsReadyTime what time point of all component
                        pods are ready, this time is the ready time of the last component
                        pod.
                      format: date-time
                      type: string
                    replicationSetStatus:
                      description: replicationSetStatus specifies the mapping of role
                        and pod name.
                      properties:
                        primary:
                          description: Primary status.
                          properties:
                            pod:
                              default: Unknown
                              description: Pod name.
                              type: string
                          required:
                          - pod
                          type: object
                        secondaries:
                          description: Secondaries status.
                          items:
                            properties:
                              pod:
                                default: Unknown
                                description: Pod name.
                                type: string
                            required:
                            - pod
                            type: object
                          type: array
                      required:
                      - primary
                      type: object
                  type: object
                description: components record the current status information of all
                  components of the cluster.
                type: object
              conditions:
                description: Describe current state of cluster API Resource, like
                  warning.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              message:
                description: message describes cluster details message in current
                  phase.
                type: string
              observedGeneration:
                description: observedGeneration is the most recent generation observed
                  for this Cluster. It corresponds to the Cluster's generation, which
                  is updated on mutation by the API Server.
                format: int64
                type: integer
              phase:
                description: 'phase describes the phase of the Cluster, the detail
                  information of the phases are as following: Running: cluster is
                  running, all its components are available. [terminal state] Stopped:
                  cluster has stopped, all its components are stopped. [terminal state]
                  Failed: cluster is unavailable. [terminal state] Abnormal: Cluster
                  is still running, but part of its components are Abnormal/Failed.
                  [terminal state] Creating: Cluster has entered creating process.
                  Updating: Cluster has entered updating process, triggered by Spec.
                  updated.'
                enum:
                - Running
                - Stopped
                - Failed
                - Abnormal
                - Creating
                - Updating
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
