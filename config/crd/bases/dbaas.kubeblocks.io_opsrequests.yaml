---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.0
  creationTimestamp: null
  name: opsrequests.dbaas.kubeblocks.io
spec:
  group: dbaas.kubeblocks.io
  names:
    categories:
    - dbaas
    - all
    kind: OpsRequest
    listKind: OpsRequestList
    plural: opsrequests
    shortNames:
    - ops
    singular: opsrequest
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Operation request type.
      jsonPath: .spec.type
      name: TYPE
      type: string
    - description: Operand cluster.
      jsonPath: .spec.clusterRef
      name: CLUSTER
      type: string
    - description: Operation status phase.
      jsonPath: .status.phase
      name: STATUS
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: OpsRequest is the Schema for the opsrequests API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: OpsRequestSpec defines the desired state of OpsRequest
            properties:
              clusterOps:
                description: ClusterOps defines operations in cluster scope, such
                  as Upgrade.
                properties:
                  upgrade:
                    properties:
                      appVersionRef:
                        description: AppVersionRef reference AppVersion name.
                        type: string
                    required:
                    - appVersionRef
                    type: object
                required:
                - upgrade
                type: object
              clusterRef:
                description: ClusterRef reference clusterDefinition.
                type: string
              componentOps:
                description: ComponentOpsList defines operations in component scope,
                  such as VolumeExpansion,VerticalScaling,HorizontalScaling.
                items:
                  properties:
                    componentNames:
                      description: ComponentNames defines which components perform
                        the operation.
                      items:
                        type: string
                      minItems: 1
                      type: array
                    horizontalScaling:
                      description: HorizontalScaling defines the variables that need
                        to input when scaling replicas.
                      properties:
                        replicas:
                          description: Replicas for the workloads.
                          format: int32
                          type: integer
                      type: object
                    reconfigure:
                      description: Reconfigure defines the variables that need to
                        input when changing parameters.
                      properties:
                        configurations:
                          description: Configurations defines which components perform
                            the operation.
                          items:
                            properties:
                              immediate:
                                type: boolean
                              mountPoint:
                                description: MountPoint is a volume name which file
                                  will mount to.
                                type: string
                              parameters:
                                items:
                                  properties:
                                    fileName:
                                      type: string
                                    pairs:
                                      items:
                                        properties:
                                          key:
                                            type: string
                                          value:
                                            type: string
                                        required:
                                        - key
                                        type: object
                                      minItems: 1
                                      type: array
                                  required:
                                  - pairs
                                  type: object
                                minItems: 1
                                type: array
                              reconfigurePolicy:
                                description: ReconfigurePolicy refers to the effective
                                  policy of the updated parameter. 1. If reconfigurePolicy
                                  = rolling, the controller will restart all specific
                                  containers in the Pod by using a rolling method.
                                  1. If reconfigurePolicy = parallel, the containers
                                  will be restarted simultaneously. 3. If reconfigurePolicy
                                  = autoReload, the sidecar will trigger the database
                                  instance to reload.
                                enum:
                                - parallel
                                - rolling
                                - autoReload
                                type: string
                            required:
                            - parameters
                            type: object
                          minItems: 1
                          type: array
                        selector:
                          description: A label selector is a label query over a set
                            of resources. The result of matchLabels and matchExpressions
                            are ANDed. An empty label selector matches all objects.
                            A null label selector matches no objects.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: A label selector requirement is a selector
                                  that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: operator represents a key's relationship
                                      to a set of values. Valid operators are In,
                                      NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: values is an array of string values.
                                      If the operator is In or NotIn, the values array
                                      must be non-empty. If the operator is Exists
                                      or DoesNotExist, the values array must be empty.
                                      This array is replaced during a strategic merge
                                      patch.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: matchLabels is a map of {key,value} pairs.
                                A single {key,value} in the matchLabels map is equivalent
                                to an element of matchExpressions, whose key field
                                is "key", the operator is "In", and the values array
                                contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                        triggeringTime:
                          description: TriggeringTime defines the time at which the
                            changing parameter to be applied.
                          maxLength: 19
                          minLength: 19
                          pattern: ^([0-9]{2})/([0-9]{2})/([0-9]{4}) ([0-9]{2}):([0-9]{2}):([0-9]{2})$
                          type: string
                        ttl:
                          description: TTL(Time to Live) defines the time period during
                            which changing parameters is valid.
                          format: int64
                          type: integer
                      required:
                      - configurations
                      type: object
                    verticalScaling:
                      description: VerticalScaling defines the variables that need
                        to input when scaling compute resources.
                      properties:
                        limits:
                          additionalProperties:
                            anyOf:
                            - type: integer
                            - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: 'Limits describes the maximum amount of compute
                            resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                            - type: integer
                            - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: 'Requests describes the minimum amount of compute
                            resources required. If Requests is omitted for a container,
                            it defaults to Limits if that is explicitly specified,
                            otherwise to an implementation-defined value. More info:
                            https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                          type: object
                      type: object
                    volumeExpansion:
                      description: VolumeExpansion defines the variables that need
                        to input when expanding a volume.
                      items:
                        properties:
                          name:
                            description: Name reference volumeClaimTemplate name from
                              cluster components.
                            type: string
                          storage:
                            anyOf:
                            - type: integer
                            - type: string
                            description: Storage the request storage size.
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                        required:
                        - name
                        - storage
                        type: object
                      type: array
                  required:
                  - componentNames
                  type: object
                type: array
              ttlSecondsAfterSucceed:
                description: TTLSecondsAfterSucceed OpsRequest will be deleted after
                  TTLSecondsAfterSucceed second when OpsRequest.status.phase is Succeed.
                format: int32
                type: integer
              type:
                description: Type defines the operation type.
                enum:
                - Upgrade
                - VerticalScaling
                - VolumeExpansion
                - HorizontalScaling
                - Restart
                type: string
            required:
            - clusterRef
            - type
            type: object
          status:
            description: OpsRequestStatus defines the observed state of OpsRequest
            properties:
              StartTimestamp:
                description: StartTimestamp The time when the OpsRequest started processing.
                format: date-time
                type: string
              completionTimestamp:
                description: CompletionTimestamp the OpsRequest completion time.
                format: date-time
                type: string
              components:
                additionalProperties:
                  properties:
                    phase:
                      description: Phase describe the component phase, reference ClusterDefinition.status.component.phase.
                      enum:
                      - Running
                      - Failed
                      - Abnormal
                      - Creating
                      - Updating
                      - Deleting
                      - Deleted
                      - VolumeExpanding
                      type: string
                    volumeClaimTemplates:
                      additionalProperties:
                        properties:
                          message:
                            type: string
                          persistentVolumeClaims:
                            additionalProperties:
                              properties:
                                message:
                                  type: string
                                status:
                                  description: Phase defines the CR .Status.Phase
                                  enum:
                                  - Running
                                  - Pending
                                  - Failed
                                  - Succeed
                                  type: string
                              type: object
                            description: PersistentVolumeClaimStatus describe the
                              persistentVolumeClaim status
                            type: object
                          requestStorage:
                            anyOf:
                            - type: integer
                            - type: string
                            description: RequestStorage the request storage size.
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          status:
                            description: Phase defines the CR .Status.Phase
                            enum:
                            - Running
                            - Pending
                            - Failed
                            - Succeed
                            type: string
                        type: object
                      description: VolumeClaimTemplates describe the volumeClaimTemplates
                        status when spec.type is VolumeExpansion
                      type: object
                  type: object
                description: Components record the status information of components
                  with spec.componentOps.componentNames.
                type: object
              conditions:
                description: Conditions describe opsRequest detail status.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{ // Represents the observations of a foo's
                    current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: observedGeneration is the most recent generation observed
                  for this Cluster. It corresponds to the Cluster's generation, which
                  is updated on mutation by the API Server.
                format: int64
                type: integer
              phase:
                description: Phase describe OpsRequest phase.
                enum:
                - Pending
                - Running
                - Failed
                - Succeed
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
