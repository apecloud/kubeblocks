---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.0
  creationTimestamp: null
  name: opsrequests.dbaas.kubeblocks.io
spec:
  group: dbaas.kubeblocks.io
  names:
    categories:
    - dbaas
    - all
    kind: OpsRequest
    listKind: OpsRequestList
    plural: opsrequests
    shortNames:
    - ops
    singular: opsrequest
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Operation request type.
      jsonPath: .spec.type
      name: TYPE
      type: string
    - description: Operand cluster.
      jsonPath: .spec.clusterRef
      name: CLUSTER
      type: string
    - description: Operation status phase.
      jsonPath: .status.phase
      name: STATUS
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: OpsRequest is the Schema for the opsrequests API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: OpsRequestSpec defines the desired state of OpsRequest
            properties:
              clusterRef:
                description: clusterRef reference clusterDefinition.
                type: string
              horizontalScaling:
                description: horizontalScaling defines what component need to horizontal
                  scale the specified replicas.
                items:
                  description: HorizontalScaling defines the variables of horizontal
                    scaling operation
                  properties:
                    componentName:
                      description: componentName cluster component name.
                      type: string
                    replicas:
                      description: replicas for the workloads.
                      format: int32
                      minimum: 0
                      type: integer
                  required:
                  - componentName
                  - replicas
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - componentName
                x-kubernetes-list-type: map
              restart:
                description: restart the specified component.
                items:
                  description: ComponentOps defines the common variables of component
                    scope operations.
                  properties:
                    componentName:
                      description: componentName cluster component name.
                      type: string
                  required:
                  - componentName
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - componentName
                x-kubernetes-list-type: map
              ttlSecondsAfterSucceed:
                description: ttlSecondsAfterSucceed OpsRequest will be deleted after
                  TTLSecondsAfterSucceed second when OpsRequest.status.phase is Succeed.
                format: int32
                type: integer
              type:
                description: type defines the operation type.
                enum:
                - Upgrade
                - VerticalScaling
                - VolumeExpansion
                - HorizontalScaling
                - Restart
                type: string
              upgrade:
                description: upgrade specify the cluster version by specifying clusterVersionRef.
                properties:
                  clusterVersionRef:
                    description: clusterVersionRef reference ClusterVersion name.
                    type: string
                required:
                - clusterVersionRef
                type: object
              verticalScaling:
                description: verticalScaling defines what component need to vertical
                  scale the specified compute resources.
                items:
                  description: VerticalScaling defines the variables that need to
                    input when scaling compute resources.
                  properties:
                    componentName:
                      description: componentName cluster component name.
                      type: string
                    limits:
                      additionalProperties:
                        anyOf:
                        - type: integer
                        - type: string
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                      description: 'Limits describes the maximum amount of compute
                        resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                      type: object
                    requests:
                      additionalProperties:
                        anyOf:
                        - type: integer
                        - type: string
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                      description: 'Requests describes the minimum amount of compute
                        resources required. If Requests is omitted for a container,
                        it defaults to Limits if that is explicitly specified, otherwise
                        to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                      type: object
                  required:
                  - componentName
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - componentName
                x-kubernetes-list-type: map
              volumeExpansion:
                description: volumeExpansion defines what component and volumeClaimTemplate
                  need to expand the specified storage.
                items:
                  description: VolumeExpansion defines the variables of volume expansion
                    operation.
                  properties:
                    componentName:
                      description: componentName cluster component name.
                      type: string
                    volumeClaimTemplates:
                      description: volumeClaimTemplates specify the storage size and
                        volumeClaimTemplate name.
                      items:
                        properties:
                          name:
                            description: name reference volumeClaimTemplate name from
                              cluster components.
                            type: string
                          storage:
                            anyOf:
                            - type: integer
                            - type: string
                            description: Request storage size.
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                        required:
                        - name
                        - storage
                        type: object
                      type: array
                      x-kubernetes-list-map-keys:
                      - name
                      x-kubernetes-list-type: map
                  required:
                  - componentName
                  - volumeClaimTemplates
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - componentName
                x-kubernetes-list-type: map
            required:
            - clusterRef
            - type
            type: object
          status:
            description: OpsRequestStatus defines the observed state of OpsRequest
            properties:
              StartTimestamp:
                description: startTimestamp The time when the OpsRequest started processing.
                format: date-time
                type: string
              completionTimestamp:
                description: completionTimestamp defines the OpsRequest completion
                  time.
                format: date-time
                type: string
              components:
                additionalProperties:
                  properties:
                    phase:
                      description: phase describe the component phase, reference ClusterDefinition.status.component.phase.
                      enum:
                      - Running
                      - Failed
                      - Abnormal
                      - Creating
                      - Updating
                      - Deleting
                      - Deleted
                      - VolumeExpanding
                      type: string
                    volumeClaimTemplates:
                      additionalProperties:
                        properties:
                          message:
                            type: string
                          persistentVolumeClaims:
                            additionalProperties:
                              properties:
                                message:
                                  type: string
                                status:
                                  description: Phase defines the CR .Status.Phase
                                  enum:
                                  - Running
                                  - Pending
                                  - Failed
                                  - Succeed
                                  type: string
                              type: object
                            description: persistentVolumeClaimStatus describe the
                              persistentVolumeClaim status
                            type: object
                          requestStorage:
                            anyOf:
                            - type: integer
                            - type: string
                            description: Request storage size.
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          status:
                            description: Phase defines the CR .Status.Phase
                            enum:
                            - Running
                            - Pending
                            - Failed
                            - Succeed
                            type: string
                        type: object
                      description: volumeClaimTemplates describe the volumeClaimTemplates
                        status when spec.type is VolumeExpansion
                      type: object
                  type: object
                description: components define the recorded the status information
                  of changed components for operation request.
                type: object
              conditions:
                description: conditions describe opsRequest detail status.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: observedGeneration is the most recent generation observed
                  for this Cluster. It corresponds to the Cluster's generation, which
                  is updated on mutation by the API Server.
                format: int64
                type: integer
              phase:
                description: phase describe OpsRequest phase.
                enum:
                - Pending
                - Running
                - Failed
                - Succeed
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
