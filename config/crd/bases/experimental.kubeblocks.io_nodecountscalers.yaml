apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.1
  labels:
    app.kubernetes.io/name: kubeblocks
  name: nodecountscalers.experimental.kubeblocks.io
spec:
  group: experimental.kubeblocks.io
  names:
    categories:
    - kubeblocks
    - all
    kind: NodeCountScaler
    listKind: NodeCountScalerList
    plural: nodecountscalers
    shortNames:
    - ncs
    singular: nodecountscaler
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: target cluster name.
      jsonPath: .spec.targetClusterName
      name: TARGET-CLUSTER-NAME
      type: string
    - description: scale ready.
      jsonPath: .status.conditions[?(@.type=="ScaleReady")].status
      name: READY
      type: string
    - description: reason.
      jsonPath: .status.conditions[?(@.type=="ScaleReady")].reason
      name: REASON
      type: string
    - description: message.
      jsonPath: .status.conditions[?(@.type=="ScaleReady")].message
      name: MESSAGE
      type: string
    - jsonPath: .status.lastScaleTime
      name: LAST-SCALE-TIME
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: NodeCountScaler is the Schema for the nodecountscalers API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: NodeCountScalerSpec defines the desired state of NodeCountScaler
            properties:
              targetClusterName:
                description: Specified the target Cluster name this scaler applies
                  to.
                type: string
              targetComponentNames:
                description: Specified the target Component names this scaler applies
                  to. All Components will be applied if not set.
                items:
                  type: string
                type: array
            required:
            - targetClusterName
            type: object
          status:
            description: NodeCountScalerStatus defines the observed state of NodeCountScaler
            properties:
              componentStatuses:
                description: Records the current status information of all Components
                  specified in the NodeCountScalerSpec.
                items:
                  properties:
                    availableReplicas:
                      description: The number of instances of this component with
                        a Ready condition for at least MinReadySeconds defined in
                        the instance template.
                      format: int32
                      type: integer
                    currentReplicas:
                      description: The current number of instances of this component.
                      format: int32
                      type: integer
                    desiredReplicas:
                      description: The desired number of instances of this component.
                        Usually, it should be the number of nodes.
                      format: int32
                      type: integer
                    name:
                      description: Specified the Component name.
                      type: string
                    readyReplicas:
                      description: The number of instances of this component with
                        a Ready condition.
                      format: int32
                      type: integer
                  required:
                  - availableReplicas
                  - currentReplicas
                  - desiredReplicas
                  - name
                  - readyReplicas
                  type: object
                type: array
              conditions:
                description: 'Represents the latest available observations of a nodecountscaler''s
                  current state. Known .status.conditions.type are: "ScaleReady".
                  ScaleReady - All target components are ready.'
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              lastScaleTime:
                description: LastScaleTime is the last time the NodeCountScaler scaled
                  the number of instances.
                format: date-time
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
