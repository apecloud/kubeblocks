# API scope: namespaced

apiVersion: dbaas.infracreate.com/v1alpha1
kind: Cluster
metadata:
  name: mongo-cluster-idxxxxx
  namespace: default
spec:
  #  # ref ClusterDefinition, immutable
  #  clusterDefinitionRef: !<string>
  #  # ref AppVersion
  #  appVersionRef: !<string>
  #  components:
  #  - name: <string>
  #    # component name in ClusterDefinition
  #    type: <string>
  #    # default value in ClusterDefinition
  #    replicas: <string>
  #    # <pod.spec.containers[].resources>
  #    resources:
  #      request:
  #        cpu: 1000m
  #        memory: 2Gi
  #      limits:
  #        cpu: 1000m
  #        memory: 2Gi
  #    # ref roleGroups in ClusterDefinition
  #    roleGroups:
  #    - name: <string>
  #      type: <string> # roleGroup name in ClusterDefinition
  #      replicas: <int> # default value in ClusterDefinition
  #    # type ServiceSpec struct from k8s.io/core/v1
  #      service:
  #        ports:
  #        - protocol: TCP
  #          port: 80
  #          targetPort: 9376
  #        type: LoadBalancer
  #    # <statefulset.spec.volumeClaimTemplates>
  #    volumeClaimTemplates:
  #      - metadata:
  #          name: data # ref AppVersion components.containers.volumeMounts.name
  #        spec:
  #          accessModes:
  #            - ReadWriteOnce
  #          resources:
  #            requests:
  #              storage: 1Gi
  #      - metadata:
  #          name: log
  #        spec: # <statefulset.spec.volumeClaimTemplates>
  #          accessModes:
  #            - ReadWriteOnce
  #          resources:
  #            requests:
  #              storage: 1Gi
  #   terminatingPolicy: <string> # [DoNotTerminate, Halt, Delete, WipeOut]
  # ref ClusterDefinition immutable
  clusterDefinitionRef: "a-vendor-mongodbcluster"
  # ref AppVersion
  appVersionRef: "appversion-mongodb-3.4"
  components:
    - name: mongos1
      type: mongos # component name in ClusterDefinition
      replicas: 1 # 修改即触发 scale 操作，如果个数不符合 definition 中的限制就报错
      # 修改即触发变配
      resources:
        requests:
          cpu: 1000m
          memory: 2Gi
        limits:
          cpu: 1000m
          memory: 2Gi
      roleGroups:
        - name: mongos-primary1
          type: mongos-primary
          replicas: 2
    - name: shard1
      type: shard
      replicas: 2
      resources:
        requests:
          cpu: 1000m
          memory: 2Gi
        limits:
          cpu: 1000m
          memory: 2Gi
      # 不配就使用默认配置，如 primary/secondary/hidden 默认均为一个，可以不写
      roleGroups:
        - name: ro1
          type: ro
          replicas: 1
      # <statefulset.spec.volumeClaimTemplates>
      volumeClaimTemplates:
        - metadata:
            name: data # ref AppVersion components.containers.volumeMounts.name
          spec:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 1Gi
        - metadata:
            name: log
          spec: # <statefulset.spec.volumeClaimTemplates>
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 1Gi
    - name: shard2
      type: shard
      replicas: 1
      resources:
        requests:
          cpu: 1000m
          memory: 2Gi
        limits:
          cpu: 1000m
          memory: 2Gi
      # <statefulset.spec.volumeClaimTemplates>
      volumeClaimTemplates:
        - metadata:
            name: data # ref AppVersion components.containers.volumeMounts.name
          spec:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 1Gi
        - metadata:
            name: log
          spec: # <statefulset.spec.volumeClaimTemplates>
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 1Gi
    - name: configserver1
      type: configserver
      replicas: 1
      resources:
        requests:
          cpu: 1000m
          memory: 2Gi
        limits:
          cpu: 1000m
          memory: 2Gi
  terminationPolicy: Halt


status:
  observedGeneration: 1
  phase: Running
  message: ""
  components:
    - # id - {metadata.name}-{component.type}-{auto_generated_id}
      # auto_generated_id 与 k8s deployment 的 id 生成方式一致
      id: mongo-cluster-idxxxxx-mongos-66b6c48dd5
      type: mongos
      # phase - in list of [Running, Failed, Creating, Upgrading, Scaling, Deleting, Deleted]
      phase: Running
      message: ""
      roleGroups:
        - # id - {metadata.name}-{roleGroup.type}-{auto_generated_id}
          id: mongo-cluster-idxxxxx-mongos-primary-67b6c48dd
          type: mongos-primary
          refWorkload: "deploy/{metadata.name}-{component.type}"
    - id: mongo-cluster-idxxxxx-mongos-76b6c48dd5
      type: mongos
      phase: Running
      roleGroups:
        - id: mongo-cluster-idxxxxx-mongos-primary-77b6c48dd
          type: mongos-primary
          refWorkload: "{metadata.name}-{component.type}-pod"
    - id: mongo-cluster-idxxxxx-shard-86b6c48dd5
      type: shard
      phase: Running
      # 记录 component 与 roleGroup 的拓扑，解决对一个 componet 下发任务时如何找到它下面的物理节点问题
      roleGroups:
        - id: mongo-cluster-idxxxxx-primary-87b6c48dd
          type: primary
          refWorkload: "sts/{metadata.name}-{component.type}"
        - id: mongo-cluster-idxxxxx-secondary-88b6c48dd
          type: secondary
          refWorkload: "{metadata.name}-{component.type}-statefulset"
        - id: mongo-cluster-idxxxxx-hidden-89b6c48dd
          type: hidden
          refWorkload: "{metadata.name}-{component.type}-statefulset"