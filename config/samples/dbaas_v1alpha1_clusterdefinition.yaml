# API scope: cluster
apiVersion: "dbaas.infracreate.com/v1alpha1"
kind:       "ClusterDefinition"
metadata:
  name:      "a-vendor-mongodbcluster"
spec:
  #  # DAPR types - [state.redis, mq.mqtt, mq.kafkal, state.mysql-8, state.mysql-7]
  #  types: []<string>
  # DAPR types - [state.redis, mq.mqtt, mq.kafkal, state.mysql-8, state.mysql-7]
  type: "state.mongodb"
  components:
    ## typedef:
    # type ComponentScriptBlock struct {
    #     Pre  []ContainerCMD
    #     Post []ContainerCMD
    # }
    # type ContainerCMD struct {
    #     Container string # job container in component
    #     Command []string
    #     Args []string
    # }
    # components:
    # - typeName: <string>!
    #   componentType: [Stateless, Stateful, Consensus, Replication]
    #   minAvailable: 1 | <int>
    #   maxAvailable: <int>
    #   defaultReplicas: minAvailable | <int>
    #   # antiAffinity defines components should have anti-affinity constraint to same component type
    #   antiAffinity: false | <bool>
    #   consensusSpec:
    #     leader:
    #       name: <string>!
    #       accessMode: [None, Readonly, ReadWrite]
    #     followers:
    #       - name: <string>!
    #         accessMode: [None, Readonly, ReadWrite]
    #     learner:
    #       name: <string>!
    #       accessMode: [None, Readonly, ReadWrite]
    #       replicas: 1 | <int>
    #     updateStrategy: [Serial, BestEffortParallel, Parallel]
    #   <container.spec>
    #   containers:
    #     - name: mongod
    #       ports: []
    #       env:
    #       - name: MONGO_INITDB_ROOT_USERNAME
    #         value: root
    #       - name: MONGO_INITDB_ROOT_PASSWORD
    #         value: example
    #       cmd: []
    #       args: []
    #       image: mongodb:20190725_1.1.8
    #       imagePullPolicy: IfNotPresent
    #       volumeMounts:
    #       - mountPath: /data
    #         name: data
    #       - mountPath: /log
    #         name: log
    #   # type ServiceSpec struct from k8s.io/core/v1
    #   service:
    #     ports:
    #     - protocol:
    #       port:
    #       targetPort:
    #     type:
    #   # script 执行顺序：component.pre => component.post
    #   scripts:
    #     create: <ComponentScriptBlock>
    #      - # builtin ENV variables:
    #        # self: OPENDBAAS_SELF_{builtin_properties}
    #        # rule: OPENDBAAS_{conponent_name}[n]-{builtin_properties}
    #        # builtin_properties:
    #        # - ID # which shows in Cluster.status
    #        # - HOST # e.g. example-mongodb2-0.example-mongodb2-svc.default.svc.cluster.local
    #        # - PORT
    #        # - N # number of current component
    #        container: "mongodb-client:latest" # job container in component
    #        command: ["mongo ${OPENDBAAS_SELF_HOSTNAME}:${OPENDBAAS_SELF_PORT}"]
    #        args:
    #        - "sh.addshard('${OPENDBAAS_SHARD[0]_ID}/${OPENDBAAS_SHARD[0]_PRIMARY[0]_HOST}:${OPENDBAAS_SHARD[0]_PRIMARY[0]_PORT}')"
    #     upgrade: <ComponentScriptBlock>
    #     vertical-scale: <ComponentScriptBlock>
    #     horizontal-scale: <ComponentScriptBlock>
    #     delete: <ComponentScriptBlock>
    - typeName: mongos
      minAvailable: 0
      maxAvailable: 256
      defaultReplicas: 1
      antiAffinity: true
      componentType: Stateless
      # type ServiceSpec struct from k8s.io/core/v1
      service:
        ports:
          - protocol: TCP
            port: 80
            targetPort: 9376
        type: LoadBalancer
      # script 执行顺序：component.pre => component.post
      scripts:
        create:
          post:
            - # builtin ENV variables:
              # self: OPENDBAAS_SELF_{builtin_properties}
              # rule: OPENDBAAS_{conponent_name}[n]-{builtin_properties}
              # builtin_properties:
              # - ID # which shows in Cluster.status
              # - HOST # e.g. example-mongodb2-0.example-mongodb2-svc.default.svc.cluster.local
              # - PORT
              # - N # number of current component
              container: "mongodb-client:latest" # job container in component
              command: ["mongo ${OPENDBAAS_SELF_HOSTNAME}:${OPENDBAAS_SELF_PORT}"]
              args:
                - "sh.addshard('${OPENDBAAS_SHARD[0]_ID}/${OPENDBAAS_SHARD[0]_PRIMARY[0]_HOST}:${OPENDBAAS_SHARD[0]_PRIMARY[0]_PORT}')"
    - typeName: configserver
      minAvailable: 1
      maxAvailable: 1
      componentType: Consensus
      consensusSpec:
        leader:
          name: primary
          accessMode: ReadWrite
        followers:
          - name: secondary
            accessMode: ReadWrite
        updateStrategy: BestEffortParallel
      containers:
        - name: mongod
          ports: []
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              value: root
            - name: MONGO_INITDB_ROOT_PASSWORD
              value: example
          command: []
          args: []
          image: mongodb:20190725_1.1.8
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - mountPath: /data
              name: data
            - mountPath: /log
              name: log
    - typeName: shard
      minAvailable: 2
      maxAvailable: 256
      defaultReplicas: 2
      componentType: Consensus
      consensusSpec:
        leader:
          name: primary
          accessMode: ReadWrite
        followers:
          - name: secondary
            accessMode: ReadWrite
          - name: hidden
            accessMode: None
        learner:
          name: readonly
          accessMode: Readonly
        updateStrategy: BestEffortParallel
      containers:
        - name: mongod
          ports: []
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              value: root
            - name: MONGO_INITDB_ROOT_PASSWORD
              value: example
          command: []
          args: []
          image: mongodb:20190725_1.1.8
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - mountPath: /data
              name: data
            - mountPath: /log
              name: log

  # defaultTerminatingPolicy: Delete | <string> # [DoNotTerminate, Halt, Delete, WipeOut]
  defaultTerminationPolicy: DoNotTerminate