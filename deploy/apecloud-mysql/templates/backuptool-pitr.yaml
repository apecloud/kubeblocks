apiVersion: dataprotection.kubeblocks.io/v1alpha1
kind: BackupTool
metadata:
  labels:
    clusterdefinition.kubeblocks.io/name: apecloud-mysql
    kubeblocks.io/backup-tool-type: pitr
    {{- include "apecloud-mysql.labels" . | nindent 4 }}
  name: apecloud-mysql-pitr-tool
spec:
  deployKind: job
  env:
    - name: VOLUME_DATA_DIR
      value: /data/mysql
    - name: PITR_DIR
      value: "$(VOLUME_DATA_DIR)/docker-entrypoint-initdb.d"
    - name: DATA_DIR
      value: "$(VOLUME_DATA_DIR)/data"
    - name: CONF_DIR
      value: "$(VOLUME_DATA_DIR)/conf"
    - name: RECOVERY_TIME
      value: $KB_RECOVERY_TIME
    - name: TIME_FORMAT
      value: 2006-01-02T15:04:05Z
    - name: LOG_DIR
      value: $(VOLUME_DATA_DIR)/data
  image: {{ .Values.image.registry | default "docker.io" }}/apecloud/wal-g:mysql-latest
  logical:
    restoreCommands:
      - sh
      - -c
      - |
        set -e;
        rm -rf ${PITR_DIR}/replay.sql;
  physical:
    restoreCommands:
      - sh
      - -c
      - |
        set -e;
        if [ -e ${PITR_DIR}/replay.sql ]; then echo "replay SQL '${PITR_DIR}/replay.sql' file exists, skip restore."; exit 0; fi
        mkdir -p ${PITR_DIR};
        cat << EOF > $HOME/.walg.yaml
        WALG_COMPRESSION_METHOD: zstd
        #WALG_LOG_LEVEL: DEVEL
        WALG_FILE_PREFIX: ${BACKUP_DIR}
        WALG_MYSQL_CHECK_GTIDS: true
        WALG_MYSQL_BINLOG_DST: ${PITR_DIR}
        WALG_MYSQL_BINLOG_REPLAY_COMMAND: mysqlbinlog --stop-datetime="\$WALG_MYSQL_BINLOG_END_TS" "\$WALG_MYSQL_CURRENT_BINLOG" >> ${PITR_DIR}/replay.sql
        EOF
        sync;
        BASE_BACKUP_TIME=
        if [ -f /data/mysql/backup-datetime ]; then
          BASE_BACKUP_TIME=$(cat /data/mysql/backup-datetime)
        elif [ -f $DATA_DIR/xtrabackup_info ]; then
          BASE_BACKUP_TIME=$(cat $DATA_DIR/xtrabackup_info | grep start_time | awk -F ' = ' '{print $2}');
          BASE_BACKUP_TIME=$(date -d"${BASE_BACKUP_TIME}" -u '+%Y-%m-%dT%H:%M:%SZ')
        fi
        BINLOG_LATEST_TIME=$(date -d"${RECOVERY_TIME} +1 day" -u '+%Y-%m-%dT%H:%M:%SZ')
        wal-g binlog-replay --since-time "${BASE_BACKUP_TIME}" --until "${RECOVERY_TIME}" --until-binlog-last-modified-time "${BINLOG_LATEST_TIME}";
        echo "done.";
        sync;
  backupCommands:
    - sh
    - -c
    - |
      set -e;
      mkdir -p ${BACKUP_DIR};
      cd $LOG_DIR
      LATEST_TRANS=$(mysqlbinlog $(ls -Ft $LOG_DIR/|grep -e '^mysql-bin.*[[:digit:]]$' |head -n 1)|grep 'Xid =' |head -n 1)
      if [ -n "${LATEST_TRANS}" ]; then
        mysql -h ${DB_HOST} -P3306 -u ${DB_USER} -p${DB_PASSWORD} -e "flush binary logs";
      fi
      cd -
      # TODO: delete expired binary logs on remote backup dir
      
      cat << EOF > $HOME/.walg.yaml
      WALG_COMPRESSION_METHOD: zstd
      WALG_MYSQL_DATASOURCE_NAME: ${DB_USER}:${DB_PASSWORD}@tcp(${DB_HOST}:3306)/mysql
      #WALG_LOG_LEVEL: DEVEL
      WALG_FILE_PREFIX: ${BACKUP_DIR}
      WALG_MYSQL_CHECK_GTIDS: true
      EOF
      sync;
      wal-g binlog-push;
      echo "done."
      echo "TOTAL SIZE: $(du -shx ${BACKUP_DIR}|awk '{print $1}')" > ${DATA_DIR}/logfile.info;
      sync;

  type: pitr
