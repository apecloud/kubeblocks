apiVersion: v1
kind: ConfigMap
metadata:
  name: apecloud-postgresql-scripts
  labels:
    {{- include "apecloud-postgresql.labels" . | nindent 4 }}
data:
  setup.sh: |
    #!/bin/bash
    set -o errexit
    set -o nounset

    . /kb-scripts/libsetup.sh

    export POSTGRESQL_BIN_DIR="/usr/local/bin"
    export KB_0_POD_NAME_PREFIX="${KB_0_HOSTNAME%%\.*}"
    export POSTGRESQL_INIT_MAX_TIMEOUT=60
    export POSTGRESQL_REPLICATION_PASSWORD=$POSTGRES_PASSWORD

    # default secondary when pgdata is not empty
    if [ -d ${PGDATA} ]; then
      echo "have been initialized"
    else
      if [ "$KB_0_POD_NAME_PREFIX" == "$KB_POD_NAME" ]; then
        postgresql_master_init
      else
        postgresql_slave_init
      fi
    fi

    postgres -D $PGDATA --hba_file=/var/lib/postgresql/conf/pg_hba.conf
  libsetup.sh: |
    postgresql_master_init() {
      initdb --username="$POSTGRES_USER" --pwfile=<(printf "%s\n" "$POSTGRES_PASSWORD") --pgdata="$PGDATA"

      echo "use_consensus = true" >> $PGDATA/consensus.conf
      postgres -D $PGDATA -p 5432 \
           -c consensus_init_meta=ON \
           -c consensus_members_info="$KB_POD_FQDN:$POSTGRESQL_PORT_NUMBER@1"
    }
    ###############
    postgresql_slave_init() {
      local -r check_args=("-U" "$POSTGRES_USER" "-h" "$KB_0_HOSTNAME" "-p" "$POSTGRESQL_PORT_NUMBER" "-d" "postgres")
      local check_cmd=("$POSTGRESQL_BIN_DIR"/pg_isready)
      local ready_counter=$POSTGRESQL_INIT_MAX_TIMEOUT

      while ! POSTGRES_PASSWORD=$POSTGRESQL_REPLICATION_PASSWORD "${check_cmd[@]}" "${check_args[@]}"; do
        sleep 1
        ready_counter=$((ready_counter - 1))
        if ((ready_counter <= 0)); then
            echo "PostgreSQL master is not ready after $POSTGRESQL_INIT_MAX_TIMEOUT seconds"
            exit 1
        fi
      done

      system_identifier=`psql -U postgres -h $KB_0_HOSTNAME -p 5432  -t -A  -c "select system_identifier from pg_control_system();"`
      initdb --username="$POSTGRES_USER" --pwfile=<(printf "%s\n" "$POSTGRES_PASSWORD") --pgdata="$PGDATA" -i $system_identifier

      echo "use_consensus = true" >> $PGDATA/consensus.conf
      postgres -D $PGDATA -p 5432 \
           -c consensus_init_meta=ON \
           -c consensus_members_info="$KB_POD_FQDN:$POSTGRESQL_PORT_NUMBER"
    }