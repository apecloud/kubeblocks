apiVersion: apps.kubeblocks.io/v1alpha1
kind: ClusterDefinition
metadata:
  name: etcd
  labels:
    {{- include "etcd.labels" . | nindent 4}}
spec:
  type: etcd
  componentDefs:
    - name: etcd
      characterType: etcd
      workloadType: Consensus
      rsmSpec:
        roles:
          - name: "leader"
            accessMode: ReadWrite
            isLeader: true
            canVote: true
          - name: "follower"
            accessMode: ReadWrite
            isLeader: false
            canVote: true
        roleProbe:
          probeActions:
            - image: "quay.io/coreos/etcd:v3.5.6"
              command:
                - "Status=$(etcdctl --endpoints=127.0.0.1:2379 endpoint status -w simple --command-timeout=300ms --dial-timeout=100m) &&"
                - "IsLeader=$(echo $Status | awk -F ', ' '{print $5}') &&"
                - "IsLearner=$(echo $Status | awk -F ', ' '{print $6}') &&"
                - "if [ \"true\" = \"$IsLeader\" ]; then echo -n \"leader\"; elif [ \"true\" = \"$IsLearner\" ]; then echo -n \"learner\"; else echo -n \"follower\"; fi"
          roleUpdateMechanism: DirectAPIServerEventUpdate
        memberUpdateStrategy: BestEffortParallel
        membershipReconfiguration:
          switchoverAction:
            image: "quay.io/coreos/etcd:v3.5.6"
            command:
              - "current_leader=$(etcdctl endpoint status --write-out=json | jq -r '.[] | select(.is_leader == true) | .clientURLs[0]') &&"
              - "[[ -z $current_leader ]] && echo \"No current leader found. Exiting...\" && exit 1 &&"
              - "echo \"Current Leader: $current_leader\" &&"
              - "follower_id=$(etcdctl member list | awk '/isLeader=False/{print $1}') &&"
              - "[[ -z $follower_id ]] && echo \"No follower found. Exiting...\" && exit 1 &&"
              - "echo \"Promoting Follower: $follower_id\" &&"
              - "etcdctl member promote $follower_id &&"
              - "new_leader=$(etcdctl endpoint status --write-out=json | jq -r '.[] | select(.is_leader == true) | .clientURLs[0]') &&"
              - "[[ $new_leader == $current_leader ]] && echo \"Switchover failed. New leader is the same as the previous leader.\" && exit 1 &&"
              - "echo \"New Leader: $new_leader\" &&"
              - "echo \"Etcd Switchover completed successfully.\""
          memberJoinAction:
            command:
              - "etcdctl member add --peer-urls=http://$KB_RSM_TARGET_HOST:KB_RSM_SERVICE_PORT"
          memberLeaveAction:
            command:
              - "etcdctl member remove --peer-urls=http://$KB_RSM_TARGET_HOST:KB_RSM_SERVICE_PORT"
      service:
        ports:
          - name: client
            port: 2379
            targetPort: client
      podSpec:
        containers:
          - name: etcd
            imagePullPolicy: IfNotPresent
            ports:
              - containerPort: 2379
                name: client
              - containerPort: 2380
                name: peer
            volumeMounts:
              - name: data
                mountPath: /var/run/etcd
            command:
              - bin/sh
              - -c
              - |
                echo "start etcd..."
                PEERS=""
                # TODO: clusterDomain 'cluster.local' requires configurable
                DOMAIN=$KB_NAMESPACE".svc{{ .Values.clusterDomain }}"
                i=0
                while [ $i -lt $KB_REPLICA_COUNT ]; do
                	if [ $i -ne 0 ]; then
                		PEERS="$PEERS,";
                	fi;
                	host=$(eval echo \$KB_"$i"_HOSTNAME)
                    host=$host"."$DOMAIN
                    hostname=${KB_CLUSTER_COMP_NAME}-${i}
                	PEERS="$PEERS$hostname=http://$host:2380"
                    i=$(( i + 1))
                done
                # TODO: clusterDomain 'cluster.local' requires configurable
                MY_PEER=$KB_POD_FQDN{{ .Values.clusterDomain }}
                exec etcd --name ${HOSTNAME} \
                --listen-peer-urls http://0.0.0.0:2380 \
                --listen-client-urls http://0.0.0.0:2379 \
                --advertise-client-urls http://${MY_PEER}:2379 \
                --initial-advertise-peer-urls http://${MY_PEER}:2380 \
                --initial-cluster-token etcd-cluster-1 \
                --initial-cluster ${PEERS} \
                --initial-cluster-state new \
                --data-dir /var/run/etcd/default.etcd
  connectionCredential:
    username: root
    password: ""