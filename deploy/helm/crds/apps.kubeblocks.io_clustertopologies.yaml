apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.1
  labels:
    app.kubernetes.io/name: kubeblocks
  name: clustertopologies.apps.kubeblocks.io
spec:
  group: apps.kubeblocks.io
  names:
    categories:
    - kubeblocks
    kind: ClusterTopology
    listKind: ClusterTopologyList
    plural: clustertopologies
    shortNames:
    - ct
    singular: clustertopology
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - description: topologies
      jsonPath: .status.topologies
      name: Topologies
      type: string
    - description: external service referenced
      jsonPath: .status.externalServices
      name: External-Service
      type: string
    - description: status phase
      jsonPath: .status.phase
      name: Status
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ClusterTopology is the Schema for the clustertopologies API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ClusterTopologySpec defines the desired state of ClusterTopology
            properties:
              topologies:
                description: Topologies represents the different topologies within
                  the cluster.
                items:
                  description: ClusterTopologyDefinition represents the configuration
                    for a specific cluster topology.
                  properties:
                    components:
                      description: Components specifies the components in the topology.
                      items:
                        description: ClusterTopologyComponent defines a component
                          within a cluster topology.
                        properties:
                          compDef:
                            description: 'CompDef specifies the component definition
                              to use, either as a specific name or a name prefix.
                              During instance provisioning, the system searches for
                              matching component definitions based on the specified
                              criteria. The search order for component definitions
                              is as follows: 1. Prioritize component definitions within
                              the current Addon. 2. Consider component definitions
                              already installed in the Kubernetes cluster. 3. Optionally
                              search for component definitions in the Addon repository
                              if specified.'
                            maxLength: 128
                            type: string
                          name:
                            description: Name defines the name of the component. This
                              name is also part of Service DNS name, following IANA
                              Service Naming rules. Cannot be updated.
                            maxLength: 16
                            pattern: ^[a-z]([a-z0-9\-]*[a-z0-9])?$
                            type: string
                          replicas:
                            description: Replicas specifies the default replicas for
                              the component in this topology.
                            format: int32
                            type: integer
                          serviceRefs:
                            description: ServiceRefs define the service references
                              for the component.
                            items:
                              properties:
                                cluster:
                                  description: 'When referencing a service provided
                                    by other KubeBlocks cluster, you need to provide
                                    the name of the Cluster being referenced. By default,
                                    when other KubeBlocks Cluster are referenced,
                                    the ClusterDefinition.spec.connectionCredential
                                    secret corresponding to the referenced Cluster
                                    will be used to bind to the current component.
                                    Currently, if a KubeBlocks cluster is to be referenced,
                                    the connection credential secret should include
                                    and correspond to the following fields: endpoint,
                                    port, username, and password. Under this referencing
                                    approach, the ServiceKind and ServiceVersion of
                                    service reference declaration defined in the ClusterDefinition
                                    will not be validated. If both Cluster and ServiceDescriptor
                                    are specified, the Cluster takes precedence.'
                                  type: string
                                name:
                                  description: name of the service reference declaration.
                                    references the serviceRefDeclaration name defined
                                    in clusterDefinition.componentDefs[*].serviceRefDeclarations[*].name
                                  type: string
                                namespace:
                                  description: namespace defines the namespace of
                                    the referenced Cluster or the namespace of the
                                    referenced ServiceDescriptor object. If not set,
                                    the referenced Cluster and ServiceDescriptor will
                                    be searched in the namespace of the current cluster
                                    by default.
                                  type: string
                                serviceDescriptor:
                                  description: serviceDescriptor defines the service
                                    descriptor of the service provided by external
                                    sources. When referencing a service provided by
                                    external sources, you need to provide the ServiceDescriptor
                                    object name to establish the service binding.
                                    And serviceDescriptor is the name of the ServiceDescriptor
                                    object, furthermore, the ServiceDescriptor.spec.serviceKind
                                    and ServiceDescriptor.spec.serviceVersion should
                                    match clusterDefinition.componentDefs[*].serviceRefDeclarations[*].serviceRefDeclarationSpecs[*].serviceKind
                                    and the regular expression defines in clusterDefinition.componentDefs[*].serviceRefDeclarations[*].serviceRefDeclarationSpecs[*].serviceVersion.
                                    If both Cluster and ServiceDescriptor are specified,
                                    the Cluster takes precedence.
                                  type: string
                              required:
                              - name
                              type: object
                            type: array
                          serviceVersion:
                            description: ServiceVersion specifies the version associated
                              with the referenced component definition. This field
                              assists in determining the appropriate version of the
                              component definition, considering multiple available
                              definitions.
                            maxLength: 32
                            type: string
                        required:
                        - compDef
                        - name
                        type: object
                      type: array
                    default:
                      description: Default indicates whether this topology is the
                        default configuration.
                      type: boolean
                    name:
                      description: Name is the unique identifier for the cluster topology.
                        Cannot be updated.
                      type: string
                    orders:
                      description: Orders defines the order of components within the
                        topology.
                      properties:
                        shutdownOrder:
                          description: ShutdownOrder defines the order in which components
                            should be shut down in the cluster. Components with the
                            same order can be listed together, separated by commas.
                          items:
                            type: string
                          type: array
                        startupOrder:
                          description: StartupOrder defines the order in which components
                            should be started in the cluster. Components with the
                            same order can be listed together, separated by commas.
                          items:
                            type: string
                          type: array
                        updateOrder:
                          description: UpdateOrder defines the order in which components
                            should be updated in the cluster. Components with the
                            same order can be listed together, separated by commas.
                          items:
                            type: string
                          type: array
                      type: object
                    requiredVersion:
                      description: RequiredVersion specifies the minimum version required
                        for this topology.
                      type: string
                  required:
                  - components
                  - name
                  type: object
                type: array
            required:
            - topologies
            type: object
          status:
            description: ClusterTopologyStatus defines the observed state of ClusterTopology
            properties:
              externalServices:
                type: string
              message:
                description: Extra message for current phase.
                type: string
              observedGeneration:
                description: ObservedGeneration is the most recent generation observed
                  for this ClusterTopology.
                format: int64
                type: integer
              phase:
                description: Phase valid values are ``, `Available`, 'Unavailable`.
                  Available is ClusterTopology become available, and can be used to
                  create clusters.
                enum:
                - Available
                - Unavailable
                type: string
              topologies:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
