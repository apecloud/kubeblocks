apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.1
  labels:
    app.kubernetes.io/name: kubeblocks
  name: componentdefinitions.apps.kubeblocks.io
spec:
  group: apps.kubeblocks.io
  names:
    categories:
    - kubeblocks
    kind: ComponentDefinition
    listKind: ComponentDefinitionList
    plural: componentdefinitions
    shortNames:
    - cmpd
    singular: componentdefinition
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - description: service
      jsonPath: .spec.serviceKind
      name: SERVICE
      type: string
    - description: service version
      jsonPath: .spec.serviceVersion
      name: SERVICE-VERSION
      type: string
    - description: status phase
      jsonPath: .status.phase
      name: STATUS
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: "ComponentDefinition serves as a reusable blueprint for creating
          Components, encapsulating essential static settings such as Component description,
          Pod templates, configuration file templates, scripts, parameter lists, injected
          environment variables and their sources, and event handlers. ComponentDefinition
          works in conjunction with dynamic settings from the ClusterComponentSpec,
          to instantiate Components during Cluster creation. \n Key aspects that can
          be defined in a ComponentDefinition include: \n - PodSpec template: Specifies
          the PodSpec template used by the Component. - Configuration templates: Specify
          the configuration file templates required by the Component. - Scripts: Provide
          the necessary scripts for Component management and operations. - Storage
          volumes: Specify the storage volumes and their configurations for the Component.
          - Pod roles: Outlines various roles of Pods within the Component along with
          their capabilities. - Exposed Kubernetes Services: Specify the Services
          that need to be exposed by the Component. - System accounts: Define the
          system accounts required for the Component. - Monitoring and logging: Configure
          the exporter and logging settings for the Component. \n ComponentDefinitions
          also enable defining reactive behaviors of the Component in response to
          events, such as member join/leave, Component addition/deletion, role changes,
          switch over, and more. This allows for automatic event handling, thus encapsulating
          complex behaviors within the Component. \n Referencing a ComponentDefinition
          when creating individual Components ensures inheritance of predefined configurations,
          promoting reusability and consistency across different deployments and cluster
          topologies."
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              annotations:
                additionalProperties:
                  type: string
                description: "Specifies static annotations that will be patched to
                  all Kubernetes resources created for the Component. \n Note: If
                  an annotation key in the `annotations` field conflicts with any
                  system annotations or user-specified annotations, it will be silently
                  ignored to avoid overriding higher-priority annotations. \n This
                  field is immutable."
                type: object
              configs:
                description: "Specifies the configuration file templates and volume
                  mount parameters used by the Component. It also includes descriptions
                  of the parameters in the ConfigMaps, such as value range limitations.
                  \n This field specifies a list of templates that will be rendered
                  into Component containers' configuration files. Each template is
                  represented as a ConfigMap and may contain multiple configuration
                  files, with each file being a key in the ConfigMap. \n The rendered
                  configuration files will be mounted into the Component's containers
                  according to the specified volume mount parameters. \n This field
                  is immutable. \n TODO: support referencing configs from other components
                  or clusters."
                items:
                  properties:
                    asEnvFrom:
                      description: "Specifies the containers to inject the ConfigMap
                        parameters as environment variables. \n This is useful when
                        application images accept parameters through environment variables
                        and generate the final configuration file in the startup script
                        based on these variables. \n This field allows users to specify
                        a list of container names, and KubeBlocks will inject the
                        environment variables converted from the ConfigMap into these
                        designated containers. This provides a flexible way to pass
                        the configuration items from the ConfigMap to the container
                        without modifying the image. \n Deprecated: `asEnvFrom` has
                        been deprecated since 0.9.0 and will be removed in 0.10.0.
                        Use `injectEnvTo` instead."
                      items:
                        type: string
                      type: array
                      x-kubernetes-list-type: set
                    constraintRef:
                      description: Specifies the name of the referenced configuration
                        constraints object.
                      maxLength: 63
                      pattern: ^[a-z0-9]([a-z0-9\.\-]*[a-z0-9])?$
                      type: string
                    defaultMode:
                      description: "The operator attempts to set default file permissions
                        for scripts (0555) and configurations (0444). However, certain
                        database engines may require different file permissions. You
                        can specify the desired file permissions here. \n Must be
                        specified as an octal value between 0000 and 0777 (inclusive),
                        or as a decimal value between 0 and 511 (inclusive). YAML
                        supports both octal and decimal values for file permissions.
                        \n Please note that this setting only affects the permissions
                        of the files themselves. Directories within the specified
                        path are not impacted by this setting. It's important to be
                        aware that this setting might conflict with other options
                        that influence the file mode, such as fsGroup. In such cases,
                        the resulting file mode may have additional bits set. Refers
                        to documents of k8s.ConfigMapVolumeSource.defaultMode for
                        more information."
                      format: int32
                      type: integer
                    injectEnvTo:
                      description: "Specifies the containers to inject the ConfigMap
                        parameters as environment variables. \n This is useful when
                        application images accept parameters through environment variables
                        and generate the final configuration file in the startup script
                        based on these variables. \n This field allows users to specify
                        a list of container names, and KubeBlocks will inject the
                        environment variables converted from the ConfigMap into these
                        designated containers. This provides a flexible way to pass
                        the configuration items from the ConfigMap to the container
                        without modifying the image."
                      items:
                        type: string
                      type: array
                      x-kubernetes-list-type: set
                    keys:
                      description: "Specifies the configuration files within the ConfigMap
                        that support dynamic updates. \n A configuration template
                        (provided in the form of a ConfigMap) may contain templates
                        for multiple configuration files. Each configuration file
                        corresponds to a key in the ConfigMap. Some of these configuration
                        files may support dynamic modification and reloading without
                        requiring a pod restart. \n If empty or omitted, all configuration
                        files in the ConfigMap are assumed to support dynamic updates,
                        and ConfigConstraint applies to all keys."
                      items:
                        type: string
                      type: array
                      x-kubernetes-list-type: set
                    legacyRenderedConfigSpec:
                      description: "Specifies the secondary rendered config spec for
                        pod-specific customization. \n The template is rendered inside
                        the pod (by the \"config-manager\" sidecar container) and
                        merged with the main template's render result to generate
                        the final configuration file. \n This field is intended to
                        handle scenarios where different pods within the same Component
                        have varying configurations. It allows for pod-specific customization
                        of the configuration. \n Note: This field will be deprecated
                        in future versions, and the functionality will be moved to
                        `cluster.spec.componentSpecs[*].instances[*]`."
                      properties:
                        namespace:
                          default: default
                          description: Specifies the namespace of the referenced configuration
                            template ConfigMap object. An empty namespace is equivalent
                            to the "default" namespace.
                          maxLength: 63
                          pattern: ^[a-z0-9]([a-z0-9\-]*[a-z0-9])?$
                          type: string
                        policy:
                          default: none
                          description: Defines the strategy for merging externally
                            imported templates into component templates.
                          enum:
                          - patch
                          - replace
                          - none
                          type: string
                        templateRef:
                          description: Specifies the name of the referenced configuration
                            template ConfigMap object.
                          maxLength: 63
                          pattern: ^[a-z0-9]([a-z0-9\.\-]*[a-z0-9])?$
                          type: string
                      required:
                      - templateRef
                      type: object
                    name:
                      description: Specifies the name of the configuration template.
                      maxLength: 63
                      pattern: ^[a-z0-9]([a-z0-9\.\-]*[a-z0-9])?$
                      type: string
                    namespace:
                      default: default
                      description: Specifies the namespace of the referenced configuration
                        template ConfigMap object. An empty namespace is equivalent
                        to the "default" namespace.
                      maxLength: 63
                      pattern: ^[a-z0-9]([a-z0-9\-]*[a-z0-9])?$
                      type: string
                    reRenderResourceTypes:
                      description: "Specifies whether the configuration needs to be
                        re-rendered after v-scale or h-scale operations to reflect
                        changes. \n In some scenarios, the configuration may need
                        to be updated to reflect the changes in resource allocation
                        or cluster topology. Examples: \n - Redis: adjust maxmemory
                        after v-scale operation. - MySQL: increase max connections
                        after v-scale operation. - Zookeeper: update zoo.cfg with
                        new node addresses after h-scale operation."
                      items:
                        description: RerenderResourceType defines the resource requirements
                          for a component.
                        enum:
                        - vscale
                        - hscale
                        - tls
                        type: string
                      type: array
                      x-kubernetes-list-type: set
                    templateRef:
                      description: Specifies the name of the referenced configuration
                        template ConfigMap object.
                      maxLength: 63
                      pattern: ^[a-z0-9]([a-z0-9\.\-]*[a-z0-9])?$
                      type: string
                    volumeName:
                      description: Refers to the volume name of PodTemplate. The configuration
                        file produced through the configuration template will be mounted
                        to the corresponding volume. Must be a DNS_LABEL name. The
                        volume name must be defined in podSpec.containers[*].volumeMounts.
                      maxLength: 63
                      pattern: ^[a-z]([a-z0-9\-]*[a-z0-9])?$
                      type: string
                  required:
                  - name
                  - templateRef
                  - volumeName
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - name
                x-kubernetes-list-type: map
              description:
                description: Provides a brief and concise explanation of the Component's
                  purpose, functionality, and any relevant details. It serves as a
                  quick reference for users to understand the Component's role and
                  characteristics.
                maxLength: 256
                type: string
              exporter:
                description: Defines the built-in metrics exporter container.
                properties:
                  containerName:
                    description: Specifies the name of the built-in metrics exporter
                      container.
                    type: string
                  scrapePath:
                    description: Specifies the http/https url path to scrape for metrics.
                      If empty, Prometheus uses the default value (e.g. `/metrics`).
                    type: string
                  scrapePort:
                    description: Specifies the port name to scrape for metrics.
                    type: string
                  scrapeScheme:
                    description: Specifies the schema to use for scraping. `http`
                      and `https` are the expected values unless you rewrite the `__scheme__`
                      label via relabeling. If empty, Prometheus uses the default
                      value `http`.
                    enum:
                    - http
                    - https
                    type: string
                type: object
              hostNetwork:
                description: "Specifies the host network configuration for the Component.
                  \n When `hostNetwork` option is enabled, the Pods share the host's
                  network namespace and can directly access the host's network interfaces.
                  This means that if multiple Pods need to use the same port, they
                  cannot run on the same host simultaneously due to port conflicts.
                  \n The DNSPolicy field in the Pod spec determines how containers
                  within the Pod perform DNS resolution. When using hostNetwork, the
                  operator will set the DNSPolicy to 'ClusterFirstWithHostNet'. With
                  this policy, DNS queries will first go through the K8s cluster's
                  DNS service. If the query fails, it will fall back to the host's
                  DNS settings. \n If set, the DNS policy will be automatically set
                  to \"ClusterFirstWithHostNet\"."
                properties:
                  containerPorts:
                    description: The list of container ports that are required by
                      the component.
                    items:
                      properties:
                        container:
                          description: Container specifies the target container within
                            the Pod.
                          type: string
                        ports:
                          description: Ports are named container ports within the
                            specified container. These container ports must be defined
                            in the container for proper port allocation.
                          items:
                            type: string
                          minItems: 1
                          type: array
                      required:
                      - container
                      - ports
                      type: object
                    type: array
                type: object
              labels:
                additionalProperties:
                  type: string
                description: "Specifies static labels that will be patched to all
                  Kubernetes resources created for the Component. \n Note: If a label
                  key in the `labels` field conflicts with any system labels or user-specified
                  labels, it will be silently ignored to avoid overriding higher-priority
                  labels. \n This field is immutable."
                type: object
              lifecycleActions:
                description: "Defines a set of hooks and procedures that customize
                  the behavior of a Component throughout its lifecycle. Actions are
                  triggered at specific lifecycle stages: \n - `postProvision`: Defines
                  the hook to be executed after the creation of a Component, with
                  `preCondition` specifying when the action should be fired relative
                  to the Component's lifecycle stages: `Immediately`, `RuntimeReady`,
                  `ComponentReady`, and `ClusterReady`. - `preTerminate`: Defines
                  the hook to be executed before terminating a Component. - `roleProbe`:
                  Defines the procedure which is invoked regularly to assess the role
                  of replicas. - `switchover`: Defines the procedure for a controlled
                  transition of leadership from the current leader to a new replica.
                  This approach aims to minimize downtime and maintain availability
                  in systems with a leader-follower topology, such as before planned
                  maintenance or upgrades on the current leader node. - `memberJoin`:
                  Defines the procedure to add a new replica to the replication group.
                  - `memberLeave`: Defines the method to remove a replica from the
                  replication group. - `readOnly`: Defines the procedure to switch
                  a replica into the read-only state. - `readWrite`: transition a
                  replica from the read-only state back to the read-write state. -
                  `dataDump`: Defines the procedure to export the data from a replica.
                  - `dataLoad`: Defines the procedure to import data into a replica.
                  - `reconfigure`: Defines the procedure that update a replica with
                  new configuration file. - `accountProvision`: Defines the procedure
                  to generate a new database account. \n This field is immutable."
                properties:
                  accountProvision:
                    description: "Defines the procedure to generate a new database
                      account. \n Use Case: This action is designed to create system
                      accounts that are utilized for replication, monitoring, backup,
                      and other administrative tasks. \n Note: This field is immutable
                      once it has been set."
                    properties:
                      builtinHandler:
                        description: "Specifies the name of the predefined action
                          handler to be invoked for lifecycle actions. \n Lorry, as
                          a sidecar agent co-located with the database container in
                          the same Pod, includes a suite of built-in action implementations
                          that are tailored to different database engines. These are
                          known as \"builtin\" handlers, includes: `mysql`, `redis`,
                          `mongodb`, `etcd`, `postgresql`, `official-postgresql`,
                          `apecloud-postgresql`, `wesql`, `oceanbase`, `polardbx`.
                          \n If the `builtinHandler` field is specified, it instructs
                          Lorry to utilize its internal built-in action handler to
                          execute the specified lifecycle actions. \n The `builtinHandler`
                          field is of type `BuiltinActionHandlerType`, which represents
                          the name of the built-in handler. The `builtinHandler` specified
                          within the same `ComponentLifecycleActions` should be consistent
                          across all actions. This means that if you specify a built-in
                          handler for one action, you should use the same handler
                          for all other actions throughout the entire `ComponentLifecycleActions`
                          collection. \n If you need to define lifecycle actions for
                          database engines not covered by the existing built-in support,
                          or when the pre-existing built-in handlers do not meet your
                          specific needs, you can use the `customHandler` field to
                          define your own action implementation. \n Deprecation Notice:
                          \n - In the future, the `builtinHandler` field will be deprecated
                          in favor of using the `customHandler` field for configuring
                          all lifecycle actions. - Instead of using a name to indicate
                          the built-in action implementations in Lorry, the recommended
                          approach will be to explicitly invoke the desired action
                          implementation through a gRPC interface exposed by the sidecar
                          agent. - Developers will have the flexibility to either
                          use the built-in action implementations provided by Lorry
                          or develop their own sidecar agent to implement custom actions
                          and expose them via gRPC interfaces. - This change will
                          allow for greater customization and extensibility of lifecycle
                          actions, as developers can create their own \"builtin\"
                          implementations tailored to their specific requirements."
                        type: string
                      customHandler:
                        description: "Specifies a user-defined hook or procedure that
                          is called to perform the specific lifecycle action. It offers
                          a flexible and expandable approach for customizing the behavior
                          of a Component by leveraging tailored actions. \n An Action
                          can be implemented as either an ExecAction or an HTTPAction,
                          with future versions planning to support GRPCAction, thereby
                          accommodating unique logic for different database systems
                          within the Action's framework. \n In future iterations,
                          all built-in handlers are expected to transition to GRPCAction.
                          This change means that Lorry or other sidecar agents will
                          expose the implementation of actions through a GRPC interface
                          for external invocation. Then the controller will interact
                          with these actions via GRPCAction calls."
                        properties:
                          container:
                            description: "Defines the name of the container within
                              the target Pod where the action will be executed. \n
                              This name must correspond to one of the containers defined
                              in `componentDefinition.spec.runtime`. If this field
                              is not specified, the default behavior is to use the
                              first container listed in `componentDefinition.spec.runtime`.
                              \n This field cannot be updated. \n Note: This field
                              is reserved for future use and is not currently active."
                            type: string
                          env:
                            description: "Represents a list of environment variables
                              that will be injected into the container. These variables
                              enable the container to adapt its behavior based on
                              the environment it's running in. \n This field cannot
                              be updated."
                            items:
                              description: EnvVar represents an environment variable
                                present in a Container.
                              properties:
                                name:
                                  description: Name of the environment variable. Must
                                    be a C_IDENTIFIER.
                                  type: string
                                value:
                                  description: 'Variable references $(VAR_NAME) are
                                    expanded using the previously defined environment
                                    variables in the container and any service environment
                                    variables. If a variable cannot be resolved, the
                                    reference in the input string will be unchanged.
                                    Double $$ are reduced to a single $, which allows
                                    for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)"
                                    will produce the string literal "$(VAR_NAME)".
                                    Escaped references will never be expanded, regardless
                                    of whether the variable exists or not. Defaults
                                    to "".'
                                  type: string
                                valueFrom:
                                  description: Source for the environment variable's
                                    value. Cannot be used if value is not empty.
                                  properties:
                                    configMapKeyRef:
                                      description: Selects a key of a ConfigMap.
                                      properties:
                                        key:
                                          description: The key to select.
                                          type: string
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                        optional:
                                          description: Specify whether the ConfigMap
                                            or its key must be defined
                                          type: boolean
                                      required:
                                      - key
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    fieldRef:
                                      description: 'Selects a field of the pod: supports
                                        metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`,
                                        `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                        spec.serviceAccountName, status.hostIP, status.podIP,
                                        status.podIPs.'
                                      properties:
                                        apiVersion:
                                          description: Version of the schema the FieldPath
                                            is written in terms of, defaults to "v1".
                                          type: string
                                        fieldPath:
                                          description: Path of the field to select
                                            in the specified API version.
                                          type: string
                                      required:
                                      - fieldPath
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    resourceFieldRef:
                                      description: 'Selects a resource of the container:
                                        only resources limits and requests (limits.cpu,
                                        limits.memory, limits.ephemeral-storage, requests.cpu,
                                        requests.memory and requests.ephemeral-storage)
                                        are currently supported.'
                                      properties:
                                        containerName:
                                          description: 'Container name: required for
                                            volumes, optional for env vars'
                                          type: string
                                        divisor:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: Specifies the output format
                                            of the exposed resources, defaults to
                                            "1"
                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          x-kubernetes-int-or-string: true
                                        resource:
                                          description: 'Required: resource to select'
                                          type: string
                                      required:
                                      - resource
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    secretKeyRef:
                                      description: Selects a key of a secret in the
                                        pod's namespace
                                      properties:
                                        key:
                                          description: The key of the secret to select
                                            from.  Must be a valid secret key.
                                          type: string
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                        optional:
                                          description: Specify whether the Secret
                                            or its key must be defined
                                          type: boolean
                                      required:
                                      - key
                                      type: object
                                      x-kubernetes-map-type: atomic
                                  type: object
                              required:
                              - name
                              type: object
                            type: array
                          exec:
                            description: "Defines the command to run. \n This field
                              cannot be updated."
                            properties:
                              args:
                                description: Args represents the arguments that are
                                  passed to the `command` for execution.
                                items:
                                  type: string
                                type: array
                              command:
                                description: "Specifies the command to be executed
                                  inside the container. The working directory for
                                  this command is the container's root directory('/').
                                  Commands are executed directly without a shell environment,
                                  meaning shell-specific syntax ('|', etc.) is not
                                  supported. If the shell is required, it must be
                                  explicitly invoked in the command. \n A successful
                                  execution is indicated by an exit status of 0; any
                                  non-zero status signifies a failure."
                                items:
                                  type: string
                                type: array
                            type: object
                          http:
                            description: "Specifies the HTTP request to perform. \n
                              This field cannot be updated. \n Note: HTTPAction is
                              to be implemented in future version."
                            properties:
                              host:
                                description: Indicates the server's domain name or
                                  IP address. Defaults to the Pod's IP. Prefer setting
                                  the "Host" header in httpHeaders when needed.
                                type: string
                              httpHeaders:
                                description: Allows for the inclusion of custom headers
                                  in the request. HTTP permits the use of repeated
                                  headers.
                                items:
                                  description: HTTPHeader describes a custom header
                                    to be used in HTTP probes
                                  properties:
                                    name:
                                      description: The header field name. This will
                                        be canonicalized upon output, so case-variant
                                        names will be understood as the same header.
                                      type: string
                                    value:
                                      description: The header field value
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                type: array
                              method:
                                description: Represents the type of HTTP request to
                                  be made, such as "GET," "POST," "PUT," etc. If not
                                  specified, "GET" is the default method.
                                type: string
                              path:
                                description: Specifies the endpoint to be requested
                                  on the HTTP server.
                                type: string
                              port:
                                anyOf:
                                - type: integer
                                - type: string
                                description: Specifies the target port for the HTTP
                                  request. It can be specified either as a numeric
                                  value in the range of 1 to 65535, or as a named
                                  port that meets the IANA_SVC_NAME specification.
                                x-kubernetes-int-or-string: true
                              scheme:
                                description: Designates the protocol used to make
                                  the request, such as HTTP or HTTPS. If not specified,
                                  HTTP is used by default.
                                type: string
                            required:
                            - port
                            type: object
                          image:
                            description: "Specifies the container image to be used
                              for running the Action. \n When specified, a dedicated
                              container will be created using this image to execute
                              the Action. This field is mutually exclusive with the
                              `container` field; only one of them should be provided.
                              \n This field cannot be updated."
                            type: string
                          matchingKey:
                            description: "Used in conjunction with the `targetPodSelector`
                              field to refine the selection of target pod(s) for Action
                              execution. The impact of this field depends on the `targetPodSelector`
                              value: \n - When `targetPodSelector` is set to `Any`
                              or `All`, this field will be ignored. - When `targetPodSelector`
                              is set to `Role`, only those replicas whose role matches
                              the `matchingKey` will be selected for the Action. \n
                              This field cannot be updated. \n Note: This field is
                              reserved for future use and is not currently active."
                            type: string
                          preCondition:
                            description: "Specifies the state that the cluster must
                              reach before the Action is executed. Currently, this
                              is only applicable to the `postProvision` action. \n
                              The conditions are as follows: \n - `Immediately`: Executed
                              right after the Component object is created. The readiness
                              of the Component and its resources is not guaranteed
                              at this stage. - `RuntimeReady`: The Action is triggered
                              after the Component object has been created and all
                              associated runtime resources (e.g. Pods) are in a ready
                              state. - `ComponentReady`: The Action is triggered after
                              the Component itself is in a ready state. This process
                              does not affect the readiness state of the Component
                              or the Cluster. - `ClusterReady`: The Action is executed
                              after the Cluster is in a ready state. This execution
                              does not alter the Component or the Cluster's state
                              of readiness. \n This field cannot be updated."
                            type: string
                          retryPolicy:
                            description: "Defines the strategy to be taken when retrying
                              the Action after a failure. \n It specifies the conditions
                              under which the Action should be retried and the limits
                              to apply, such as the maximum number of retries and
                              backoff strategy. \n This field cannot be updated."
                            properties:
                              maxRetries:
                                default: 0
                                description: Defines the maximum number of retry attempts
                                  that should be made for a given Action. This value
                                  is set to 0 by default, indicating that no retries
                                  will be made.
                                type: integer
                              retryInterval:
                                default: 0
                                description: Indicates the duration of time to wait
                                  between each retry attempt. This value is set to
                                  0 by default, indicating that there will be no delay
                                  between retry attempts.
                                format: int64
                                type: integer
                            type: object
                          targetPodSelector:
                            description: "Defines the criteria used to select the
                              target Pod(s) for executing the Action. This is useful
                              when there is no default target replica identified.
                              It allows for precise control over which Pod(s) the
                              Action should run in. \n This field cannot be updated.
                              \n Note: This field is reserved for future use and is
                              not currently active."
                            enum:
                            - Any
                            - All
                            - Role
                            - Ordinal
                            type: string
                          timeoutSeconds:
                            default: 0
                            description: "Specifies the maximum duration in seconds
                              that the Action is allowed to run. \n If the Action
                              does not complete within this time frame, it will be
                              terminated. \n This field cannot be updated."
                            format: int32
                            type: integer
                        type: object
                    type: object
                  dataDump:
                    description: "Defines the procedure for exporting the data from
                      a replica. \n Use Case: This action is intended for initializing
                      a newly created replica with data. It involves exporting data
                      from an existing replica and importing it into the new, empty
                      replica. This is essential for synchronizing the state of replicas
                      across the system. \n Applicability: Some database engines or
                      associated sidecar applications (e.g., Patroni) may already
                      provide this functionality. In such cases, this action may not
                      be required. \n The output should be a valid data dump streamed
                      to stdout. It must exclude any irrelevant information to ensure
                      that only the necessary data is exported for import into the
                      new replica. \n Note: This field is immutable once it has been
                      set."
                    properties:
                      builtinHandler:
                        description: "Specifies the name of the predefined action
                          handler to be invoked for lifecycle actions. \n Lorry, as
                          a sidecar agent co-located with the database container in
                          the same Pod, includes a suite of built-in action implementations
                          that are tailored to different database engines. These are
                          known as \"builtin\" handlers, includes: `mysql`, `redis`,
                          `mongodb`, `etcd`, `postgresql`, `official-postgresql`,
                          `apecloud-postgresql`, `wesql`, `oceanbase`, `polardbx`.
                          \n If the `builtinHandler` field is specified, it instructs
                          Lorry to utilize its internal built-in action handler to
                          execute the specified lifecycle actions. \n The `builtinHandler`
                          field is of type `BuiltinActionHandlerType`, which represents
                          the name of the built-in handler. The `builtinHandler` specified
                          within the same `ComponentLifecycleActions` should be consistent
                          across all actions. This means that if you specify a built-in
                          handler for one action, you should use the same handler
                          for all other actions throughout the entire `ComponentLifecycleActions`
                          collection. \n If you need to define lifecycle actions for
                          database engines not covered by the existing built-in support,
                          or when the pre-existing built-in handlers do not meet your
                          specific needs, you can use the `customHandler` field to
                          define your own action implementation. \n Deprecation Notice:
                          \n - In the future, the `builtinHandler` field will be deprecated
                          in favor of using the `customHandler` field for configuring
                          all lifecycle actions. - Instead of using a name to indicate
                          the built-in action implementations in Lorry, the recommended
                          approach will be to explicitly invoke the desired action
                          implementation through a gRPC interface exposed by the sidecar
                          agent. - Developers will have the flexibility to either
                          use the built-in action implementations provided by Lorry
                          or develop their own sidecar agent to implement custom actions
                          and expose them via gRPC interfaces. - This change will
                          allow for greater customization and extensibility of lifecycle
                          actions, as developers can create their own \"builtin\"
                          implementations tailored to their specific requirements."
                        type: string
                      customHandler:
                        description: "Specifies a user-defined hook or procedure that
                          is called to perform the specific lifecycle action. It offers
                          a flexible and expandable approach for customizing the behavior
                          of a Component by leveraging tailored actions. \n An Action
                          can be implemented as either an ExecAction or an HTTPAction,
                          with future versions planning to support GRPCAction, thereby
                          accommodating unique logic for different database systems
                          within the Action's framework. \n In future iterations,
                          all built-in handlers are expected to transition to GRPCAction.
                          This change means that Lorry or other sidecar agents will
                          expose the implementation of actions through a GRPC interface
                          for external invocation. Then the controller will interact
                          with these actions via GRPCAction calls."
                        properties:
                          container:
                            description: "Defines the name of the container within
                              the target Pod where the action will be executed. \n
                              This name must correspond to one of the containers defined
                              in `componentDefinition.spec.runtime`. If this field
                              is not specified, the default behavior is to use the
                              first container listed in `componentDefinition.spec.runtime`.
                              \n This field cannot be updated. \n Note: This field
                              is reserved for future use and is not currently active."
                            type: string
                          env:
                            description: "Represents a list of environment variables
                              that will be injected into the container. These variables
                              enable the container to adapt its behavior based on
                              the environment it's running in. \n This field cannot
                              be updated."
                            items:
                              description: EnvVar represents an environment variable
                                present in a Container.
                              properties:
                                name:
                                  description: Name of the environment variable. Must
                                    be a C_IDENTIFIER.
                                  type: string
                                value:
                                  description: 'Variable references $(VAR_NAME) are
                                    expanded using the previously defined environment
                                    variables in the container and any service environment
                                    variables. If a variable cannot be resolved, the
                                    reference in the input string will be unchanged.
                                    Double $$ are reduced to a single $, which allows
                                    for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)"
                                    will produce the string literal "$(VAR_NAME)".
                                    Escaped references will never be expanded, regardless
                                    of whether the variable exists or not. Defaults
                                    to "".'
                                  type: string
                                valueFrom:
                                  description: Source for the environment variable's
                                    value. Cannot be used if value is not empty.
                                  properties:
                                    configMapKeyRef:
                                      description: Selects a key of a ConfigMap.
                                      properties:
                                        key:
                                          description: The key to select.
                                          type: string
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                        optional:
                                          description: Specify whether the ConfigMap
                                            or its key must be defined
                                          type: boolean
                                      required:
                                      - key
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    fieldRef:
                                      description: 'Selects a field of the pod: supports
                                        metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`,
                                        `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                        spec.serviceAccountName, status.hostIP, status.podIP,
                                        status.podIPs.'
                                      properties:
                                        apiVersion:
                                          description: Version of the schema the FieldPath
                                            is written in terms of, defaults to "v1".
                                          type: string
                                        fieldPath:
                                          description: Path of the field to select
                                            in the specified API version.
                                          type: string
                                      required:
                                      - fieldPath
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    resourceFieldRef:
                                      description: 'Selects a resource of the container:
                                        only resources limits and requests (limits.cpu,
                                        limits.memory, limits.ephemeral-storage, requests.cpu,
                                        requests.memory and requests.ephemeral-storage)
                                        are currently supported.'
                                      properties:
                                        containerName:
                                          description: 'Container name: required for
                                            volumes, optional for env vars'
                                          type: string
                                        divisor:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: Specifies the output format
                                            of the exposed resources, defaults to
                                            "1"
                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          x-kubernetes-int-or-string: true
                                        resource:
                                          description: 'Required: resource to select'
                                          type: string
                                      required:
                                      - resource
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    secretKeyRef:
                                      description: Selects a key of a secret in the
                                        pod's namespace
                                      properties:
                                        key:
                                          description: The key of the secret to select
                                            from.  Must be a valid secret key.
                                          type: string
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                        optional:
                                          description: Specify whether the Secret
                                            or its key must be defined
                                          type: boolean
                                      required:
                                      - key
                                      type: object
                                      x-kubernetes-map-type: atomic
                                  type: object
                              required:
                              - name
                              type: object
                            type: array
                          exec:
                            description: "Defines the command to run. \n This field
                              cannot be updated."
                            properties:
                              args:
                                description: Args represents the arguments that are
                                  passed to the `command` for execution.
                                items:
                                  type: string
                                type: array
                              command:
                                description: "Specifies the command to be executed
                                  inside the container. The working directory for
                                  this command is the container's root directory('/').
                                  Commands are executed directly without a shell environment,
                                  meaning shell-specific syntax ('|', etc.) is not
                                  supported. If the shell is required, it must be
                                  explicitly invoked in the command. \n A successful
                                  execution is indicated by an exit status of 0; any
                                  non-zero status signifies a failure."
                                items:
                                  type: string
                                type: array
                            type: object
                          http:
                            description: "Specifies the HTTP request to perform. \n
                              This field cannot be updated. \n Note: HTTPAction is
                              to be implemented in future version."
                            properties:
                              host:
                                description: Indicates the server's domain name or
                                  IP address. Defaults to the Pod's IP. Prefer setting
                                  the "Host" header in httpHeaders when needed.
                                type: string
                              httpHeaders:
                                description: Allows for the inclusion of custom headers
                                  in the request. HTTP permits the use of repeated
                                  headers.
                                items:
                                  description: HTTPHeader describes a custom header
                                    to be used in HTTP probes
                                  properties:
                                    name:
                                      description: The header field name. This will
                                        be canonicalized upon output, so case-variant
                                        names will be understood as the same header.
                                      type: string
                                    value:
                                      description: The header field value
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                type: array
                              method:
                                description: Represents the type of HTTP request to
                                  be made, such as "GET," "POST," "PUT," etc. If not
                                  specified, "GET" is the default method.
                                type: string
                              path:
                                description: Specifies the endpoint to be requested
                                  on the HTTP server.
                                type: string
                              port:
                                anyOf:
                                - type: integer
                                - type: string
                                description: Specifies the target port for the HTTP
                                  request. It can be specified either as a numeric
                                  value in the range of 1 to 65535, or as a named
                                  port that meets the IANA_SVC_NAME specification.
                                x-kubernetes-int-or-string: true
                              scheme:
                                description: Designates the protocol used to make
                                  the request, such as HTTP or HTTPS. If not specified,
                                  HTTP is used by default.
                                type: string
                            required:
                            - port
                            type: object
                          image:
                            description: "Specifies the container image to be used
                              for running the Action. \n When specified, a dedicated
                              container will be created using this image to execute
                              the Action. This field is mutually exclusive with the
                              `container` field; only one of them should be provided.
                              \n This field cannot be updated."
                            type: string
                          matchingKey:
                            description: "Used in conjunction with the `targetPodSelector`
                              field to refine the selection of target pod(s) for Action
                              execution. The impact of this field depends on the `targetPodSelector`
                              value: \n - When `targetPodSelector` is set to `Any`
                              or `All`, this field will be ignored. - When `targetPodSelector`
                              is set to `Role`, only those replicas whose role matches
                              the `matchingKey` will be selected for the Action. \n
                              This field cannot be updated. \n Note: This field is
                              reserved for future use and is not currently active."
                            type: string
                          preCondition:
                            description: "Specifies the state that the cluster must
                              reach before the Action is executed. Currently, this
                              is only applicable to the `postProvision` action. \n
                              The conditions are as follows: \n - `Immediately`: Executed
                              right after the Component object is created. The readiness
                              of the Component and its resources is not guaranteed
                              at this stage. - `RuntimeReady`: The Action is triggered
                              after the Component object has been created and all
                              associated runtime resources (e.g. Pods) are in a ready
                              state. - `ComponentReady`: The Action is triggered after
                              the Component itself is in a ready state. This process
                              does not affect the readiness state of the Component
                              or the Cluster. - `ClusterReady`: The Action is executed
                              after the Cluster is in a ready state. This execution
                              does not alter the Component or the Cluster's state
                              of readiness. \n This field cannot be updated."
                            type: string
                          retryPolicy:
                            description: "Defines the strategy to be taken when retrying
                              the Action after a failure. \n It specifies the conditions
                              under which the Action should be retried and the limits
                              to apply, such as the maximum number of retries and
                              backoff strategy. \n This field cannot be updated."
                            properties:
                              maxRetries:
                                default: 0
                                description: Defines the maximum number of retry attempts
                                  that should be made for a given Action. This value
                                  is set to 0 by default, indicating that no retries
                                  will be made.
                                type: integer
                              retryInterval:
                                default: 0
                                description: Indicates the duration of time to wait
                                  between each retry attempt. This value is set to
                                  0 by default, indicating that there will be no delay
                                  between retry attempts.
                                format: int64
                                type: integer
                            type: object
                          targetPodSelector:
                            description: "Defines the criteria used to select the
                              target Pod(s) for executing the Action. This is useful
                              when there is no default target replica identified.
                              It allows for precise control over which Pod(s) the
                              Action should run in. \n This field cannot be updated.
                              \n Note: This field is reserved for future use and is
                              not currently active."
                            enum:
                            - Any
                            - All
                            - Role
                            - Ordinal
                            type: string
                          timeoutSeconds:
                            default: 0
                            description: "Specifies the maximum duration in seconds
                              that the Action is allowed to run. \n If the Action
                              does not complete within this time frame, it will be
                              terminated. \n This field cannot be updated."
                            format: int32
                            type: integer
                        type: object
                    type: object
                  dataLoad:
                    description: "Defines the procedure for importing data into a
                      replica. \n Use Case: This action is intended for initializing
                      a newly created replica with data. It involves exporting data
                      from an existing replica and importing it into the new, empty
                      replica. This is essential for synchronizing the state of replicas
                      across the system. \n Some database engines or associated sidecar
                      applications (e.g., Patroni) may already provide this functionality.
                      In such cases, this action may not be required. \n Data should
                      be received through stdin. If any error occurs during the process,
                      the action must be able to guarantee idempotence to allow for
                      retries from the beginning. \n Note: This field is immutable
                      once it has been set."
                    properties:
                      builtinHandler:
                        description: "Specifies the name of the predefined action
                          handler to be invoked for lifecycle actions. \n Lorry, as
                          a sidecar agent co-located with the database container in
                          the same Pod, includes a suite of built-in action implementations
                          that are tailored to different database engines. These are
                          known as \"builtin\" handlers, includes: `mysql`, `redis`,
                          `mongodb`, `etcd`, `postgresql`, `official-postgresql`,
                          `apecloud-postgresql`, `wesql`, `oceanbase`, `polardbx`.
                          \n If the `builtinHandler` field is specified, it instructs
                          Lorry to utilize its internal built-in action handler to
                          execute the specified lifecycle actions. \n The `builtinHandler`
                          field is of type `BuiltinActionHandlerType`, which represents
                          the name of the built-in handler. The `builtinHandler` specified
                          within the same `ComponentLifecycleActions` should be consistent
                          across all actions. This means that if you specify a built-in
                          handler for one action, you should use the same handler
                          for all other actions throughout the entire `ComponentLifecycleActions`
                          collection. \n If you need to define lifecycle actions for
                          database engines not covered by the existing built-in support,
                          or when the pre-existing built-in handlers do not meet your
                          specific needs, you can use the `customHandler` field to
                          define your own action implementation. \n Deprecation Notice:
                          \n - In the future, the `builtinHandler` field will be deprecated
                          in favor of using the `customHandler` field for configuring
                          all lifecycle actions. - Instead of using a name to indicate
                          the built-in action implementations in Lorry, the recommended
                          approach will be to explicitly invoke the desired action
                          implementation through a gRPC interface exposed by the sidecar
                          agent. - Developers will have the flexibility to either
                          use the built-in action implementations provided by Lorry
                          or develop their own sidecar agent to implement custom actions
                          and expose them via gRPC interfaces. - This change will
                          allow for greater customization and extensibility of lifecycle
                          actions, as developers can create their own \"builtin\"
                          implementations tailored to their specific requirements."
                        type: string
                      customHandler:
                        description: "Specifies a user-defined hook or procedure that
                          is called to perform the specific lifecycle action. It offers
                          a flexible and expandable approach for customizing the behavior
                          of a Component by leveraging tailored actions. \n An Action
                          can be implemented as either an ExecAction or an HTTPAction,
                          with future versions planning to support GRPCAction, thereby
                          accommodating unique logic for different database systems
                          within the Action's framework. \n In future iterations,
                          all built-in handlers are expected to transition to GRPCAction.
                          This change means that Lorry or other sidecar agents will
                          expose the implementation of actions through a GRPC interface
                          for external invocation. Then the controller will interact
                          with these actions via GRPCAction calls."
                        properties:
                          container:
                            description: "Defines the name of the container within
                              the target Pod where the action will be executed. \n
                              This name must correspond to one of the containers defined
                              in `componentDefinition.spec.runtime`. If this field
                              is not specified, the default behavior is to use the
                              first container listed in `componentDefinition.spec.runtime`.
                              \n This field cannot be updated. \n Note: This field
                              is reserved for future use and is not currently active."
                            type: string
                          env:
                            description: "Represents a list of environment variables
                              that will be injected into the container. These variables
                              enable the container to adapt its behavior based on
                              the environment it's running in. \n This field cannot
                              be updated."
                            items:
                              description: EnvVar represents an environment variable
                                present in a Container.
                              properties:
                                name:
                                  description: Name of the environment variable. Must
                                    be a C_IDENTIFIER.
                                  type: string
                                value:
                                  description: 'Variable references $(VAR_NAME) are
                                    expanded using the previously defined environment
                                    variables in the container and any service environment
                                    variables. If a variable cannot be resolved, the
                                    reference in the input string will be unchanged.
                                    Double $$ are reduced to a single $, which allows
                                    for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)"
                                    will produce the string literal "$(VAR_NAME)".
                                    Escaped references will never be expanded, regardless
                                    of whether the variable exists or not. Defaults
                                    to "".'
                                  type: string
                                valueFrom:
                                  description: Source for the environment variable's
                                    value. Cannot be used if value is not empty.
                                  properties:
                                    configMapKeyRef:
                                      description: Selects a key of a ConfigMap.
                                      properties:
                                        key:
                                          description: The key to select.
                                          type: string
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                        optional:
                                          description: Specify whether the ConfigMap
                                            or its key must be defined
                                          type: boolean
                                      required:
                                      - key
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    fieldRef:
                                      description: 'Selects a field of the pod: supports
                                        metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`,
                                        `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                        spec.serviceAccountName, status.hostIP, status.podIP,
                                        status.podIPs.'
                                      properties:
                                        apiVersion:
                                          description: Version of the schema the FieldPath
                                            is written in terms of, defaults to "v1".
                                          type: string
                                        fieldPath:
                                          description: Path of the field to select
                                            in the specified API version.
                                          type: string
                                      required:
                                      - fieldPath
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    resourceFieldRef:
                                      description: 'Selects a resource of the container:
                                        only resources limits and requests (limits.cpu,
                                        limits.memory, limits.ephemeral-storage, requests.cpu,
                                        requests.memory and requests.ephemeral-storage)
                                        are currently supported.'
                                      properties:
                                        containerName:
                                          description: 'Container name: required for
                                            volumes, optional for env vars'
                                          type: string
                                        divisor:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: Specifies the output format
                                            of the exposed resources, defaults to
                                            "1"
                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          x-kubernetes-int-or-string: true
                                        resource:
                                          description: 'Required: resource to select'
                                          type: string
                                      required:
                                      - resource
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    secretKeyRef:
                                      description: Selects a key of a secret in the
                                        pod's namespace
                                      properties:
                                        key:
                                          description: The key of the secret to select
                                            from.  Must be a valid secret key.
                                          type: string
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                        optional:
                                          description: Specify whether the Secret
                                            or its key must be defined
                                          type: boolean
                                      required:
                                      - key
                                      type: object
                                      x-kubernetes-map-type: atomic
                                  type: object
                              required:
                              - name
                              type: object
                            type: array
                          exec:
                            description: "Defines the command to run. \n This field
                              cannot be updated."
                            properties:
                              args:
                                description: Args represents the arguments that are
                                  passed to the `command` for execution.
                                items:
                                  type: string
                                type: array
                              command:
                                description: "Specifies the command to be executed
                                  inside the container. The working directory for
                                  this command is the container's root directory('/').
                                  Commands are executed directly without a shell environment,
                                  meaning shell-specific syntax ('|', etc.) is not
                                  supported. If the shell is required, it must be
                                  explicitly invoked in the command. \n A successful
                                  execution is indicated by an exit status of 0; any
                                  non-zero status signifies a failure."
                                items:
                                  type: string
                                type: array
                            type: object
                          http:
                            description: "Specifies the HTTP request to perform. \n
                              This field cannot be updated. \n Note: HTTPAction is
                              to be implemented in future version."
                            properties:
                              host:
                                description: Indicates the server's domain name or
                                  IP address. Defaults to the Pod's IP. Prefer setting
                                  the "Host" header in httpHeaders when needed.
                                type: string
                              httpHeaders:
                                description: Allows for the inclusion of custom headers
                                  in the request. HTTP permits the use of repeated
                                  headers.
                                items:
                                  description: HTTPHeader describes a custom header
                                    to be used in HTTP probes
                                  properties:
                                    name:
                                      description: The header field name. This will
                                        be canonicalized upon output, so case-variant
                                        names will be understood as the same header.
                                      type: string
                                    value:
                                      description: The header field value
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                type: array
                              method:
                                description: Represents the type of HTTP request to
                                  be made, such as "GET," "POST," "PUT," etc. If not
                                  specified, "GET" is the default method.
                                type: string
                              path:
                                description: Specifies the endpoint to be requested
                                  on the HTTP server.
                                type: string
                              port:
                                anyOf:
                                - type: integer
                                - type: string
                                description: Specifies the target port for the HTTP
                                  request. It can be specified either as a numeric
                                  value in the range of 1 to 65535, or as a named
                                  port that meets the IANA_SVC_NAME specification.
                                x-kubernetes-int-or-string: true
                              scheme:
                                description: Designates the protocol used to make
                                  the request, such as HTTP or HTTPS. If not specified,
                                  HTTP is used by default.
                                type: string
                            required:
                            - port
                            type: object
                          image:
                            description: "Specifies the container image to be used
                              for running the Action. \n When specified, a dedicated
                              container will be created using this image to execute
                              the Action. This field is mutually exclusive with the
                              `container` field; only one of them should be provided.
                              \n This field cannot be updated."
                            type: string
                          matchingKey:
                            description: "Used in conjunction with the `targetPodSelector`
                              field to refine the selection of target pod(s) for Action
                              execution. The impact of this field depends on the `targetPodSelector`
                              value: \n - When `targetPodSelector` is set to `Any`
                              or `All`, this field will be ignored. - When `targetPodSelector`
                              is set to `Role`, only those replicas whose role matches
                              the `matchingKey` will be selected for the Action. \n
                              This field cannot be updated. \n Note: This field is
                              reserved for future use and is not currently active."
                            type: string
                          preCondition:
                            description: "Specifies the state that the cluster must
                              reach before the Action is executed. Currently, this
                              is only applicable to the `postProvision` action. \n
                              The conditions are as follows: \n - `Immediately`: Executed
                              right after the Component object is created. The readiness
                              of the Component and its resources is not guaranteed
                              at this stage. - `RuntimeReady`: The Action is triggered
                              after the Component object has been created and all
                              associated runtime resources (e.g. Pods) are in a ready
                              state. - `ComponentReady`: The Action is triggered after
                              the Component itself is in a ready state. This process
                              does not affect the readiness state of the Component
                              or the Cluster. - `ClusterReady`: The Action is executed
                              after the Cluster is in a ready state. This execution
                              does not alter the Component or the Cluster's state
                              of readiness. \n This field cannot be updated."
                            type: string
                          retryPolicy:
                            description: "Defines the strategy to be taken when retrying
                              the Action after a failure. \n It specifies the conditions
                              under which the Action should be retried and the limits
                              to apply, such as the maximum number of retries and
                              backoff strategy. \n This field cannot be updated."
                            properties:
                              maxRetries:
                                default: 0
                                description: Defines the maximum number of retry attempts
                                  that should be made for a given Action. This value
                                  is set to 0 by default, indicating that no retries
                                  will be made.
                                type: integer
                              retryInterval:
                                default: 0
                                description: Indicates the duration of time to wait
                                  between each retry attempt. This value is set to
                                  0 by default, indicating that there will be no delay
                                  between retry attempts.
                                format: int64
                                type: integer
                            type: object
                          targetPodSelector:
                            description: "Defines the criteria used to select the
                              target Pod(s) for executing the Action. This is useful
                              when there is no default target replica identified.
                              It allows for precise control over which Pod(s) the
                              Action should run in. \n This field cannot be updated.
                              \n Note: This field is reserved for future use and is
                              not currently active."
                            enum:
                            - Any
                            - All
                            - Role
                            - Ordinal
                            type: string
                          timeoutSeconds:
                            default: 0
                            description: "Specifies the maximum duration in seconds
                              that the Action is allowed to run. \n If the Action
                              does not complete within this time frame, it will be
                              terminated. \n This field cannot be updated."
                            format: int32
                            type: integer
                        type: object
                    type: object
                  memberJoin:
                    description: "Defines the procedure to add a new replica to the
                      replication group. \n This action is initiated after a replica
                      pod becomes ready. \n The role of the replica (e.g., primary,
                      secondary) will be determined and assigned as part of the action
                      command implementation, or automatically by the database kernel
                      or a sidecar utility like Patroni that implements a consensus
                      algorithm. \n The container executing this action has access
                      to following environment variables: \n - KB_SERVICE_PORT: The
                      port used by the database service. - KB_SERVICE_USER: The username
                      with the necessary permissions to interact with the database
                      service. - KB_SERVICE_PASSWORD: The corresponding password for
                      KB_SERVICE_USER to authenticate with the database service. -
                      KB_PRIMARY_POD_FQDN: The FQDN of the primary Pod within the
                      replication group. - KB_MEMBER_ADDRESSES: A comma-separated
                      list of Pod addresses for all replicas in the group. - KB_NEW_MEMBER_POD_NAME:
                      The pod name of the replica being added to the group. - KB_NEW_MEMBER_POD_IP:
                      The IP address of the replica being added to the group. \n Expected
                      action output: - On Failure: An error message detailing the
                      reason for any failure encountered during the addition of the
                      new member. \n For example, to add a new OBServer to an OceanBase
                      Cluster in 'zone1', the following command may be used: \n ```yaml
                      command: - bash - -c - | ADDRESS=$(KB_MEMBER_ADDRESSES%%,*)
                      HOST=$(echo $ADDRESS | cut -d ':' -f 1) PORT=$(echo $ADDRESS
                      | cut -d ':' -f 2) CLIENT=\"mysql -u $KB_SERVICE_USER -p$KB_SERVICE_PASSWORD
                      -P $PORT -h $HOST -e\" $CLIENT \"ALTER SYSTEM ADD SERVER '$KB_NEW_MEMBER_POD_IP:$KB_SERVICE_PORT'
                      ZONE 'zone1'\" ``` \n Note: This field is immutable once it
                      has been set."
                    properties:
                      builtinHandler:
                        description: "Specifies the name of the predefined action
                          handler to be invoked for lifecycle actions. \n Lorry, as
                          a sidecar agent co-located with the database container in
                          the same Pod, includes a suite of built-in action implementations
                          that are tailored to different database engines. These are
                          known as \"builtin\" handlers, includes: `mysql`, `redis`,
                          `mongodb`, `etcd`, `postgresql`, `official-postgresql`,
                          `apecloud-postgresql`, `wesql`, `oceanbase`, `polardbx`.
                          \n If the `builtinHandler` field is specified, it instructs
                          Lorry to utilize its internal built-in action handler to
                          execute the specified lifecycle actions. \n The `builtinHandler`
                          field is of type `BuiltinActionHandlerType`, which represents
                          the name of the built-in handler. The `builtinHandler` specified
                          within the same `ComponentLifecycleActions` should be consistent
                          across all actions. This means that if you specify a built-in
                          handler for one action, you should use the same handler
                          for all other actions throughout the entire `ComponentLifecycleActions`
                          collection. \n If you need to define lifecycle actions for
                          database engines not covered by the existing built-in support,
                          or when the pre-existing built-in handlers do not meet your
                          specific needs, you can use the `customHandler` field to
                          define your own action implementation. \n Deprecation Notice:
                          \n - In the future, the `builtinHandler` field will be deprecated
                          in favor of using the `customHandler` field for configuring
                          all lifecycle actions. - Instead of using a name to indicate
                          the built-in action implementations in Lorry, the recommended
                          approach will be to explicitly invoke the desired action
                          implementation through a gRPC interface exposed by the sidecar
                          agent. - Developers will have the flexibility to either
                          use the built-in action implementations provided by Lorry
                          or develop their own sidecar agent to implement custom actions
                          and expose them via gRPC interfaces. - This change will
                          allow for greater customization and extensibility of lifecycle
                          actions, as developers can create their own \"builtin\"
                          implementations tailored to their specific requirements."
                        type: string
                      customHandler:
                        description: "Specifies a user-defined hook or procedure that
                          is called to perform the specific lifecycle action. It offers
                          a flexible and expandable approach for customizing the behavior
                          of a Component by leveraging tailored actions. \n An Action
                          can be implemented as either an ExecAction or an HTTPAction,
                          with future versions planning to support GRPCAction, thereby
                          accommodating unique logic for different database systems
                          within the Action's framework. \n In future iterations,
                          all built-in handlers are expected to transition to GRPCAction.
                          This change means that Lorry or other sidecar agents will
                          expose the implementation of actions through a GRPC interface
                          for external invocation. Then the controller will interact
                          with these actions via GRPCAction calls."
                        properties:
                          container:
                            description: "Defines the name of the container within
                              the target Pod where the action will be executed. \n
                              This name must correspond to one of the containers defined
                              in `componentDefinition.spec.runtime`. If this field
                              is not specified, the default behavior is to use the
                              first container listed in `componentDefinition.spec.runtime`.
                              \n This field cannot be updated. \n Note: This field
                              is reserved for future use and is not currently active."
                            type: string
                          env:
                            description: "Represents a list of environment variables
                              that will be injected into the container. These variables
                              enable the container to adapt its behavior based on
                              the environment it's running in. \n This field cannot
                              be updated."
                            items:
                              description: EnvVar represents an environment variable
                                present in a Container.
                              properties:
                                name:
                                  description: Name of the environment variable. Must
                                    be a C_IDENTIFIER.
                                  type: string
                                value:
                                  description: 'Variable references $(VAR_NAME) are
                                    expanded using the previously defined environment
                                    variables in the container and any service environment
                                    variables. If a variable cannot be resolved, the
                                    reference in the input string will be unchanged.
                                    Double $$ are reduced to a single $, which allows
                                    for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)"
                                    will produce the string literal "$(VAR_NAME)".
                                    Escaped references will never be expanded, regardless
                                    of whether the variable exists or not. Defaults
                                    to "".'
                                  type: string
                                valueFrom:
                                  description: Source for the environment variable's
                                    value. Cannot be used if value is not empty.
                                  properties:
                                    configMapKeyRef:
                                      description: Selects a key of a ConfigMap.
                                      properties:
                                        key:
                                          description: The key to select.
                                          type: string
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                        optional:
                                          description: Specify whether the ConfigMap
                                            or its key must be defined
                                          type: boolean
                                      required:
                                      - key
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    fieldRef:
                                      description: 'Selects a field of the pod: supports
                                        metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`,
                                        `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                        spec.serviceAccountName, status.hostIP, status.podIP,
                                        status.podIPs.'
                                      properties:
                                        apiVersion:
                                          description: Version of the schema the FieldPath
                                            is written in terms of, defaults to "v1".
                                          type: string
                                        fieldPath:
                                          description: Path of the field to select
                                            in the specified API version.
                                          type: string
                                      required:
                                      - fieldPath
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    resourceFieldRef:
                                      description: 'Selects a resource of the container:
                                        only resources limits and requests (limits.cpu,
                                        limits.memory, limits.ephemeral-storage, requests.cpu,
                                        requests.memory and requests.ephemeral-storage)
                                        are currently supported.'
                                      properties:
                                        containerName:
                                          description: 'Container name: required for
                                            volumes, optional for env vars'
                                          type: string
                                        divisor:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: Specifies the output format
                                            of the exposed resources, defaults to
                                            "1"
                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          x-kubernetes-int-or-string: true
                                        resource:
                                          description: 'Required: resource to select'
                                          type: string
                                      required:
                                      - resource
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    secretKeyRef:
                                      description: Selects a key of a secret in the
                                        pod's namespace
                                      properties:
                                        key:
                                          description: The key of the secret to select
                                            from.  Must be a valid secret key.
                                          type: string
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                        optional:
                                          description: Specify whether the Secret
                                            or its key must be defined
                                          type: boolean
                                      required:
                                      - key
                                      type: object
                                      x-kubernetes-map-type: atomic
                                  type: object
                              required:
                              - name
                              type: object
                            type: array
                          exec:
                            description: "Defines the command to run. \n This field
                              cannot be updated."
                            properties:
                              args:
                                description: Args represents the arguments that are
                                  passed to the `command` for execution.
                                items:
                                  type: string
                                type: array
                              command:
                                description: "Specifies the command to be executed
                                  inside the container. The working directory for
                                  this command is the container's root directory('/').
                                  Commands are executed directly without a shell environment,
                                  meaning shell-specific syntax ('|', etc.) is not
                                  supported. If the shell is required, it must be
                                  explicitly invoked in the command. \n A successful
                                  execution is indicated by an exit status of 0; any
                                  non-zero status signifies a failure."
                                items:
                                  type: string
                                type: array
                            type: object
                          http:
                            description: "Specifies the HTTP request to perform. \n
                              This field cannot be updated. \n Note: HTTPAction is
                              to be implemented in future version."
                            properties:
                              host:
                                description: Indicates the server's domain name or
                                  IP address. Defaults to the Pod's IP. Prefer setting
                                  the "Host" header in httpHeaders when needed.
                                type: string
                              httpHeaders:
                                description: Allows for the inclusion of custom headers
                                  in the request. HTTP permits the use of repeated
                                  headers.
                                items:
                                  description: HTTPHeader describes a custom header
                                    to be used in HTTP probes
                                  properties:
                                    name:
                                      description: The header field name. This will
                                        be canonicalized upon output, so case-variant
                                        names will be understood as the same header.
                                      type: string
                                    value:
                                      description: The header field value
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                type: array
                              method:
                                description: Represents the type of HTTP request to
                                  be made, such as "GET," "POST," "PUT," etc. If not
                                  specified, "GET" is the default method.
                                type: string
                              path:
                                description: Specifies the endpoint to be requested
                                  on the HTTP server.
                                type: string
                              port:
                                anyOf:
                                - type: integer
                                - type: string
                                description: Specifies the target port for the HTTP
                                  request. It can be specified either as a numeric
                                  value in the range of 1 to 65535, or as a named
                                  port that meets the IANA_SVC_NAME specification.
                                x-kubernetes-int-or-string: true
                              scheme:
                                description: Designates the protocol used to make
                                  the request, such as HTTP or HTTPS. If not specified,
                                  HTTP is used by default.
                                type: string
                            required:
                            - port
                            type: object
                          image:
                            description: "Specifies the container image to be used
                              for running the Action. \n When specified, a dedicated
                              container will be created using this image to execute
                              the Action. This field is mutually exclusive with the
                              `container` field; only one of them should be provided.
                              \n This field cannot be updated."
                            type: string
                          matchingKey:
                            description: "Used in conjunction with the `targetPodSelector`
                              field to refine the selection of target pod(s) for Action
                              execution. The impact of this field depends on the `targetPodSelector`
                              value: \n - When `targetPodSelector` is set to `Any`
                              or `All`, this field will be ignored. - When `targetPodSelector`
                              is set to `Role`, only those replicas whose role matches
                              the `matchingKey` will be selected for the Action. \n
                              This field cannot be updated. \n Note: This field is
                              reserved for future use and is not currently active."
                            type: string
                          preCondition:
                            description: "Specifies the state that the cluster must
                              reach before the Action is executed. Currently, this
                              is only applicable to the `postProvision` action. \n
                              The conditions are as follows: \n - `Immediately`: Executed
                              right after the Component object is created. The readiness
                              of the Component and its resources is not guaranteed
                              at this stage. - `RuntimeReady`: The Action is triggered
                              after the Component object has been created and all
                              associated runtime resources (e.g. Pods) are in a ready
                              state. - `ComponentReady`: The Action is triggered after
                              the Component itself is in a ready state. This process
                              does not affect the readiness state of the Component
                              or the Cluster. - `ClusterReady`: The Action is executed
                              after the Cluster is in a ready state. This execution
                              does not alter the Component or the Cluster's state
                              of readiness. \n This field cannot be updated."
                            type: string
                          retryPolicy:
                            description: "Defines the strategy to be taken when retrying
                              the Action after a failure. \n It specifies the conditions
                              under which the Action should be retried and the limits
                              to apply, such as the maximum number of retries and
                              backoff strategy. \n This field cannot be updated."
                            properties:
                              maxRetries:
                                default: 0
                                description: Defines the maximum number of retry attempts
                                  that should be made for a given Action. This value
                                  is set to 0 by default, indicating that no retries
                                  will be made.
                                type: integer
                              retryInterval:
                                default: 0
                                description: Indicates the duration of time to wait
                                  between each retry attempt. This value is set to
                                  0 by default, indicating that there will be no delay
                                  between retry attempts.
                                format: int64
                                type: integer
                            type: object
                          targetPodSelector:
                            description: "Defines the criteria used to select the
                              target Pod(s) for executing the Action. This is useful
                              when there is no default target replica identified.
                              It allows for precise control over which Pod(s) the
                              Action should run in. \n This field cannot be updated.
                              \n Note: This field is reserved for future use and is
                              not currently active."
                            enum:
                            - Any
                            - All
                            - Role
                            - Ordinal
                            type: string
                          timeoutSeconds:
                            default: 0
                            description: "Specifies the maximum duration in seconds
                              that the Action is allowed to run. \n If the Action
                              does not complete within this time frame, it will be
                              terminated. \n This field cannot be updated."
                            format: int32
                            type: integer
                        type: object
                    type: object
                  memberLeave:
                    description: "Defines the procedure to remove a replica from the
                      replication group. \n This action is initiated before remove
                      a replica from the group. The operator will wait for MemberLeave
                      to complete successfully before releasing the replica and cleaning
                      up related Kubernetes resources. \n The process typically includes
                      updating configurations and informing other group members about
                      the removal. Data migration is generally not part of this action
                      and should be handled separately if needed. \n The container
                      executing this action has access to following environment variables:
                      \n - KB_SERVICE_PORT: The port used by the database service.
                      - KB_SERVICE_USER: The username with the necessary permissions
                      to interact with the database service. - KB_SERVICE_PASSWORD:
                      The corresponding password for KB_SERVICE_USER to authenticate
                      with the database service. - KB_PRIMARY_POD_FQDN: The FQDN of
                      the primary Pod within the replication group. - KB_MEMBER_ADDRESSES:
                      A comma-separated list of Pod addresses for all replicas in
                      the group. - KB_LEAVE_MEMBER_POD_NAME: The pod name of the replica
                      being removed from the group. - KB_LEAVE_MEMBER_POD_IP: The
                      IP address of the replica being removed from the group. \n Expected
                      action output: - On Failure: An error message, if applicable,
                      indicating why the action failed. \n For example, to remove
                      an OBServer from an OceanBase Cluster in 'zone1', the following
                      command can be executed: \n ```yaml command: - bash - -c - |
                      ADDRESS=$(KB_MEMBER_ADDRESSES%%,*) HOST=$(echo $ADDRESS | cut
                      -d ':' -f 1) PORT=$(echo $ADDRESS | cut -d ':' -f 2) CLIENT=\"mysql
                      -u $KB_SERVICE_USER  -p$KB_SERVICE_PASSWORD -P $PORT -h $HOST
                      -e\" $CLIENT \"ALTER SYSTEM DELETE SERVER '$KB_LEAVE_MEMBER_POD_IP:$KB_SERVICE_PORT'
                      ZONE 'zone1'\" ``` \n Note: This field is immutable once it
                      has been set."
                    properties:
                      builtinHandler:
                        description: "Specifies the name of the predefined action
                          handler to be invoked for lifecycle actions. \n Lorry, as
                          a sidecar agent co-located with the database container in
                          the same Pod, includes a suite of built-in action implementations
                          that are tailored to different database engines. These are
                          known as \"builtin\" handlers, includes: `mysql`, `redis`,
                          `mongodb`, `etcd`, `postgresql`, `official-postgresql`,
                          `apecloud-postgresql`, `wesql`, `oceanbase`, `polardbx`.
                          \n If the `builtinHandler` field is specified, it instructs
                          Lorry to utilize its internal built-in action handler to
                          execute the specified lifecycle actions. \n The `builtinHandler`
                          field is of type `BuiltinActionHandlerType`, which represents
                          the name of the built-in handler. The `builtinHandler` specified
                          within the same `ComponentLifecycleActions` should be consistent
                          across all actions. This means that if you specify a built-in
                          handler for one action, you should use the same handler
                          for all other actions throughout the entire `ComponentLifecycleActions`
                          collection. \n If you need to define lifecycle actions for
                          database engines not covered by the existing built-in support,
                          or when the pre-existing built-in handlers do not meet your
                          specific needs, you can use the `customHandler` field to
                          define your own action implementation. \n Deprecation Notice:
                          \n - In the future, the `builtinHandler` field will be deprecated
                          in favor of using the `customHandler` field for configuring
                          all lifecycle actions. - Instead of using a name to indicate
                          the built-in action implementations in Lorry, the recommended
                          approach will be to explicitly invoke the desired action
                          implementation through a gRPC interface exposed by the sidecar
                          agent. - Developers will have the flexibility to either
                          use the built-in action implementations provided by Lorry
                          or develop their own sidecar agent to implement custom actions
                          and expose them via gRPC interfaces. - This change will
                          allow for greater customization and extensibility of lifecycle
                          actions, as developers can create their own \"builtin\"
                          implementations tailored to their specific requirements."
                        type: string
                      customHandler:
                        description: "Specifies a user-defined hook or procedure that
                          is called to perform the specific lifecycle action. It offers
                          a flexible and expandable approach for customizing the behavior
                          of a Component by leveraging tailored actions. \n An Action
                          can be implemented as either an ExecAction or an HTTPAction,
                          with future versions planning to support GRPCAction, thereby
                          accommodating unique logic for different database systems
                          within the Action's framework. \n In future iterations,
                          all built-in handlers are expected to transition to GRPCAction.
                          This change means that Lorry or other sidecar agents will
                          expose the implementation of actions through a GRPC interface
                          for external invocation. Then the controller will interact
                          with these actions via GRPCAction calls."
                        properties:
                          container:
                            description: "Defines the name of the container within
                              the target Pod where the action will be executed. \n
                              This name must correspond to one of the containers defined
                              in `componentDefinition.spec.runtime`. If this field
                              is not specified, the default behavior is to use the
                              first container listed in `componentDefinition.spec.runtime`.
                              \n This field cannot be updated. \n Note: This field
                              is reserved for future use and is not currently active."
                            type: string
                          env:
                            description: "Represents a list of environment variables
                              that will be injected into the container. These variables
                              enable the container to adapt its behavior based on
                              the environment it's running in. \n This field cannot
                              be updated."
                            items:
                              description: EnvVar represents an environment variable
                                present in a Container.
                              properties:
                                name:
                                  description: Name of the environment variable. Must
                                    be a C_IDENTIFIER.
                                  type: string
                                value:
                                  description: 'Variable references $(VAR_NAME) are
                                    expanded using the previously defined environment
                                    variables in the container and any service environment
                                    variables. If a variable cannot be resolved, the
                                    reference in the input string will be unchanged.
                                    Double $$ are reduced to a single $, which allows
                                    for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)"
                                    will produce the string literal "$(VAR_NAME)".
                                    Escaped references will never be expanded, regardless
                                    of whether the variable exists or not. Defaults
                                    to "".'
                                  type: string
                                valueFrom:
                                  description: Source for the environment variable's
                                    value. Cannot be used if value is not empty.
                                  properties:
                                    configMapKeyRef:
                                      description: Selects a key of a ConfigMap.
                                      properties:
                                        key:
                                          description: The key to select.
                                          type: string
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                        optional:
                                          description: Specify whether the ConfigMap
                                            or its key must be defined
                                          type: boolean
                                      required:
                                      - key
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    fieldRef:
                                      description: 'Selects a field of the pod: supports
                                        metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`,
                                        `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                        spec.serviceAccountName, status.hostIP, status.podIP,
                                        status.podIPs.'
                                      properties:
                                        apiVersion:
                                          description: Version of the schema the FieldPath
                                            is written in terms of, defaults to "v1".
                                          type: string
                                        fieldPath:
                                          description: Path of the field to select
                                            in the specified API version.
                                          type: string
                                      required:
                                      - fieldPath
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    resourceFieldRef:
                                      description: 'Selects a resource of the container:
                                        only resources limits and requests (limits.cpu,
                                        limits.memory, limits.ephemeral-storage, requests.cpu,
                                        requests.memory and requests.ephemeral-storage)
                                        are currently supported.'
                                      properties:
                                        containerName:
                                          description: 'Container name: required for
                                            volumes, optional for env vars'
                                          type: string
                                        divisor:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: Specifies the output format
                                            of the exposed resources, defaults to
                                            "1"
                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          x-kubernetes-int-or-string: true
                                        resource:
                                          description: 'Required: resource to select'
                                          type: string
                                      required:
                                      - resource
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    secretKeyRef:
                                      description: Selects a key of a secret in the
                                        pod's namespace
                                      properties:
                                        key:
                                          description: The key of the secret to select
                                            from.  Must be a valid secret key.
                                          type: string
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                        optional:
                                          description: Specify whether the Secret
                                            or its key must be defined
                                          type: boolean
                                      required:
                                      - key
                                      type: object
                                      x-kubernetes-map-type: atomic
                                  type: object
                              required:
                              - name
                              type: object
                            type: array
                          exec:
                            description: "Defines the command to run. \n This field
                              cannot be updated."
                            properties:
                              args:
                                description: Args represents the arguments that are
                                  passed to the `command` for execution.
                                items:
                                  type: string
                                type: array
                              command:
                                description: "Specifies the command to be executed
                                  inside the container. The working directory for
                                  this command is the container's root directory('/').
                                  Commands are executed directly without a shell environment,
                                  meaning shell-specific syntax ('|', etc.) is not
                                  supported. If the shell is required, it must be
                                  explicitly invoked in the command. \n A successful
                                  execution is indicated by an exit status of 0; any
                                  non-zero status signifies a failure."
                                items:
                                  type: string
                                type: array
                            type: object
                          http:
                            description: "Specifies the HTTP request to perform. \n
                              This field cannot be updated. \n Note: HTTPAction is
                              to be implemented in future version."
                            properties:
                              host:
                                description: Indicates the server's domain name or
                                  IP address. Defaults to the Pod's IP. Prefer setting
                                  the "Host" header in httpHeaders when needed.
                                type: string
                              httpHeaders:
                                description: Allows for the inclusion of custom headers
                                  in the request. HTTP permits the use of repeated
                                  headers.
                                items:
                                  description: HTTPHeader describes a custom header
                                    to be used in HTTP probes
                                  properties:
                                    name:
                                      description: The header field name. This will
                                        be canonicalized upon output, so case-variant
                                        names will be understood as the same header.
                                      type: string
                                    value:
                                      description: The header field value
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                type: array
                              method:
                                description: Represents the type of HTTP request to
                                  be made, such as "GET," "POST," "PUT," etc. If not
                                  specified, "GET" is the default method.
                                type: string
                              path:
                                description: Specifies the endpoint to be requested
                                  on the HTTP server.
                                type: string
                              port:
                                anyOf:
                                - type: integer
                                - type: string
                                description: Specifies the target port for the HTTP
                                  request. It can be specified either as a numeric
                                  value in the range of 1 to 65535, or as a named
                                  port that meets the IANA_SVC_NAME specification.
                                x-kubernetes-int-or-string: true
                              scheme:
                                description: Designates the protocol used to make
                                  the request, such as HTTP or HTTPS. If not specified,
                                  HTTP is used by default.
                                type: string
                            required:
                            - port
                            type: object
                          image:
                            description: "Specifies the container image to be used
                              for running the Action. \n When specified, a dedicated
                              container will be created using this image to execute
                              the Action. This field is mutually exclusive with the
                              `container` field; only one of them should be provided.
                              \n This field cannot be updated."
                            type: string
                          matchingKey:
                            description: "Used in conjunction with the `targetPodSelector`
                              field to refine the selection of target pod(s) for Action
                              execution. The impact of this field depends on the `targetPodSelector`
                              value: \n - When `targetPodSelector` is set to `Any`
                              or `All`, this field will be ignored. - When `targetPodSelector`
                              is set to `Role`, only those replicas whose role matches
                              the `matchingKey` will be selected for the Action. \n
                              This field cannot be updated. \n Note: This field is
                              reserved for future use and is not currently active."
                            type: string
                          preCondition:
                            description: "Specifies the state that the cluster must
                              reach before the Action is executed. Currently, this
                              is only applicable to the `postProvision` action. \n
                              The conditions are as follows: \n - `Immediately`: Executed
                              right after the Component object is created. The readiness
                              of the Component and its resources is not guaranteed
                              at this stage. - `RuntimeReady`: The Action is triggered
                              after the Component object has been created and all
                              associated runtime resources (e.g. Pods) are in a ready
                              state. - `ComponentReady`: The Action is triggered after
                              the Component itself is in a ready state. This process
                              does not affect the readiness state of the Component
                              or the Cluster. - `ClusterReady`: The Action is executed
                              after the Cluster is in a ready state. This execution
                              does not alter the Component or the Cluster's state
                              of readiness. \n This field cannot be updated."
                            type: string
                          retryPolicy:
                            description: "Defines the strategy to be taken when retrying
                              the Action after a failure. \n It specifies the conditions
                              under which the Action should be retried and the limits
                              to apply, such as the maximum number of retries and
                              backoff strategy. \n This field cannot be updated."
                            properties:
                              maxRetries:
                                default: 0
                                description: Defines the maximum number of retry attempts
                                  that should be made for a given Action. This value
                                  is set to 0 by default, indicating that no retries
                                  will be made.
                                type: integer
                              retryInterval:
                                default: 0
                                description: Indicates the duration of time to wait
                                  between each retry attempt. This value is set to
                                  0 by default, indicating that there will be no delay
                                  between retry attempts.
                                format: int64
                                type: integer
                            type: object
                          targetPodSelector:
                            description: "Defines the criteria used to select the
                              target Pod(s) for executing the Action. This is useful
                              when there is no default target replica identified.
                              It allows for precise control over which Pod(s) the
                              Action should run in. \n This field cannot be updated.
                              \n Note: This field is reserved for future use and is
                              not currently active."
                            enum:
                            - Any
                            - All
                            - Role
                            - Ordinal
                            type: string
                          timeoutSeconds:
                            default: 0
                            description: "Specifies the maximum duration in seconds
                              that the Action is allowed to run. \n If the Action
                              does not complete within this time frame, it will be
                              terminated. \n This field cannot be updated."
                            format: int32
                            type: integer
                        type: object
                    type: object
                  postProvision:
                    description: "Specifies the hook to be executed after a component's
                      creation. \n By setting `postProvision.customHandler.preCondition`,
                      you can determine the specific lifecycle stage at which the
                      action should trigger: `Immediately`, `RuntimeReady`, `ComponentReady`,
                      and `ClusterReady`. with `ComponentReady` being the default.
                      \n The PostProvision Action is intended to run only once. \n
                      The container executing this action has access to following
                      environment variables: \n - KB_CLUSTER_POD_IP_LIST: Comma-separated
                      list of the cluster's pod IP addresses (e.g., \"podIp1,podIp2\").
                      - KB_CLUSTER_POD_NAME_LIST: Comma-separated list of the cluster's
                      pod names (e.g., \"pod1,pod2\"). - KB_CLUSTER_POD_HOST_NAME_LIST:
                      Comma-separated list of host names, each corresponding to a
                      pod in KB_CLUSTER_POD_NAME_LIST (e.g., \"hostName1,hostName2\").
                      - KB_CLUSTER_POD_HOST_IP_LIST: Comma-separated list of host
                      IP addresses, each corresponding to a pod in KB_CLUSTER_POD_NAME_LIST
                      (e.g., \"hostIp1,hostIp2\"). \n - KB_CLUSTER_COMPONENT_POD_NAME_LIST:
                      Comma-separated list of all pod names within the component (e.g.,
                      \"pod1,pod2\"). - KB_CLUSTER_COMPONENT_POD_IP_LIST: Comma-separated
                      list of pod IP addresses, matching the order of pods in KB_CLUSTER_COMPONENT_POD_NAME_LIST
                      (e.g., \"podIp1,podIp2\"). - KB_CLUSTER_COMPONENT_POD_HOST_NAME_LIST:
                      Comma-separated list of host names for each pod, matching the
                      order of pods in KB_CLUSTER_COMPONENT_POD_NAME_LIST (e.g., \"hostName1,hostName2\").
                      - KB_CLUSTER_COMPONENT_POD_HOST_IP_LIST: Comma-separated list
                      of host IP addresses for each pod, matching the order of pods
                      in KB_CLUSTER_COMPONENT_POD_NAME_LIST (e.g., \"hostIp1,hostIp2\").
                      \n - KB_CLUSTER_COMPONENT_LIST: Comma-separated list of all
                      cluster components (e.g., \"comp1,comp2\"). - KB_CLUSTER_COMPONENT_DELETING_LIST:
                      Comma-separated list of components that are currently being
                      deleted (e.g., \"comp1,comp2\"). - KB_CLUSTER_COMPONENT_UNDELETED_LIST:
                      Comma-separated list of components that are not being deleted
                      (e.g., \"comp1,comp2\"). \n Note: This field is immutable once
                      it has been set."
                    properties:
                      builtinHandler:
                        description: "Specifies the name of the predefined action
                          handler to be invoked for lifecycle actions. \n Lorry, as
                          a sidecar agent co-located with the database container in
                          the same Pod, includes a suite of built-in action implementations
                          that are tailored to different database engines. These are
                          known as \"builtin\" handlers, includes: `mysql`, `redis`,
                          `mongodb`, `etcd`, `postgresql`, `official-postgresql`,
                          `apecloud-postgresql`, `wesql`, `oceanbase`, `polardbx`.
                          \n If the `builtinHandler` field is specified, it instructs
                          Lorry to utilize its internal built-in action handler to
                          execute the specified lifecycle actions. \n The `builtinHandler`
                          field is of type `BuiltinActionHandlerType`, which represents
                          the name of the built-in handler. The `builtinHandler` specified
                          within the same `ComponentLifecycleActions` should be consistent
                          across all actions. This means that if you specify a built-in
                          handler for one action, you should use the same handler
                          for all other actions throughout the entire `ComponentLifecycleActions`
                          collection. \n If you need to define lifecycle actions for
                          database engines not covered by the existing built-in support,
                          or when the pre-existing built-in handlers do not meet your
                          specific needs, you can use the `customHandler` field to
                          define your own action implementation. \n Deprecation Notice:
                          \n - In the future, the `builtinHandler` field will be deprecated
                          in favor of using the `customHandler` field for configuring
                          all lifecycle actions. - Instead of using a name to indicate
                          the built-in action implementations in Lorry, the recommended
                          approach will be to explicitly invoke the desired action
                          implementation through a gRPC interface exposed by the sidecar
                          agent. - Developers will have the flexibility to either
                          use the built-in action implementations provided by Lorry
                          or develop their own sidecar agent to implement custom actions
                          and expose them via gRPC interfaces. - This change will
                          allow for greater customization and extensibility of lifecycle
                          actions, as developers can create their own \"builtin\"
                          implementations tailored to their specific requirements."
                        type: string
                      customHandler:
                        description: "Specifies a user-defined hook or procedure that
                          is called to perform the specific lifecycle action. It offers
                          a flexible and expandable approach for customizing the behavior
                          of a Component by leveraging tailored actions. \n An Action
                          can be implemented as either an ExecAction or an HTTPAction,
                          with future versions planning to support GRPCAction, thereby
                          accommodating unique logic for different database systems
                          within the Action's framework. \n In future iterations,
                          all built-in handlers are expected to transition to GRPCAction.
                          This change means that Lorry or other sidecar agents will
                          expose the implementation of actions through a GRPC interface
                          for external invocation. Then the controller will interact
                          with these actions via GRPCAction calls."
                        properties:
                          container:
                            description: "Defines the name of the container within
                              the target Pod where the action will be executed. \n
                              This name must correspond to one of the containers defined
                              in `componentDefinition.spec.runtime`. If this field
                              is not specified, the default behavior is to use the
                              first container listed in `componentDefinition.spec.runtime`.
                              \n This field cannot be updated. \n Note: This field
                              is reserved for future use and is not currently active."
                            type: string
                          env:
                            description: "Represents a list of environment variables
                              that will be injected into the container. These variables
                              enable the container to adapt its behavior based on
                              the environment it's running in. \n This field cannot
                              be updated."
                            items:
                              description: EnvVar represents an environment variable
                                present in a Container.
                              properties:
                                name:
                                  description: Name of the environment variable. Must
                                    be a C_IDENTIFIER.
                                  type: string
                                value:
                                  description: 'Variable references $(VAR_NAME) are
                                    expanded using the previously defined environment
                                    variables in the container and any service environment
                                    variables. If a variable cannot be resolved, the
                                    reference in the input string will be unchanged.
                                    Double $$ are reduced to a single $, which allows
                                    for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)"
                                    will produce the string literal "$(VAR_NAME)".
                                    Escaped references will never be expanded, regardless
                                    of whether the variable exists or not. Defaults
                                    to "".'
                                  type: string
                                valueFrom:
                                  description: Source for the environment variable's
                                    value. Cannot be used if value is not empty.
                                  properties:
                                    configMapKeyRef:
                                      description: Selects a key of a ConfigMap.
                                      properties:
                                        key:
                                          description: The key to select.
                                          type: string
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                        optional:
                                          description: Specify whether the ConfigMap
                                            or its key must be defined
                                          type: boolean
                                      required:
                                      - key
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    fieldRef:
                                      description: 'Selects a field of the pod: supports
                                        metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`,
                                        `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                        spec.serviceAccountName, status.hostIP, status.podIP,
                                        status.podIPs.'
                                      properties:
                                        apiVersion:
                                          description: Version of the schema the FieldPath
                                            is written in terms of, defaults to "v1".
                                          type: string
                                        fieldPath:
                                          description: Path of the field to select
                                            in the specified API version.
                                          type: string
                                      required:
                                      - fieldPath
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    resourceFieldRef:
                                      description: 'Selects a resource of the container:
                                        only resources limits and requests (limits.cpu,
                                        limits.memory, limits.ephemeral-storage, requests.cpu,
                                        requests.memory and requests.ephemeral-storage)
                                        are currently supported.'
                                      properties:
                                        containerName:
                                          description: 'Container name: required for
                                            volumes, optional for env vars'
                                          type: string
                                        divisor:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: Specifies the output format
                                            of the exposed resources, defaults to
                                            "1"
                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          x-kubernetes-int-or-string: true
                                        resource:
                                          description: 'Required: resource to select'
                                          type: string
                                      required:
                                      - resource
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    secretKeyRef:
                                      description: Selects a key of a secret in the
                                        pod's namespace
                                      properties:
                                        key:
                                          description: The key of the secret to select
                                            from.  Must be a valid secret key.
                                          type: string
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                        optional:
                                          description: Specify whether the Secret
                                            or its key must be defined
                                          type: boolean
                                      required:
                                      - key
                                      type: object
                                      x-kubernetes-map-type: atomic
                                  type: object
                              required:
                              - name
                              type: object
                            type: array
                          exec:
                            description: "Defines the command to run. \n This field
                              cannot be updated."
                            properties:
                              args:
                                description: Args represents the arguments that are
                                  passed to the `command` for execution.
                                items:
                                  type: string
                                type: array
                              command:
                                description: "Specifies the command to be executed
                                  inside the container. The working directory for
                                  this command is the container's root directory('/').
                                  Commands are executed directly without a shell environment,
                                  meaning shell-specific syntax ('|', etc.) is not
                                  supported. If the shell is required, it must be
                                  explicitly invoked in the command. \n A successful
                                  execution is indicated by an exit status of 0; any
                                  non-zero status signifies a failure."
                                items:
                                  type: string
                                type: array
                            type: object
                          http:
                            description: "Specifies the HTTP request to perform. \n
                              This field cannot be updated. \n Note: HTTPAction is
                              to be implemented in future version."
                            properties:
                              host:
                                description: Indicates the server's domain name or
                                  IP address. Defaults to the Pod's IP. Prefer setting
                                  the "Host" header in httpHeaders when needed.
                                type: string
                              httpHeaders:
                                description: Allows for the inclusion of custom headers
                                  in the request. HTTP permits the use of repeated
                                  headers.
                                items:
                                  description: HTTPHeader describes a custom header
                                    to be used in HTTP probes
                                  properties:
                                    name:
                                      description: The header field name. This will
                                        be canonicalized upon output, so case-variant
                                        names will be understood as the same header.
                                      type: string
                                    value:
                                      description: The header field value
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                type: array
                              method:
                                description: Represents the type of HTTP request to
                                  be made, such as "GET," "POST," "PUT," etc. If not
                                  specified, "GET" is the default method.
                                type: string
                              path:
                                description: Specifies the endpoint to be requested
                                  on the HTTP server.
                                type: string
                              port:
                                anyOf:
                                - type: integer
                                - type: string
                                description: Specifies the target port for the HTTP
                                  request. It can be specified either as a numeric
                                  value in the range of 1 to 65535, or as a named
                                  port that meets the IANA_SVC_NAME specification.
                                x-kubernetes-int-or-string: true
                              scheme:
                                description: Designates the protocol used to make
                                  the request, such as HTTP or HTTPS. If not specified,
                                  HTTP is used by default.
                                type: string
                            required:
                            - port
                            type: object
                          image:
                            description: "Specifies the container image to be used
                              for running the Action. \n When specified, a dedicated
                              container will be created using this image to execute
                              the Action. This field is mutually exclusive with the
                              `container` field; only one of them should be provided.
                              \n This field cannot be updated."
                            type: string
                          matchingKey:
                            description: "Used in conjunction with the `targetPodSelector`
                              field to refine the selection of target pod(s) for Action
                              execution. The impact of this field depends on the `targetPodSelector`
                              value: \n - When `targetPodSelector` is set to `Any`
                              or `All`, this field will be ignored. - When `targetPodSelector`
                              is set to `Role`, only those replicas whose role matches
                              the `matchingKey` will be selected for the Action. \n
                              This field cannot be updated. \n Note: This field is
                              reserved for future use and is not currently active."
                            type: string
                          preCondition:
                            description: "Specifies the state that the cluster must
                              reach before the Action is executed. Currently, this
                              is only applicable to the `postProvision` action. \n
                              The conditions are as follows: \n - `Immediately`: Executed
                              right after the Component object is created. The readiness
                              of the Component and its resources is not guaranteed
                              at this stage. - `RuntimeReady`: The Action is triggered
                              after the Component object has been created and all
                              associated runtime resources (e.g. Pods) are in a ready
                              state. - `ComponentReady`: The Action is triggered after
                              the Component itself is in a ready state. This process
                              does not affect the readiness state of the Component
                              or the Cluster. - `ClusterReady`: The Action is executed
                              after the Cluster is in a ready state. This execution
                              does not alter the Component or the Cluster's state
                              of readiness. \n This field cannot be updated."
                            type: string
                          retryPolicy:
                            description: "Defines the strategy to be taken when retrying
                              the Action after a failure. \n It specifies the conditions
                              under which the Action should be retried and the limits
                              to apply, such as the maximum number of retries and
                              backoff strategy. \n This field cannot be updated."
                            properties:
                              maxRetries:
                                default: 0
                                description: Defines the maximum number of retry attempts
                                  that should be made for a given Action. This value
                                  is set to 0 by default, indicating that no retries
                                  will be made.
                                type: integer
                              retryInterval:
                                default: 0
                                description: Indicates the duration of time to wait
                                  between each retry attempt. This value is set to
                                  0 by default, indicating that there will be no delay
                                  between retry attempts.
                                format: int64
                                type: integer
                            type: object
                          targetPodSelector:
                            description: "Defines the criteria used to select the
                              target Pod(s) for executing the Action. This is useful
                              when there is no default target replica identified.
                              It allows for precise control over which Pod(s) the
                              Action should run in. \n This field cannot be updated.
                              \n Note: This field is reserved for future use and is
                              not currently active."
                            enum:
                            - Any
                            - All
                            - Role
                            - Ordinal
                            type: string
                          timeoutSeconds:
                            default: 0
                            description: "Specifies the maximum duration in seconds
                              that the Action is allowed to run. \n If the Action
                              does not complete within this time frame, it will be
                              terminated. \n This field cannot be updated."
                            format: int32
                            type: integer
                        type: object
                    type: object
                  preTerminate:
                    description: "Specifies the hook to be executed prior to terminating
                      a component. \n The PreTerminate Action is intended to run only
                      once. \n This action is executed immediately when a scale-down
                      operation for the Component is initiated. The actual termination
                      and cleanup of the Component and its associated resources will
                      not proceed until the PreTerminate action has completed successfully.
                      \n The container executing this action has access to following
                      environment variables: \n - KB_CLUSTER_POD_IP_LIST: Comma-separated
                      list of the cluster's pod IP addresses (e.g., \"podIp1,podIp2\").
                      - KB_CLUSTER_POD_NAME_LIST: Comma-separated list of the cluster's
                      pod names (e.g., \"pod1,pod2\"). - KB_CLUSTER_POD_HOST_NAME_LIST:
                      Comma-separated list of host names, each corresponding to a
                      pod in KB_CLUSTER_POD_NAME_LIST (e.g., \"hostName1,hostName2\").
                      - KB_CLUSTER_POD_HOST_IP_LIST: Comma-separated list of host
                      IP addresses, each corresponding to a pod in KB_CLUSTER_POD_NAME_LIST
                      (e.g., \"hostIp1,hostIp2\"). \n - KB_CLUSTER_COMPONENT_POD_NAME_LIST:
                      Comma-separated list of all pod names within the component (e.g.,
                      \"pod1,pod2\"). - KB_CLUSTER_COMPONENT_POD_IP_LIST: Comma-separated
                      list of pod IP addresses, matching the order of pods in KB_CLUSTER_COMPONENT_POD_NAME_LIST
                      (e.g., \"podIp1,podIp2\"). - KB_CLUSTER_COMPONENT_POD_HOST_NAME_LIST:
                      Comma-separated list of host names for each pod, matching the
                      order of pods in KB_CLUSTER_COMPONENT_POD_NAME_LIST (e.g., \"hostName1,hostName2\").
                      - KB_CLUSTER_COMPONENT_POD_HOST_IP_LIST: Comma-separated list
                      of host IP addresses for each pod, matching the order of pods
                      in KB_CLUSTER_COMPONENT_POD_NAME_LIST (e.g., \"hostIp1,hostIp2\").
                      \n - KB_CLUSTER_COMPONENT_LIST: Comma-separated list of all
                      cluster components (e.g., \"comp1,comp2\"). - KB_CLUSTER_COMPONENT_DELETING_LIST:
                      Comma-separated list of components that are currently being
                      deleted (e.g., \"comp1,comp2\"). - KB_CLUSTER_COMPONENT_UNDELETED_LIST:
                      Comma-separated list of components that are not being deleted
                      (e.g., \"comp1,comp2\"). \n - KB_CLUSTER_COMPONENT_IS_SCALING_IN:
                      Indicates whether the component is currently scaling in. If
                      this variable is present and set to \"true\", it denotes that
                      the component is undergoing a scale-in operation. During scale-in,
                      data rebalancing is necessary to maintain cluster integrity.
                      Contrast this with a cluster deletion scenario where data rebalancing
                      is not required as the entire cluster is being cleaned up. \n
                      Note: This field is immutable once it has been set."
                    properties:
                      builtinHandler:
                        description: "Specifies the name of the predefined action
                          handler to be invoked for lifecycle actions. \n Lorry, as
                          a sidecar agent co-located with the database container in
                          the same Pod, includes a suite of built-in action implementations
                          that are tailored to different database engines. These are
                          known as \"builtin\" handlers, includes: `mysql`, `redis`,
                          `mongodb`, `etcd`, `postgresql`, `official-postgresql`,
                          `apecloud-postgresql`, `wesql`, `oceanbase`, `polardbx`.
                          \n If the `builtinHandler` field is specified, it instructs
                          Lorry to utilize its internal built-in action handler to
                          execute the specified lifecycle actions. \n The `builtinHandler`
                          field is of type `BuiltinActionHandlerType`, which represents
                          the name of the built-in handler. The `builtinHandler` specified
                          within the same `ComponentLifecycleActions` should be consistent
                          across all actions. This means that if you specify a built-in
                          handler for one action, you should use the same handler
                          for all other actions throughout the entire `ComponentLifecycleActions`
                          collection. \n If you need to define lifecycle actions for
                          database engines not covered by the existing built-in support,
                          or when the pre-existing built-in handlers do not meet your
                          specific needs, you can use the `customHandler` field to
                          define your own action implementation. \n Deprecation Notice:
                          \n - In the future, the `builtinHandler` field will be deprecated
                          in favor of using the `customHandler` field for configuring
                          all lifecycle actions. - Instead of using a name to indicate
                          the built-in action implementations in Lorry, the recommended
                          approach will be to explicitly invoke the desired action
                          implementation through a gRPC interface exposed by the sidecar
                          agent. - Developers will have the flexibility to either
                          use the built-in action implementations provided by Lorry
                          or develop their own sidecar agent to implement custom actions
                          and expose them via gRPC interfaces. - This change will
                          allow for greater customization and extensibility of lifecycle
                          actions, as developers can create their own \"builtin\"
                          implementations tailored to their specific requirements."
                        type: string
                      customHandler:
                        description: "Specifies a user-defined hook or procedure that
                          is called to perform the specific lifecycle action. It offers
                          a flexible and expandable approach for customizing the behavior
                          of a Component by leveraging tailored actions. \n An Action
                          can be implemented as either an ExecAction or an HTTPAction,
                          with future versions planning to support GRPCAction, thereby
                          accommodating unique logic for different database systems
                          within the Action's framework. \n In future iterations,
                          all built-in handlers are expected to transition to GRPCAction.
                          This change means that Lorry or other sidecar agents will
                          expose the implementation of actions through a GRPC interface
                          for external invocation. Then the controller will interact
                          with these actions via GRPCAction calls."
                        properties:
                          container:
                            description: "Defines the name of the container within
                              the target Pod where the action will be executed. \n
                              This name must correspond to one of the containers defined
                              in `componentDefinition.spec.runtime`. If this field
                              is not specified, the default behavior is to use the
                              first container listed in `componentDefinition.spec.runtime`.
                              \n This field cannot be updated. \n Note: This field
                              is reserved for future use and is not currently active."
                            type: string
                          env:
                            description: "Represents a list of environment variables
                              that will be injected into the container. These variables
                              enable the container to adapt its behavior based on
                              the environment it's running in. \n This field cannot
                              be updated."
                            items:
                              description: EnvVar represents an environment variable
                                present in a Container.
                              properties:
                                name:
                                  description: Name of the environment variable. Must
                                    be a C_IDENTIFIER.
                                  type: string
                                value:
                                  description: 'Variable references $(VAR_NAME) are
                                    expanded using the previously defined environment
                                    variables in the container and any service environment
                                    variables. If a variable cannot be resolved, the
                                    reference in the input string will be unchanged.
                                    Double $$ are reduced to a single $, which allows
                                    for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)"
                                    will produce the string literal "$(VAR_NAME)".
                                    Escaped references will never be expanded, regardless
                                    of whether the variable exists or not. Defaults
                                    to "".'
                                  type: string
                                valueFrom:
                                  description: Source for the environment variable's
                                    value. Cannot be used if value is not empty.
                                  properties:
                                    configMapKeyRef:
                                      description: Selects a key of a ConfigMap.
                                      properties:
                                        key:
                                          description: The key to select.
                                          type: string
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                        optional:
                                          description: Specify whether the ConfigMap
                                            or its key must be defined
                                          type: boolean
                                      required:
                                      - key
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    fieldRef:
                                      description: 'Selects a field of the pod: supports
                                        metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`,
                                        `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                        spec.serviceAccountName, status.hostIP, status.podIP,
                                        status.podIPs.'
                                      properties:
                                        apiVersion:
                                          description: Version of the schema the FieldPath
                                            is written in terms of, defaults to "v1".
                                          type: string
                                        fieldPath:
                                          description: Path of the field to select
                                            in the specified API version.
                                          type: string
                                      required:
                                      - fieldPath
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    resourceFieldRef:
                                      description: 'Selects a resource of the container:
                                        only resources limits and requests (limits.cpu,
                                        limits.memory, limits.ephemeral-storage, requests.cpu,
                                        requests.memory and requests.ephemeral-storage)
                                        are currently supported.'
                                      properties:
                                        containerName:
                                          description: 'Container name: required for
                                            volumes, optional for env vars'
                                          type: string
                                        divisor:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: Specifies the output format
                                            of the exposed resources, defaults to
                                            "1"
                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          x-kubernetes-int-or-string: true
                                        resource:
                                          description: 'Required: resource to select'
                                          type: string
                                      required:
                                      - resource
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    secretKeyRef:
                                      description: Selects a key of a secret in the
                                        pod's namespace
                                      properties:
                                        key:
                                          description: The key of the secret to select
                                            from.  Must be a valid secret key.
                                          type: string
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                        optional:
                                          description: Specify whether the Secret
                                            or its key must be defined
                                          type: boolean
                                      required:
                                      - key
                                      type: object
                                      x-kubernetes-map-type: atomic
                                  type: object
                              required:
                              - name
                              type: object
                            type: array
                          exec:
                            description: "Defines the command to run. \n This field
                              cannot be updated."
                            properties:
                              args:
                                description: Args represents the arguments that are
                                  passed to the `command` for execution.
                                items:
                                  type: string
                                type: array
                              command:
                                description: "Specifies the command to be executed
                                  inside the container. The working directory for
                                  this command is the container's root directory('/').
                                  Commands are executed directly without a shell environment,
                                  meaning shell-specific syntax ('|', etc.) is not
                                  supported. If the shell is required, it must be
                                  explicitly invoked in the command. \n A successful
                                  execution is indicated by an exit status of 0; any
                                  non-zero status signifies a failure."
                                items:
                                  type: string
                                type: array
                            type: object
                          http:
                            description: "Specifies the HTTP request to perform. \n
                              This field cannot be updated. \n Note: HTTPAction is
                              to be implemented in future version."
                            properties:
                              host:
                                description: Indicates the server's domain name or
                                  IP address. Defaults to the Pod's IP. Prefer setting
                                  the "Host" header in httpHeaders when needed.
                                type: string
                              httpHeaders:
                                description: Allows for the inclusion of custom headers
                                  in the request. HTTP permits the use of repeated
                                  headers.
                                items:
                                  description: HTTPHeader describes a custom header
                                    to be used in HTTP probes
                                  properties:
                                    name:
                                      description: The header field name. This will
                                        be canonicalized upon output, so case-variant
                                        names will be understood as the same header.
                                      type: string
                                    value:
                                      description: The header field value
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                type: array
                              method:
                                description: Represents the type of HTTP request to
                                  be made, such as "GET," "POST," "PUT," etc. If not
                                  specified, "GET" is the default method.
                                type: string
                              path:
                                description: Specifies the endpoint to be requested
                                  on the HTTP server.
                                type: string
                              port:
                                anyOf:
                                - type: integer
                                - type: string
                                description: Specifies the target port for the HTTP
                                  request. It can be specified either as a numeric
                                  value in the range of 1 to 65535, or as a named
                                  port that meets the IANA_SVC_NAME specification.
                                x-kubernetes-int-or-string: true
                              scheme:
                                description: Designates the protocol used to make
                                  the request, such as HTTP or HTTPS. If not specified,
                                  HTTP is used by default.
                                type: string
                            required:
                            - port
                            type: object
                          image:
                            description: "Specifies the container image to be used
                              for running the Action. \n When specified, a dedicated
                              container will be created using this image to execute
                              the Action. This field is mutually exclusive with the
                              `container` field; only one of them should be provided.
                              \n This field cannot be updated."
                            type: string
                          matchingKey:
                            description: "Used in conjunction with the `targetPodSelector`
                              field to refine the selection of target pod(s) for Action
                              execution. The impact of this field depends on the `targetPodSelector`
                              value: \n - When `targetPodSelector` is set to `Any`
                              or `All`, this field will be ignored. - When `targetPodSelector`
                              is set to `Role`, only those replicas whose role matches
                              the `matchingKey` will be selected for the Action. \n
                              This field cannot be updated. \n Note: This field is
                              reserved for future use and is not currently active."
                            type: string
                          preCondition:
                            description: "Specifies the state that the cluster must
                              reach before the Action is executed. Currently, this
                              is only applicable to the `postProvision` action. \n
                              The conditions are as follows: \n - `Immediately`: Executed
                              right after the Component object is created. The readiness
                              of the Component and its resources is not guaranteed
                              at this stage. - `RuntimeReady`: The Action is triggered
                              after the Component object has been created and all
                              associated runtime resources (e.g. Pods) are in a ready
                              state. - `ComponentReady`: The Action is triggered after
                              the Component itself is in a ready state. This process
                              does not affect the readiness state of the Component
                              or the Cluster. - `ClusterReady`: The Action is executed
                              after the Cluster is in a ready state. This execution
                              does not alter the Component or the Cluster's state
                              of readiness. \n This field cannot be updated."
                            type: string
                          retryPolicy:
                            description: "Defines the strategy to be taken when retrying
                              the Action after a failure. \n It specifies the conditions
                              under which the Action should be retried and the limits
                              to apply, such as the maximum number of retries and
                              backoff strategy. \n This field cannot be updated."
                            properties:
                              maxRetries:
                                default: 0
                                description: Defines the maximum number of retry attempts
                                  that should be made for a given Action. This value
                                  is set to 0 by default, indicating that no retries
                                  will be made.
                                type: integer
                              retryInterval:
                                default: 0
                                description: Indicates the duration of time to wait
                                  between each retry attempt. This value is set to
                                  0 by default, indicating that there will be no delay
                                  between retry attempts.
                                format: int64
                                type: integer
                            type: object
                          targetPodSelector:
                            description: "Defines the criteria used to select the
                              target Pod(s) for executing the Action. This is useful
                              when there is no default target replica identified.
                              It allows for precise control over which Pod(s) the
                              Action should run in. \n This field cannot be updated.
                              \n Note: This field is reserved for future use and is
                              not currently active."
                            enum:
                            - Any
                            - All
                            - Role
                            - Ordinal
                            type: string
                          timeoutSeconds:
                            default: 0
                            description: "Specifies the maximum duration in seconds
                              that the Action is allowed to run. \n If the Action
                              does not complete within this time frame, it will be
                              terminated. \n This field cannot be updated."
                            format: int32
                            type: integer
                        type: object
                    type: object
                  readonly:
                    description: "Defines the procedure to switch a replica into the
                      read-only state. \n Use Case: This action is invoked when the
                      database's volume capacity nears its upper limit and space is
                      about to be exhausted. \n The container executing this action
                      has access to following environment variables: \n - KB_POD_FQDN:
                      The FQDN of the replica pod whose role is being checked. - KB_SERVICE_PORT:
                      The port used by the database service. - KB_SERVICE_USER: The
                      username with the necessary permissions to interact with the
                      database service. - KB_SERVICE_PASSWORD: The corresponding password
                      for KB_SERVICE_USER to authenticate with the database service.
                      \n Expected action output: - On Failure: An error message, if
                      applicable, indicating why the action failed. \n Note: This
                      field is immutable once it has been set."
                    properties:
                      builtinHandler:
                        description: "Specifies the name of the predefined action
                          handler to be invoked for lifecycle actions. \n Lorry, as
                          a sidecar agent co-located with the database container in
                          the same Pod, includes a suite of built-in action implementations
                          that are tailored to different database engines. These are
                          known as \"builtin\" handlers, includes: `mysql`, `redis`,
                          `mongodb`, `etcd`, `postgresql`, `official-postgresql`,
                          `apecloud-postgresql`, `wesql`, `oceanbase`, `polardbx`.
                          \n If the `builtinHandler` field is specified, it instructs
                          Lorry to utilize its internal built-in action handler to
                          execute the specified lifecycle actions. \n The `builtinHandler`
                          field is of type `BuiltinActionHandlerType`, which represents
                          the name of the built-in handler. The `builtinHandler` specified
                          within the same `ComponentLifecycleActions` should be consistent
                          across all actions. This means that if you specify a built-in
                          handler for one action, you should use the same handler
                          for all other actions throughout the entire `ComponentLifecycleActions`
                          collection. \n If you need to define lifecycle actions for
                          database engines not covered by the existing built-in support,
                          or when the pre-existing built-in handlers do not meet your
                          specific needs, you can use the `customHandler` field to
                          define your own action implementation. \n Deprecation Notice:
                          \n - In the future, the `builtinHandler` field will be deprecated
                          in favor of using the `customHandler` field for configuring
                          all lifecycle actions. - Instead of using a name to indicate
                          the built-in action implementations in Lorry, the recommended
                          approach will be to explicitly invoke the desired action
                          implementation through a gRPC interface exposed by the sidecar
                          agent. - Developers will have the flexibility to either
                          use the built-in action implementations provided by Lorry
                          or develop their own sidecar agent to implement custom actions
                          and expose them via gRPC interfaces. - This change will
                          allow for greater customization and extensibility of lifecycle
                          actions, as developers can create their own \"builtin\"
                          implementations tailored to their specific requirements."
                        type: string
                      customHandler:
                        description: "Specifies a user-defined hook or procedure that
                          is called to perform the specific lifecycle action. It offers
                          a flexible and expandable approach for customizing the behavior
                          of a Component by leveraging tailored actions. \n An Action
                          can be implemented as either an ExecAction or an HTTPAction,
                          with future versions planning to support GRPCAction, thereby
                          accommodating unique logic for different database systems
                          within the Action's framework. \n In future iterations,
                          all built-in handlers are expected to transition to GRPCAction.
                          This change means that Lorry or other sidecar agents will
                          expose the implementation of actions through a GRPC interface
                          for external invocation. Then the controller will interact
                          with these actions via GRPCAction calls."
                        properties:
                          container:
                            description: "Defines the name of the container within
                              the target Pod where the action will be executed. \n
                              This name must correspond to one of the containers defined
                              in `componentDefinition.spec.runtime`. If this field
                              is not specified, the default behavior is to use the
                              first container listed in `componentDefinition.spec.runtime`.
                              \n This field cannot be updated. \n Note: This field
                              is reserved for future use and is not currently active."
                            type: string
                          env:
                            description: "Represents a list of environment variables
                              that will be injected into the container. These variables
                              enable the container to adapt its behavior based on
                              the environment it's running in. \n This field cannot
                              be updated."
                            items:
                              description: EnvVar represents an environment variable
                                present in a Container.
                              properties:
                                name:
                                  description: Name of the environment variable. Must
                                    be a C_IDENTIFIER.
                                  type: string
                                value:
                                  description: 'Variable references $(VAR_NAME) are
                                    expanded using the previously defined environment
                                    variables in the container and any service environment
                                    variables. If a variable cannot be resolved, the
                                    reference in the input string will be unchanged.
                                    Double $$ are reduced to a single $, which allows
                                    for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)"
                                    will produce the string literal "$(VAR_NAME)".
                                    Escaped references will never be expanded, regardless
                                    of whether the variable exists or not. Defaults
                                    to "".'
                                  type: string
                                valueFrom:
                                  description: Source for the environment variable's
                                    value. Cannot be used if value is not empty.
                                  properties:
                                    configMapKeyRef:
                                      description: Selects a key of a ConfigMap.
                                      properties:
                                        key:
                                          description: The key to select.
                                          type: string
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                        optional:
                                          description: Specify whether the ConfigMap
                                            or its key must be defined
                                          type: boolean
                                      required:
                                      - key
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    fieldRef:
                                      description: 'Selects a field of the pod: supports
                                        metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`,
                                        `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                        spec.serviceAccountName, status.hostIP, status.podIP,
                                        status.podIPs.'
                                      properties:
                                        apiVersion:
                                          description: Version of the schema the FieldPath
                                            is written in terms of, defaults to "v1".
                                          type: string
                                        fieldPath:
                                          description: Path of the field to select
                                            in the specified API version.
                                          type: string
                                      required:
                                      - fieldPath
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    resourceFieldRef:
                                      description: 'Selects a resource of the container:
                                        only resources limits and requests (limits.cpu,
                                        limits.memory, limits.ephemeral-storage, requests.cpu,
                                        requests.memory and requests.ephemeral-storage)
                                        are currently supported.'
                                      properties:
                                        containerName:
                                          description: 'Container name: required for
                                            volumes, optional for env vars'
                                          type: string
                                        divisor:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: Specifies the output format
                                            of the exposed resources, defaults to
                                            "1"
                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          x-kubernetes-int-or-string: true
                                        resource:
                                          description: 'Required: resource to select'
                                          type: string
                                      required:
                                      - resource
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    secretKeyRef:
                                      description: Selects a key of a secret in the
                                        pod's namespace
                                      properties:
                                        key:
                                          description: The key of the secret to select
                                            from.  Must be a valid secret key.
                                          type: string
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                        optional:
                                          description: Specify whether the Secret
                                            or its key must be defined
                                          type: boolean
                                      required:
                                      - key
                                      type: object
                                      x-kubernetes-map-type: atomic
                                  type: object
                              required:
                              - name
                              type: object
                            type: array
                          exec:
                            description: "Defines the command to run. \n This field
                              cannot be updated."
                            properties:
                              args:
                                description: Args represents the arguments that are
                                  passed to the `command` for execution.
                                items:
                                  type: string
                                type: array
                              command:
                                description: "Specifies the command to be executed
                                  inside the container. The working directory for
                                  this command is the container's root directory('/').
                                  Commands are executed directly without a shell environment,
                                  meaning shell-specific syntax ('|', etc.) is not
                                  supported. If the shell is required, it must be
                                  explicitly invoked in the command. \n A successful
                                  execution is indicated by an exit status of 0; any
                                  non-zero status signifies a failure."
                                items:
                                  type: string
                                type: array
                            type: object
                          http:
                            description: "Specifies the HTTP request to perform. \n
                              This field cannot be updated. \n Note: HTTPAction is
                              to be implemented in future version."
                            properties:
                              host:
                                description: Indicates the server's domain name or
                                  IP address. Defaults to the Pod's IP. Prefer setting
                                  the "Host" header in httpHeaders when needed.
                                type: string
                              httpHeaders:
                                description: Allows for the inclusion of custom headers
                                  in the request. HTTP permits the use of repeated
                                  headers.
                                items:
                                  description: HTTPHeader describes a custom header
                                    to be used in HTTP probes
                                  properties:
                                    name:
                                      description: The header field name. This will
                                        be canonicalized upon output, so case-variant
                                        names will be understood as the same header.
                                      type: string
                                    value:
                                      description: The header field value
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                type: array
                              method:
                                description: Represents the type of HTTP request to
                                  be made, such as "GET," "POST," "PUT," etc. If not
                                  specified, "GET" is the default method.
                                type: string
                              path:
                                description: Specifies the endpoint to be requested
                                  on the HTTP server.
                                type: string
                              port:
                                anyOf:
                                - type: integer
                                - type: string
                                description: Specifies the target port for the HTTP
                                  request. It can be specified either as a numeric
                                  value in the range of 1 to 65535, or as a named
                                  port that meets the IANA_SVC_NAME specification.
                                x-kubernetes-int-or-string: true
                              scheme:
                                description: Designates the protocol used to make
                                  the request, such as HTTP or HTTPS. If not specified,
                                  HTTP is used by default.
                                type: string
                            required:
                            - port
                            type: object
                          image:
                            description: "Specifies the container image to be used
                              for running the Action. \n When specified, a dedicated
                              container will be created using this image to execute
                              the Action. This field is mutually exclusive with the
                              `container` field; only one of them should be provided.
                              \n This field cannot be updated."
                            type: string
                          matchingKey:
                            description: "Used in conjunction with the `targetPodSelector`
                              field to refine the selection of target pod(s) for Action
                              execution. The impact of this field depends on the `targetPodSelector`
                              value: \n - When `targetPodSelector` is set to `Any`
                              or `All`, this field will be ignored. - When `targetPodSelector`
                              is set to `Role`, only those replicas whose role matches
                              the `matchingKey` will be selected for the Action. \n
                              This field cannot be updated. \n Note: This field is
                              reserved for future use and is not currently active."
                            type: string
                          preCondition:
                            description: "Specifies the state that the cluster must
                              reach before the Action is executed. Currently, this
                              is only applicable to the `postProvision` action. \n
                              The conditions are as follows: \n - `Immediately`: Executed
                              right after the Component object is created. The readiness
                              of the Component and its resources is not guaranteed
                              at this stage. - `RuntimeReady`: The Action is triggered
                              after the Component object has been created and all
                              associated runtime resources (e.g. Pods) are in a ready
                              state. - `ComponentReady`: The Action is triggered after
                              the Component itself is in a ready state. This process
                              does not affect the readiness state of the Component
                              or the Cluster. - `ClusterReady`: The Action is executed
                              after the Cluster is in a ready state. This execution
                              does not alter the Component or the Cluster's state
                              of readiness. \n This field cannot be updated."
                            type: string
                          retryPolicy:
                            description: "Defines the strategy to be taken when retrying
                              the Action after a failure. \n It specifies the conditions
                              under which the Action should be retried and the limits
                              to apply, such as the maximum number of retries and
                              backoff strategy. \n This field cannot be updated."
                            properties:
                              maxRetries:
                                default: 0
                                description: Defines the maximum number of retry attempts
                                  that should be made for a given Action. This value
                                  is set to 0 by default, indicating that no retries
                                  will be made.
                                type: integer
                              retryInterval:
                                default: 0
                                description: Indicates the duration of time to wait
                                  between each retry attempt. This value is set to
                                  0 by default, indicating that there will be no delay
                                  between retry attempts.
                                format: int64
                                type: integer
                            type: object
                          targetPodSelector:
                            description: "Defines the criteria used to select the
                              target Pod(s) for executing the Action. This is useful
                              when there is no default target replica identified.
                              It allows for precise control over which Pod(s) the
                              Action should run in. \n This field cannot be updated.
                              \n Note: This field is reserved for future use and is
                              not currently active."
                            enum:
                            - Any
                            - All
                            - Role
                            - Ordinal
                            type: string
                          timeoutSeconds:
                            default: 0
                            description: "Specifies the maximum duration in seconds
                              that the Action is allowed to run. \n If the Action
                              does not complete within this time frame, it will be
                              terminated. \n This field cannot be updated."
                            format: int32
                            type: integer
                        type: object
                    type: object
                  readwrite:
                    description: "Defines the procedure to transition a replica from
                      the read-only state back to the read-write state. \n Use Case:
                      This action is used to bring back a replica that was previously
                      in a read-only state, which restricted write operations, to
                      its normal operational state where it can handle both read and
                      write operations. \n The container executing this action has
                      access to following environment variables: \n - KB_POD_FQDN:
                      The FQDN of the replica pod whose role is being checked. - KB_SERVICE_PORT:
                      The port used by the database service. - KB_SERVICE_USER: The
                      username with the necessary permissions to interact with the
                      database service. - KB_SERVICE_PASSWORD: The corresponding password
                      for KB_SERVICE_USER to authenticate with the database service.
                      \n Expected action output: - On Failure: An error message, if
                      applicable, indicating why the action failed. \n Note: This
                      field is immutable once it has been set."
                    properties:
                      builtinHandler:
                        description: "Specifies the name of the predefined action
                          handler to be invoked for lifecycle actions. \n Lorry, as
                          a sidecar agent co-located with the database container in
                          the same Pod, includes a suite of built-in action implementations
                          that are tailored to different database engines. These are
                          known as \"builtin\" handlers, includes: `mysql`, `redis`,
                          `mongodb`, `etcd`, `postgresql`, `official-postgresql`,
                          `apecloud-postgresql`, `wesql`, `oceanbase`, `polardbx`.
                          \n If the `builtinHandler` field is specified, it instructs
                          Lorry to utilize its internal built-in action handler to
                          execute the specified lifecycle actions. \n The `builtinHandler`
                          field is of type `BuiltinActionHandlerType`, which represents
                          the name of the built-in handler. The `builtinHandler` specified
                          within the same `ComponentLifecycleActions` should be consistent
                          across all actions. This means that if you specify a built-in
                          handler for one action, you should use the same handler
                          for all other actions throughout the entire `ComponentLifecycleActions`
                          collection. \n If you need to define lifecycle actions for
                          database engines not covered by the existing built-in support,
                          or when the pre-existing built-in handlers do not meet your
                          specific needs, you can use the `customHandler` field to
                          define your own action implementation. \n Deprecation Notice:
                          \n - In the future, the `builtinHandler` field will be deprecated
                          in favor of using the `customHandler` field for configuring
                          all lifecycle actions. - Instead of using a name to indicate
                          the built-in action implementations in Lorry, the recommended
                          approach will be to explicitly invoke the desired action
                          implementation through a gRPC interface exposed by the sidecar
                          agent. - Developers will have the flexibility to either
                          use the built-in action implementations provided by Lorry
                          or develop their own sidecar agent to implement custom actions
                          and expose them via gRPC interfaces. - This change will
                          allow for greater customization and extensibility of lifecycle
                          actions, as developers can create their own \"builtin\"
                          implementations tailored to their specific requirements."
                        type: string
                      customHandler:
                        description: "Specifies a user-defined hook or procedure that
                          is called to perform the specific lifecycle action. It offers
                          a flexible and expandable approach for customizing the behavior
                          of a Component by leveraging tailored actions. \n An Action
                          can be implemented as either an ExecAction or an HTTPAction,
                          with future versions planning to support GRPCAction, thereby
                          accommodating unique logic for different database systems
                          within the Action's framework. \n In future iterations,
                          all built-in handlers are expected to transition to GRPCAction.
                          This change means that Lorry or other sidecar agents will
                          expose the implementation of actions through a GRPC interface
                          for external invocation. Then the controller will interact
                          with these actions via GRPCAction calls."
                        properties:
                          container:
                            description: "Defines the name of the container within
                              the target Pod where the action will be executed. \n
                              This name must correspond to one of the containers defined
                              in `componentDefinition.spec.runtime`. If this field
                              is not specified, the default behavior is to use the
                              first container listed in `componentDefinition.spec.runtime`.
                              \n This field cannot be updated. \n Note: This field
                              is reserved for future use and is not currently active."
                            type: string
                          env:
                            description: "Represents a list of environment variables
                              that will be injected into the container. These variables
                              enable the container to adapt its behavior based on
                              the environment it's running in. \n This field cannot
                              be updated."
                            items:
                              description: EnvVar represents an environment variable
                                present in a Container.
                              properties:
                                name:
                                  description: Name of the environment variable. Must
                                    be a C_IDENTIFIER.
                                  type: string
                                value:
                                  description: 'Variable references $(VAR_NAME) are
                                    expanded using the previously defined environment
                                    variables in the container and any service environment
                                    variables. If a variable cannot be resolved, the
                                    reference in the input string will be unchanged.
                                    Double $$ are reduced to a single $, which allows
                                    for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)"
                                    will produce the string literal "$(VAR_NAME)".
                                    Escaped references will never be expanded, regardless
                                    of whether the variable exists or not. Defaults
                                    to "".'
                                  type: string
                                valueFrom:
                                  description: Source for the environment variable's
                                    value. Cannot be used if value is not empty.
                                  properties:
                                    configMapKeyRef:
                                      description: Selects a key of a ConfigMap.
                                      properties:
                                        key:
                                          description: The key to select.
                                          type: string
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                        optional:
                                          description: Specify whether the ConfigMap
                                            or its key must be defined
                                          type: boolean
                                      required:
                                      - key
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    fieldRef:
                                      description: 'Selects a field of the pod: supports
                                        metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`,
                                        `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                        spec.serviceAccountName, status.hostIP, status.podIP,
                                        status.podIPs.'
                                      properties:
                                        apiVersion:
                                          description: Version of the schema the FieldPath
                                            is written in terms of, defaults to "v1".
                                          type: string
                                        fieldPath:
                                          description: Path of the field to select
                                            in the specified API version.
                                          type: string
                                      required:
                                      - fieldPath
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    resourceFieldRef:
                                      description: 'Selects a resource of the container:
                                        only resources limits and requests (limits.cpu,
                                        limits.memory, limits.ephemeral-storage, requests.cpu,
                                        requests.memory and requests.ephemeral-storage)
                                        are currently supported.'
                                      properties:
                                        containerName:
                                          description: 'Container name: required for
                                            volumes, optional for env vars'
                                          type: string
                                        divisor:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: Specifies the output format
                                            of the exposed resources, defaults to
                                            "1"
                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          x-kubernetes-int-or-string: true
                                        resource:
                                          description: 'Required: resource to select'
                                          type: string
                                      required:
                                      - resource
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    secretKeyRef:
                                      description: Selects a key of a secret in the
                                        pod's namespace
                                      properties:
                                        key:
                                          description: The key of the secret to select
                                            from.  Must be a valid secret key.
                                          type: string
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                        optional:
                                          description: Specify whether the Secret
                                            or its key must be defined
                                          type: boolean
                                      required:
                                      - key
                                      type: object
                                      x-kubernetes-map-type: atomic
                                  type: object
                              required:
                              - name
                              type: object
                            type: array
                          exec:
                            description: "Defines the command to run. \n This field
                              cannot be updated."
                            properties:
                              args:
                                description: Args represents the arguments that are
                                  passed to the `command` for execution.
                                items:
                                  type: string
                                type: array
                              command:
                                description: "Specifies the command to be executed
                                  inside the container. The working directory for
                                  this command is the container's root directory('/').
                                  Commands are executed directly without a shell environment,
                                  meaning shell-specific syntax ('|', etc.) is not
                                  supported. If the shell is required, it must be
                                  explicitly invoked in the command. \n A successful
                                  execution is indicated by an exit status of 0; any
                                  non-zero status signifies a failure."
                                items:
                                  type: string
                                type: array
                            type: object
                          http:
                            description: "Specifies the HTTP request to perform. \n
                              This field cannot be updated. \n Note: HTTPAction is
                              to be implemented in future version."
                            properties:
                              host:
                                description: Indicates the server's domain name or
                                  IP address. Defaults to the Pod's IP. Prefer setting
                                  the "Host" header in httpHeaders when needed.
                                type: string
                              httpHeaders:
                                description: Allows for the inclusion of custom headers
                                  in the request. HTTP permits the use of repeated
                                  headers.
                                items:
                                  description: HTTPHeader describes a custom header
                                    to be used in HTTP probes
                                  properties:
                                    name:
                                      description: The header field name. This will
                                        be canonicalized upon output, so case-variant
                                        names will be understood as the same header.
                                      type: string
                                    value:
                                      description: The header field value
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                type: array
                              method:
                                description: Represents the type of HTTP request to
                                  be made, such as "GET," "POST," "PUT," etc. If not
                                  specified, "GET" is the default method.
                                type: string
                              path:
                                description: Specifies the endpoint to be requested
                                  on the HTTP server.
                                type: string
                              port:
                                anyOf:
                                - type: integer
                                - type: string
                                description: Specifies the target port for the HTTP
                                  request. It can be specified either as a numeric
                                  value in the range of 1 to 65535, or as a named
                                  port that meets the IANA_SVC_NAME specification.
                                x-kubernetes-int-or-string: true
                              scheme:
                                description: Designates the protocol used to make
                                  the request, such as HTTP or HTTPS. If not specified,
                                  HTTP is used by default.
                                type: string
                            required:
                            - port
                            type: object
                          image:
                            description: "Specifies the container image to be used
                              for running the Action. \n When specified, a dedicated
                              container will be created using this image to execute
                              the Action. This field is mutually exclusive with the
                              `container` field; only one of them should be provided.
                              \n This field cannot be updated."
                            type: string
                          matchingKey:
                            description: "Used in conjunction with the `targetPodSelector`
                              field to refine the selection of target pod(s) for Action
                              execution. The impact of this field depends on the `targetPodSelector`
                              value: \n - When `targetPodSelector` is set to `Any`
                              or `All`, this field will be ignored. - When `targetPodSelector`
                              is set to `Role`, only those replicas whose role matches
                              the `matchingKey` will be selected for the Action. \n
                              This field cannot be updated. \n Note: This field is
                              reserved for future use and is not currently active."
                            type: string
                          preCondition:
                            description: "Specifies the state that the cluster must
                              reach before the Action is executed. Currently, this
                              is only applicable to the `postProvision` action. \n
                              The conditions are as follows: \n - `Immediately`: Executed
                              right after the Component object is created. The readiness
                              of the Component and its resources is not guaranteed
                              at this stage. - `RuntimeReady`: The Action is triggered
                              after the Component object has been created and all
                              associated runtime resources (e.g. Pods) are in a ready
                              state. - `ComponentReady`: The Action is triggered after
                              the Component itself is in a ready state. This process
                              does not affect the readiness state of the Component
                              or the Cluster. - `ClusterReady`: The Action is executed
                              after the Cluster is in a ready state. This execution
                              does not alter the Component or the Cluster's state
                              of readiness. \n This field cannot be updated."
                            type: string
                          retryPolicy:
                            description: "Defines the strategy to be taken when retrying
                              the Action after a failure. \n It specifies the conditions
                              under which the Action should be retried and the limits
                              to apply, such as the maximum number of retries and
                              backoff strategy. \n This field cannot be updated."
                            properties:
                              maxRetries:
                                default: 0
                                description: Defines the maximum number of retry attempts
                                  that should be made for a given Action. This value
                                  is set to 0 by default, indicating that no retries
                                  will be made.
                                type: integer
                              retryInterval:
                                default: 0
                                description: Indicates the duration of time to wait
                                  between each retry attempt. This value is set to
                                  0 by default, indicating that there will be no delay
                                  between retry attempts.
                                format: int64
                                type: integer
                            type: object
                          targetPodSelector:
                            description: "Defines the criteria used to select the
                              target Pod(s) for executing the Action. This is useful
                              when there is no default target replica identified.
                              It allows for precise control over which Pod(s) the
                              Action should run in. \n This field cannot be updated.
                              \n Note: This field is reserved for future use and is
                              not currently active."
                            enum:
                            - Any
                            - All
                            - Role
                            - Ordinal
                            type: string
                          timeoutSeconds:
                            default: 0
                            description: "Specifies the maximum duration in seconds
                              that the Action is allowed to run. \n If the Action
                              does not complete within this time frame, it will be
                              terminated. \n This field cannot be updated."
                            format: int32
                            type: integer
                        type: object
                    type: object
                  reconfigure:
                    description: "Defines the procedure that update a replica with
                      new configuration. \n Note: This field is immutable once it
                      has been set. \n This Action is reserved for future versions."
                    properties:
                      builtinHandler:
                        description: "Specifies the name of the predefined action
                          handler to be invoked for lifecycle actions. \n Lorry, as
                          a sidecar agent co-located with the database container in
                          the same Pod, includes a suite of built-in action implementations
                          that are tailored to different database engines. These are
                          known as \"builtin\" handlers, includes: `mysql`, `redis`,
                          `mongodb`, `etcd`, `postgresql`, `official-postgresql`,
                          `apecloud-postgresql`, `wesql`, `oceanbase`, `polardbx`.
                          \n If the `builtinHandler` field is specified, it instructs
                          Lorry to utilize its internal built-in action handler to
                          execute the specified lifecycle actions. \n The `builtinHandler`
                          field is of type `BuiltinActionHandlerType`, which represents
                          the name of the built-in handler. The `builtinHandler` specified
                          within the same `ComponentLifecycleActions` should be consistent
                          across all actions. This means that if you specify a built-in
                          handler for one action, you should use the same handler
                          for all other actions throughout the entire `ComponentLifecycleActions`
                          collection. \n If you need to define lifecycle actions for
                          database engines not covered by the existing built-in support,
                          or when the pre-existing built-in handlers do not meet your
                          specific needs, you can use the `customHandler` field to
                          define your own action implementation. \n Deprecation Notice:
                          \n - In the future, the `builtinHandler` field will be deprecated
                          in favor of using the `customHandler` field for configuring
                          all lifecycle actions. - Instead of using a name to indicate
                          the built-in action implementations in Lorry, the recommended
                          approach will be to explicitly invoke the desired action
                          implementation through a gRPC interface exposed by the sidecar
                          agent. - Developers will have the flexibility to either
                          use the built-in action implementations provided by Lorry
                          or develop their own sidecar agent to implement custom actions
                          and expose them via gRPC interfaces. - This change will
                          allow for greater customization and extensibility of lifecycle
                          actions, as developers can create their own \"builtin\"
                          implementations tailored to their specific requirements."
                        type: string
                      customHandler:
                        description: "Specifies a user-defined hook or procedure that
                          is called to perform the specific lifecycle action. It offers
                          a flexible and expandable approach for customizing the behavior
                          of a Component by leveraging tailored actions. \n An Action
                          can be implemented as either an ExecAction or an HTTPAction,
                          with future versions planning to support GRPCAction, thereby
                          accommodating unique logic for different database systems
                          within the Action's framework. \n In future iterations,
                          all built-in handlers are expected to transition to GRPCAction.
                          This change means that Lorry or other sidecar agents will
                          expose the implementation of actions through a GRPC interface
                          for external invocation. Then the controller will interact
                          with these actions via GRPCAction calls."
                        properties:
                          container:
                            description: "Defines the name of the container within
                              the target Pod where the action will be executed. \n
                              This name must correspond to one of the containers defined
                              in `componentDefinition.spec.runtime`. If this field
                              is not specified, the default behavior is to use the
                              first container listed in `componentDefinition.spec.runtime`.
                              \n This field cannot be updated. \n Note: This field
                              is reserved for future use and is not currently active."
                            type: string
                          env:
                            description: "Represents a list of environment variables
                              that will be injected into the container. These variables
                              enable the container to adapt its behavior based on
                              the environment it's running in. \n This field cannot
                              be updated."
                            items:
                              description: EnvVar represents an environment variable
                                present in a Container.
                              properties:
                                name:
                                  description: Name of the environment variable. Must
                                    be a C_IDENTIFIER.
                                  type: string
                                value:
                                  description: 'Variable references $(VAR_NAME) are
                                    expanded using the previously defined environment
                                    variables in the container and any service environment
                                    variables. If a variable cannot be resolved, the
                                    reference in the input string will be unchanged.
                                    Double $$ are reduced to a single $, which allows
                                    for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)"
                                    will produce the string literal "$(VAR_NAME)".
                                    Escaped references will never be expanded, regardless
                                    of whether the variable exists or not. Defaults
                                    to "".'
                                  type: string
                                valueFrom:
                                  description: Source for the environment variable's
                                    value. Cannot be used if value is not empty.
                                  properties:
                                    configMapKeyRef:
                                      description: Selects a key of a ConfigMap.
                                      properties:
                                        key:
                                          description: The key to select.
                                          type: string
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                        optional:
                                          description: Specify whether the ConfigMap
                                            or its key must be defined
                                          type: boolean
                                      required:
                                      - key
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    fieldRef:
                                      description: 'Selects a field of the pod: supports
                                        metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`,
                                        `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                        spec.serviceAccountName, status.hostIP, status.podIP,
                                        status.podIPs.'
                                      properties:
                                        apiVersion:
                                          description: Version of the schema the FieldPath
                                            is written in terms of, defaults to "v1".
                                          type: string
                                        fieldPath:
                                          description: Path of the field to select
                                            in the specified API version.
                                          type: string
                                      required:
                                      - fieldPath
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    resourceFieldRef:
                                      description: 'Selects a resource of the container:
                                        only resources limits and requests (limits.cpu,
                                        limits.memory, limits.ephemeral-storage, requests.cpu,
                                        requests.memory and requests.ephemeral-storage)
                                        are currently supported.'
                                      properties:
                                        containerName:
                                          description: 'Container name: required for
                                            volumes, optional for env vars'
                                          type: string
                                        divisor:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: Specifies the output format
                                            of the exposed resources, defaults to
                                            "1"
                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          x-kubernetes-int-or-string: true
                                        resource:
                                          description: 'Required: resource to select'
                                          type: string
                                      required:
                                      - resource
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    secretKeyRef:
                                      description: Selects a key of a secret in the
                                        pod's namespace
                                      properties:
                                        key:
                                          description: The key of the secret to select
                                            from.  Must be a valid secret key.
                                          type: string
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                        optional:
                                          description: Specify whether the Secret
                                            or its key must be defined
                                          type: boolean
                                      required:
                                      - key
                                      type: object
                                      x-kubernetes-map-type: atomic
                                  type: object
                              required:
                              - name
                              type: object
                            type: array
                          exec:
                            description: "Defines the command to run. \n This field
                              cannot be updated."
                            properties:
                              args:
                                description: Args represents the arguments that are
                                  passed to the `command` for execution.
                                items:
                                  type: string
                                type: array
                              command:
                                description: "Specifies the command to be executed
                                  inside the container. The working directory for
                                  this command is the container's root directory('/').
                                  Commands are executed directly without a shell environment,
                                  meaning shell-specific syntax ('|', etc.) is not
                                  supported. If the shell is required, it must be
                                  explicitly invoked in the command. \n A successful
                                  execution is indicated by an exit status of 0; any
                                  non-zero status signifies a failure."
                                items:
                                  type: string
                                type: array
                            type: object
                          http:
                            description: "Specifies the HTTP request to perform. \n
                              This field cannot be updated. \n Note: HTTPAction is
                              to be implemented in future version."
                            properties:
                              host:
                                description: Indicates the server's domain name or
                                  IP address. Defaults to the Pod's IP. Prefer setting
                                  the "Host" header in httpHeaders when needed.
                                type: string
                              httpHeaders:
                                description: Allows for the inclusion of custom headers
                                  in the request. HTTP permits the use of repeated
                                  headers.
                                items:
                                  description: HTTPHeader describes a custom header
                                    to be used in HTTP probes
                                  properties:
                                    name:
                                      description: The header field name. This will
                                        be canonicalized upon output, so case-variant
                                        names will be understood as the same header.
                                      type: string
                                    value:
                                      description: The header field value
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                type: array
                              method:
                                description: Represents the type of HTTP request to
                                  be made, such as "GET," "POST," "PUT," etc. If not
                                  specified, "GET" is the default method.
                                type: string
                              path:
                                description: Specifies the endpoint to be requested
                                  on the HTTP server.
                                type: string
                              port:
                                anyOf:
                                - type: integer
                                - type: string
                                description: Specifies the target port for the HTTP
                                  request. It can be specified either as a numeric
                                  value in the range of 1 to 65535, or as a named
                                  port that meets the IANA_SVC_NAME specification.
                                x-kubernetes-int-or-string: true
                              scheme:
                                description: Designates the protocol used to make
                                  the request, such as HTTP or HTTPS. If not specified,
                                  HTTP is used by default.
                                type: string
                            required:
                            - port
                            type: object
                          image:
                            description: "Specifies the container image to be used
                              for running the Action. \n When specified, a dedicated
                              container will be created using this image to execute
                              the Action. This field is mutually exclusive with the
                              `container` field; only one of them should be provided.
                              \n This field cannot be updated."
                            type: string
                          matchingKey:
                            description: "Used in conjunction with the `targetPodSelector`
                              field to refine the selection of target pod(s) for Action
                              execution. The impact of this field depends on the `targetPodSelector`
                              value: \n - When `targetPodSelector` is set to `Any`
                              or `All`, this field will be ignored. - When `targetPodSelector`
                              is set to `Role`, only those replicas whose role matches
                              the `matchingKey` will be selected for the Action. \n
                              This field cannot be updated. \n Note: This field is
                              reserved for future use and is not currently active."
                            type: string
                          preCondition:
                            description: "Specifies the state that the cluster must
                              reach before the Action is executed. Currently, this
                              is only applicable to the `postProvision` action. \n
                              The conditions are as follows: \n - `Immediately`: Executed
                              right after the Component object is created. The readiness
                              of the Component and its resources is not guaranteed
                              at this stage. - `RuntimeReady`: The Action is triggered
                              after the Component object has been created and all
                              associated runtime resources (e.g. Pods) are in a ready
                              state. - `ComponentReady`: The Action is triggered after
                              the Component itself is in a ready state. This process
                              does not affect the readiness state of the Component
                              or the Cluster. - `ClusterReady`: The Action is executed
                              after the Cluster is in a ready state. This execution
                              does not alter the Component or the Cluster's state
                              of readiness. \n This field cannot be updated."
                            type: string
                          retryPolicy:
                            description: "Defines the strategy to be taken when retrying
                              the Action after a failure. \n It specifies the conditions
                              under which the Action should be retried and the limits
                              to apply, such as the maximum number of retries and
                              backoff strategy. \n This field cannot be updated."
                            properties:
                              maxRetries:
                                default: 0
                                description: Defines the maximum number of retry attempts
                                  that should be made for a given Action. This value
                                  is set to 0 by default, indicating that no retries
                                  will be made.
                                type: integer
                              retryInterval:
                                default: 0
                                description: Indicates the duration of time to wait
                                  between each retry attempt. This value is set to
                                  0 by default, indicating that there will be no delay
                                  between retry attempts.
                                format: int64
                                type: integer
                            type: object
                          targetPodSelector:
                            description: "Defines the criteria used to select the
                              target Pod(s) for executing the Action. This is useful
                              when there is no default target replica identified.
                              It allows for precise control over which Pod(s) the
                              Action should run in. \n This field cannot be updated.
                              \n Note: This field is reserved for future use and is
                              not currently active."
                            enum:
                            - Any
                            - All
                            - Role
                            - Ordinal
                            type: string
                          timeoutSeconds:
                            default: 0
                            description: "Specifies the maximum duration in seconds
                              that the Action is allowed to run. \n If the Action
                              does not complete within this time frame, it will be
                              terminated. \n This field cannot be updated."
                            format: int32
                            type: integer
                        type: object
                    type: object
                  roleProbe:
                    description: "Defines the procedure which is invoked regularly
                      to assess the role of replicas. \n This action is periodically
                      triggered by Lorry at the specified interval to determine the
                      role of each replica. Upon successful execution, the action's
                      output designates the role of the replica, which should match
                      one of the predefined role names within `componentDefinition.spec.roles`.
                      The output is then compared with the previous successful execution
                      result. If a role change is detected, an event is generated
                      to inform the controller, which initiates an update of the replica's
                      role. \n Defining a RoleProbe Action for a Component is required
                      if roles are defined for the Component. It ensures replicas
                      are correctly labeled with their respective roles. Without this,
                      services that rely on roleSelectors might improperly direct
                      traffic to wrong replicas. \n The container executing this action
                      has access to following environment variables: \n - KB_POD_FQDN:
                      The FQDN of the Pod whose role is being assessed. - KB_SERVICE_PORT:
                      The port used by the database service. - KB_SERVICE_USER: The
                      username with the necessary permissions to interact with the
                      database service. - KB_SERVICE_PASSWORD: The corresponding password
                      for KB_SERVICE_USER to authenticate with the database service.
                      \n Expected output of this action: - On Success: The determined
                      role of the replica, which must align with one of the roles
                      specified in the component definition. - On Failure: An error
                      message, if applicable, indicating why the action failed. \n
                      Note: This field is immutable once it has been set."
                    properties:
                      builtinHandler:
                        description: "Specifies the name of the predefined action
                          handler to be invoked for lifecycle actions. \n Lorry, as
                          a sidecar agent co-located with the database container in
                          the same Pod, includes a suite of built-in action implementations
                          that are tailored to different database engines. These are
                          known as \"builtin\" handlers, includes: `mysql`, `redis`,
                          `mongodb`, `etcd`, `postgresql`, `official-postgresql`,
                          `apecloud-postgresql`, `wesql`, `oceanbase`, `polardbx`.
                          \n If the `builtinHandler` field is specified, it instructs
                          Lorry to utilize its internal built-in action handler to
                          execute the specified lifecycle actions. \n The `builtinHandler`
                          field is of type `BuiltinActionHandlerType`, which represents
                          the name of the built-in handler. The `builtinHandler` specified
                          within the same `ComponentLifecycleActions` should be consistent
                          across all actions. This means that if you specify a built-in
                          handler for one action, you should use the same handler
                          for all other actions throughout the entire `ComponentLifecycleActions`
                          collection. \n If you need to define lifecycle actions for
                          database engines not covered by the existing built-in support,
                          or when the pre-existing built-in handlers do not meet your
                          specific needs, you can use the `customHandler` field to
                          define your own action implementation. \n Deprecation Notice:
                          \n - In the future, the `builtinHandler` field will be deprecated
                          in favor of using the `customHandler` field for configuring
                          all lifecycle actions. - Instead of using a name to indicate
                          the built-in action implementations in Lorry, the recommended
                          approach will be to explicitly invoke the desired action
                          implementation through a gRPC interface exposed by the sidecar
                          agent. - Developers will have the flexibility to either
                          use the built-in action implementations provided by Lorry
                          or develop their own sidecar agent to implement custom actions
                          and expose them via gRPC interfaces. - This change will
                          allow for greater customization and extensibility of lifecycle
                          actions, as developers can create their own \"builtin\"
                          implementations tailored to their specific requirements."
                        type: string
                      customHandler:
                        description: "Specifies a user-defined hook or procedure that
                          is called to perform the specific lifecycle action. It offers
                          a flexible and expandable approach for customizing the behavior
                          of a Component by leveraging tailored actions. \n An Action
                          can be implemented as either an ExecAction or an HTTPAction,
                          with future versions planning to support GRPCAction, thereby
                          accommodating unique logic for different database systems
                          within the Action's framework. \n In future iterations,
                          all built-in handlers are expected to transition to GRPCAction.
                          This change means that Lorry or other sidecar agents will
                          expose the implementation of actions through a GRPC interface
                          for external invocation. Then the controller will interact
                          with these actions via GRPCAction calls."
                        properties:
                          container:
                            description: "Defines the name of the container within
                              the target Pod where the action will be executed. \n
                              This name must correspond to one of the containers defined
                              in `componentDefinition.spec.runtime`. If this field
                              is not specified, the default behavior is to use the
                              first container listed in `componentDefinition.spec.runtime`.
                              \n This field cannot be updated. \n Note: This field
                              is reserved for future use and is not currently active."
                            type: string
                          env:
                            description: "Represents a list of environment variables
                              that will be injected into the container. These variables
                              enable the container to adapt its behavior based on
                              the environment it's running in. \n This field cannot
                              be updated."
                            items:
                              description: EnvVar represents an environment variable
                                present in a Container.
                              properties:
                                name:
                                  description: Name of the environment variable. Must
                                    be a C_IDENTIFIER.
                                  type: string
                                value:
                                  description: 'Variable references $(VAR_NAME) are
                                    expanded using the previously defined environment
                                    variables in the container and any service environment
                                    variables. If a variable cannot be resolved, the
                                    reference in the input string will be unchanged.
                                    Double $$ are reduced to a single $, which allows
                                    for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)"
                                    will produce the string literal "$(VAR_NAME)".
                                    Escaped references will never be expanded, regardless
                                    of whether the variable exists or not. Defaults
                                    to "".'
                                  type: string
                                valueFrom:
                                  description: Source for the environment variable's
                                    value. Cannot be used if value is not empty.
                                  properties:
                                    configMapKeyRef:
                                      description: Selects a key of a ConfigMap.
                                      properties:
                                        key:
                                          description: The key to select.
                                          type: string
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                        optional:
                                          description: Specify whether the ConfigMap
                                            or its key must be defined
                                          type: boolean
                                      required:
                                      - key
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    fieldRef:
                                      description: 'Selects a field of the pod: supports
                                        metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`,
                                        `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                        spec.serviceAccountName, status.hostIP, status.podIP,
                                        status.podIPs.'
                                      properties:
                                        apiVersion:
                                          description: Version of the schema the FieldPath
                                            is written in terms of, defaults to "v1".
                                          type: string
                                        fieldPath:
                                          description: Path of the field to select
                                            in the specified API version.
                                          type: string
                                      required:
                                      - fieldPath
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    resourceFieldRef:
                                      description: 'Selects a resource of the container:
                                        only resources limits and requests (limits.cpu,
                                        limits.memory, limits.ephemeral-storage, requests.cpu,
                                        requests.memory and requests.ephemeral-storage)
                                        are currently supported.'
                                      properties:
                                        containerName:
                                          description: 'Container name: required for
                                            volumes, optional for env vars'
                                          type: string
                                        divisor:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: Specifies the output format
                                            of the exposed resources, defaults to
                                            "1"
                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          x-kubernetes-int-or-string: true
                                        resource:
                                          description: 'Required: resource to select'
                                          type: string
                                      required:
                                      - resource
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    secretKeyRef:
                                      description: Selects a key of a secret in the
                                        pod's namespace
                                      properties:
                                        key:
                                          description: The key of the secret to select
                                            from.  Must be a valid secret key.
                                          type: string
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                        optional:
                                          description: Specify whether the Secret
                                            or its key must be defined
                                          type: boolean
                                      required:
                                      - key
                                      type: object
                                      x-kubernetes-map-type: atomic
                                  type: object
                              required:
                              - name
                              type: object
                            type: array
                          exec:
                            description: "Defines the command to run. \n This field
                              cannot be updated."
                            properties:
                              args:
                                description: Args represents the arguments that are
                                  passed to the `command` for execution.
                                items:
                                  type: string
                                type: array
                              command:
                                description: "Specifies the command to be executed
                                  inside the container. The working directory for
                                  this command is the container's root directory('/').
                                  Commands are executed directly without a shell environment,
                                  meaning shell-specific syntax ('|', etc.) is not
                                  supported. If the shell is required, it must be
                                  explicitly invoked in the command. \n A successful
                                  execution is indicated by an exit status of 0; any
                                  non-zero status signifies a failure."
                                items:
                                  type: string
                                type: array
                            type: object
                          http:
                            description: "Specifies the HTTP request to perform. \n
                              This field cannot be updated. \n Note: HTTPAction is
                              to be implemented in future version."
                            properties:
                              host:
                                description: Indicates the server's domain name or
                                  IP address. Defaults to the Pod's IP. Prefer setting
                                  the "Host" header in httpHeaders when needed.
                                type: string
                              httpHeaders:
                                description: Allows for the inclusion of custom headers
                                  in the request. HTTP permits the use of repeated
                                  headers.
                                items:
                                  description: HTTPHeader describes a custom header
                                    to be used in HTTP probes
                                  properties:
                                    name:
                                      description: The header field name. This will
                                        be canonicalized upon output, so case-variant
                                        names will be understood as the same header.
                                      type: string
                                    value:
                                      description: The header field value
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                type: array
                              method:
                                description: Represents the type of HTTP request to
                                  be made, such as "GET," "POST," "PUT," etc. If not
                                  specified, "GET" is the default method.
                                type: string
                              path:
                                description: Specifies the endpoint to be requested
                                  on the HTTP server.
                                type: string
                              port:
                                anyOf:
                                - type: integer
                                - type: string
                                description: Specifies the target port for the HTTP
                                  request. It can be specified either as a numeric
                                  value in the range of 1 to 65535, or as a named
                                  port that meets the IANA_SVC_NAME specification.
                                x-kubernetes-int-or-string: true
                              scheme:
                                description: Designates the protocol used to make
                                  the request, such as HTTP or HTTPS. If not specified,
                                  HTTP is used by default.
                                type: string
                            required:
                            - port
                            type: object
                          image:
                            description: "Specifies the container image to be used
                              for running the Action. \n When specified, a dedicated
                              container will be created using this image to execute
                              the Action. This field is mutually exclusive with the
                              `container` field; only one of them should be provided.
                              \n This field cannot be updated."
                            type: string
                          matchingKey:
                            description: "Used in conjunction with the `targetPodSelector`
                              field to refine the selection of target pod(s) for Action
                              execution. The impact of this field depends on the `targetPodSelector`
                              value: \n - When `targetPodSelector` is set to `Any`
                              or `All`, this field will be ignored. - When `targetPodSelector`
                              is set to `Role`, only those replicas whose role matches
                              the `matchingKey` will be selected for the Action. \n
                              This field cannot be updated. \n Note: This field is
                              reserved for future use and is not currently active."
                            type: string
                          preCondition:
                            description: "Specifies the state that the cluster must
                              reach before the Action is executed. Currently, this
                              is only applicable to the `postProvision` action. \n
                              The conditions are as follows: \n - `Immediately`: Executed
                              right after the Component object is created. The readiness
                              of the Component and its resources is not guaranteed
                              at this stage. - `RuntimeReady`: The Action is triggered
                              after the Component object has been created and all
                              associated runtime resources (e.g. Pods) are in a ready
                              state. - `ComponentReady`: The Action is triggered after
                              the Component itself is in a ready state. This process
                              does not affect the readiness state of the Component
                              or the Cluster. - `ClusterReady`: The Action is executed
                              after the Cluster is in a ready state. This execution
                              does not alter the Component or the Cluster's state
                              of readiness. \n This field cannot be updated."
                            type: string
                          retryPolicy:
                            description: "Defines the strategy to be taken when retrying
                              the Action after a failure. \n It specifies the conditions
                              under which the Action should be retried and the limits
                              to apply, such as the maximum number of retries and
                              backoff strategy. \n This field cannot be updated."
                            properties:
                              maxRetries:
                                default: 0
                                description: Defines the maximum number of retry attempts
                                  that should be made for a given Action. This value
                                  is set to 0 by default, indicating that no retries
                                  will be made.
                                type: integer
                              retryInterval:
                                default: 0
                                description: Indicates the duration of time to wait
                                  between each retry attempt. This value is set to
                                  0 by default, indicating that there will be no delay
                                  between retry attempts.
                                format: int64
                                type: integer
                            type: object
                          targetPodSelector:
                            description: "Defines the criteria used to select the
                              target Pod(s) for executing the Action. This is useful
                              when there is no default target replica identified.
                              It allows for precise control over which Pod(s) the
                              Action should run in. \n This field cannot be updated.
                              \n Note: This field is reserved for future use and is
                              not currently active."
                            enum:
                            - Any
                            - All
                            - Role
                            - Ordinal
                            type: string
                          timeoutSeconds:
                            default: 0
                            description: "Specifies the maximum duration in seconds
                              that the Action is allowed to run. \n If the Action
                              does not complete within this time frame, it will be
                              terminated. \n This field cannot be updated."
                            format: int32
                            type: integer
                        type: object
                      initialDelaySeconds:
                        description: Specifies the number of seconds to wait after
                          the container has started before the RoleProbe begins to
                          detect the container's role.
                        format: int32
                        type: integer
                      periodSeconds:
                        description: Specifies the frequency at which the probe is
                          conducted. This value is expressed in seconds. Default to
                          10 seconds. Minimum value is 1.
                        format: int32
                        type: integer
                      timeoutSeconds:
                        description: Specifies the number of seconds after which the
                          probe times out. Defaults to 1 second. Minimum value is
                          1.
                        format: int32
                        type: integer
                    type: object
                  switchover:
                    description: "Defines the procedure for a controlled transition
                      of leadership from the current leader to a new replica. This
                      approach aims to minimize downtime and maintain availability
                      in systems with a leader-follower topology, during events such
                      as planned maintenance or when performing stop, shutdown, restart,
                      or upgrade operations involving the current leader node. \n
                      The container executing this action has access to following
                      environment variables: \n - KB_SWITCHOVER_CANDIDATE_NAME: The
                      name of the pod for the new leader candidate, which may not
                      be specified (empty). - KB_SWITCHOVER_CANDIDATE_FQDN: The FQDN
                      of the new leader candidate's pod, which may not be specified
                      (empty). - KB_LEADER_POD_IP: The IP address of the current leader's
                      pod prior to the switchover. - KB_LEADER_POD_NAME: The name
                      of the current leader's pod prior to the switchover. - KB_LEADER_POD_FQDN:
                      The FQDN of the current leader's pod prior to the switchover.
                      \n The environment variables with the following prefixes are
                      deprecated and will be removed in future releases: \n - KB_REPLICATION_PRIMARY_POD_
                      - KB_CONSENSUS_LEADER_POD_ \n Note: This field is immutable
                      once it has been set."
                    properties:
                      scriptSpecSelectors:
                        description: "Used to define the selectors for the scriptSpecs
                          that need to be referenced. If this field is set, the scripts
                          defined under the 'scripts' field can be invoked or referenced
                          within an Action. \n This field is deprecated from v0.9.
                          This field is maintained for backward compatibility and
                          its use is discouraged. Existing usage should be updated
                          to the current preferred approach to avoid compatibility
                          issues in future releases."
                        items:
                          properties:
                            name:
                              description: Represents the name of the ScriptSpec referent.
                              maxLength: 63
                              pattern: ^[a-z0-9]([a-z0-9\.\-]*[a-z0-9])?$
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                      withCandidate:
                        description: Represents the switchover process for a specified
                          candidate primary or leader instance. Note that only Action.Exec
                          is currently supported, while Action.HTTP is not.
                        properties:
                          container:
                            description: "Defines the name of the container within
                              the target Pod where the action will be executed. \n
                              This name must correspond to one of the containers defined
                              in `componentDefinition.spec.runtime`. If this field
                              is not specified, the default behavior is to use the
                              first container listed in `componentDefinition.spec.runtime`.
                              \n This field cannot be updated. \n Note: This field
                              is reserved for future use and is not currently active."
                            type: string
                          env:
                            description: "Represents a list of environment variables
                              that will be injected into the container. These variables
                              enable the container to adapt its behavior based on
                              the environment it's running in. \n This field cannot
                              be updated."
                            items:
                              description: EnvVar represents an environment variable
                                present in a Container.
                              properties:
                                name:
                                  description: Name of the environment variable. Must
                                    be a C_IDENTIFIER.
                                  type: string
                                value:
                                  description: 'Variable references $(VAR_NAME) are
                                    expanded using the previously defined environment
                                    variables in the container and any service environment
                                    variables. If a variable cannot be resolved, the
                                    reference in the input string will be unchanged.
                                    Double $$ are reduced to a single $, which allows
                                    for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)"
                                    will produce the string literal "$(VAR_NAME)".
                                    Escaped references will never be expanded, regardless
                                    of whether the variable exists or not. Defaults
                                    to "".'
                                  type: string
                                valueFrom:
                                  description: Source for the environment variable's
                                    value. Cannot be used if value is not empty.
                                  properties:
                                    configMapKeyRef:
                                      description: Selects a key of a ConfigMap.
                                      properties:
                                        key:
                                          description: The key to select.
                                          type: string
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                        optional:
                                          description: Specify whether the ConfigMap
                                            or its key must be defined
                                          type: boolean
                                      required:
                                      - key
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    fieldRef:
                                      description: 'Selects a field of the pod: supports
                                        metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`,
                                        `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                        spec.serviceAccountName, status.hostIP, status.podIP,
                                        status.podIPs.'
                                      properties:
                                        apiVersion:
                                          description: Version of the schema the FieldPath
                                            is written in terms of, defaults to "v1".
                                          type: string
                                        fieldPath:
                                          description: Path of the field to select
                                            in the specified API version.
                                          type: string
                                      required:
                                      - fieldPath
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    resourceFieldRef:
                                      description: 'Selects a resource of the container:
                                        only resources limits and requests (limits.cpu,
                                        limits.memory, limits.ephemeral-storage, requests.cpu,
                                        requests.memory and requests.ephemeral-storage)
                                        are currently supported.'
                                      properties:
                                        containerName:
                                          description: 'Container name: required for
                                            volumes, optional for env vars'
                                          type: string
                                        divisor:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: Specifies the output format
                                            of the exposed resources, defaults to
                                            "1"
                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          x-kubernetes-int-or-string: true
                                        resource:
                                          description: 'Required: resource to select'
                                          type: string
                                      required:
                                      - resource
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    secretKeyRef:
                                      description: Selects a key of a secret in the
                                        pod's namespace
                                      properties:
                                        key:
                                          description: The key of the secret to select
                                            from.  Must be a valid secret key.
                                          type: string
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                        optional:
                                          description: Specify whether the Secret
                                            or its key must be defined
                                          type: boolean
                                      required:
                                      - key
                                      type: object
                                      x-kubernetes-map-type: atomic
                                  type: object
                              required:
                              - name
                              type: object
                            type: array
                          exec:
                            description: "Defines the command to run. \n This field
                              cannot be updated."
                            properties:
                              args:
                                description: Args represents the arguments that are
                                  passed to the `command` for execution.
                                items:
                                  type: string
                                type: array
                              command:
                                description: "Specifies the command to be executed
                                  inside the container. The working directory for
                                  this command is the container's root directory('/').
                                  Commands are executed directly without a shell environment,
                                  meaning shell-specific syntax ('|', etc.) is not
                                  supported. If the shell is required, it must be
                                  explicitly invoked in the command. \n A successful
                                  execution is indicated by an exit status of 0; any
                                  non-zero status signifies a failure."
                                items:
                                  type: string
                                type: array
                            type: object
                          http:
                            description: "Specifies the HTTP request to perform. \n
                              This field cannot be updated. \n Note: HTTPAction is
                              to be implemented in future version."
                            properties:
                              host:
                                description: Indicates the server's domain name or
                                  IP address. Defaults to the Pod's IP. Prefer setting
                                  the "Host" header in httpHeaders when needed.
                                type: string
                              httpHeaders:
                                description: Allows for the inclusion of custom headers
                                  in the request. HTTP permits the use of repeated
                                  headers.
                                items:
                                  description: HTTPHeader describes a custom header
                                    to be used in HTTP probes
                                  properties:
                                    name:
                                      description: The header field name. This will
                                        be canonicalized upon output, so case-variant
                                        names will be understood as the same header.
                                      type: string
                                    value:
                                      description: The header field value
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                type: array
                              method:
                                description: Represents the type of HTTP request to
                                  be made, such as "GET," "POST," "PUT," etc. If not
                                  specified, "GET" is the default method.
                                type: string
                              path:
                                description: Specifies the endpoint to be requested
                                  on the HTTP server.
                                type: string
                              port:
                                anyOf:
                                - type: integer
                                - type: string
                                description: Specifies the target port for the HTTP
                                  request. It can be specified either as a numeric
                                  value in the range of 1 to 65535, or as a named
                                  port that meets the IANA_SVC_NAME specification.
                                x-kubernetes-int-or-string: true
                              scheme:
                                description: Designates the protocol used to make
                                  the request, such as HTTP or HTTPS. If not specified,
                                  HTTP is used by default.
                                type: string
                            required:
                            - port
                            type: object
                          image:
                            description: "Specifies the container image to be used
                              for running the Action. \n When specified, a dedicated
                              container will be created using this image to execute
                              the Action. This field is mutually exclusive with the
                              `container` field; only one of them should be provided.
                              \n This field cannot be updated."
                            type: string
                          matchingKey:
                            description: "Used in conjunction with the `targetPodSelector`
                              field to refine the selection of target pod(s) for Action
                              execution. The impact of this field depends on the `targetPodSelector`
                              value: \n - When `targetPodSelector` is set to `Any`
                              or `All`, this field will be ignored. - When `targetPodSelector`
                              is set to `Role`, only those replicas whose role matches
                              the `matchingKey` will be selected for the Action. \n
                              This field cannot be updated. \n Note: This field is
                              reserved for future use and is not currently active."
                            type: string
                          preCondition:
                            description: "Specifies the state that the cluster must
                              reach before the Action is executed. Currently, this
                              is only applicable to the `postProvision` action. \n
                              The conditions are as follows: \n - `Immediately`: Executed
                              right after the Component object is created. The readiness
                              of the Component and its resources is not guaranteed
                              at this stage. - `RuntimeReady`: The Action is triggered
                              after the Component object has been created and all
                              associated runtime resources (e.g. Pods) are in a ready
                              state. - `ComponentReady`: The Action is triggered after
                              the Component itself is in a ready state. This process
                              does not affect the readiness state of the Component
                              or the Cluster. - `ClusterReady`: The Action is executed
                              after the Cluster is in a ready state. This execution
                              does not alter the Component or the Cluster's state
                              of readiness. \n This field cannot be updated."
                            type: string
                          retryPolicy:
                            description: "Defines the strategy to be taken when retrying
                              the Action after a failure. \n It specifies the conditions
                              under which the Action should be retried and the limits
                              to apply, such as the maximum number of retries and
                              backoff strategy. \n This field cannot be updated."
                            properties:
                              maxRetries:
                                default: 0
                                description: Defines the maximum number of retry attempts
                                  that should be made for a given Action. This value
                                  is set to 0 by default, indicating that no retries
                                  will be made.
                                type: integer
                              retryInterval:
                                default: 0
                                description: Indicates the duration of time to wait
                                  between each retry attempt. This value is set to
                                  0 by default, indicating that there will be no delay
                                  between retry attempts.
                                format: int64
                                type: integer
                            type: object
                          targetPodSelector:
                            description: "Defines the criteria used to select the
                              target Pod(s) for executing the Action. This is useful
                              when there is no default target replica identified.
                              It allows for precise control over which Pod(s) the
                              Action should run in. \n This field cannot be updated.
                              \n Note: This field is reserved for future use and is
                              not currently active."
                            enum:
                            - Any
                            - All
                            - Role
                            - Ordinal
                            type: string
                          timeoutSeconds:
                            default: 0
                            description: "Specifies the maximum duration in seconds
                              that the Action is allowed to run. \n If the Action
                              does not complete within this time frame, it will be
                              terminated. \n This field cannot be updated."
                            format: int32
                            type: integer
                        type: object
                      withoutCandidate:
                        description: Represents a switchover process that does not
                          involve a specific candidate primary or leader instance.
                          As with the previous field, only Action.Exec is currently
                          supported, not Action.HTTP.
                        properties:
                          container:
                            description: "Defines the name of the container within
                              the target Pod where the action will be executed. \n
                              This name must correspond to one of the containers defined
                              in `componentDefinition.spec.runtime`. If this field
                              is not specified, the default behavior is to use the
                              first container listed in `componentDefinition.spec.runtime`.
                              \n This field cannot be updated. \n Note: This field
                              is reserved for future use and is not currently active."
                            type: string
                          env:
                            description: "Represents a list of environment variables
                              that will be injected into the container. These variables
                              enable the container to adapt its behavior based on
                              the environment it's running in. \n This field cannot
                              be updated."
                            items:
                              description: EnvVar represents an environment variable
                                present in a Container.
                              properties:
                                name:
                                  description: Name of the environment variable. Must
                                    be a C_IDENTIFIER.
                                  type: string
                                value:
                                  description: 'Variable references $(VAR_NAME) are
                                    expanded using the previously defined environment
                                    variables in the container and any service environment
                                    variables. If a variable cannot be resolved, the
                                    reference in the input string will be unchanged.
                                    Double $$ are reduced to a single $, which allows
                                    for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)"
                                    will produce the string literal "$(VAR_NAME)".
                                    Escaped references will never be expanded, regardless
                                    of whether the variable exists or not. Defaults
                                    to "".'
                                  type: string
                                valueFrom:
                                  description: Source for the environment variable's
                                    value. Cannot be used if value is not empty.
                                  properties:
                                    configMapKeyRef:
                                      description: Selects a key of a ConfigMap.
                                      properties:
                                        key:
                                          description: The key to select.
                                          type: string
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                        optional:
                                          description: Specify whether the ConfigMap
                                            or its key must be defined
                                          type: boolean
                                      required:
                                      - key
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    fieldRef:
                                      description: 'Selects a field of the pod: supports
                                        metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`,
                                        `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                        spec.serviceAccountName, status.hostIP, status.podIP,
                                        status.podIPs.'
                                      properties:
                                        apiVersion:
                                          description: Version of the schema the FieldPath
                                            is written in terms of, defaults to "v1".
                                          type: string
                                        fieldPath:
                                          description: Path of the field to select
                                            in the specified API version.
                                          type: string
                                      required:
                                      - fieldPath
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    resourceFieldRef:
                                      description: 'Selects a resource of the container:
                                        only resources limits and requests (limits.cpu,
                                        limits.memory, limits.ephemeral-storage, requests.cpu,
                                        requests.memory and requests.ephemeral-storage)
                                        are currently supported.'
                                      properties:
                                        containerName:
                                          description: 'Container name: required for
                                            volumes, optional for env vars'
                                          type: string
                                        divisor:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: Specifies the output format
                                            of the exposed resources, defaults to
                                            "1"
                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          x-kubernetes-int-or-string: true
                                        resource:
                                          description: 'Required: resource to select'
                                          type: string
                                      required:
                                      - resource
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    secretKeyRef:
                                      description: Selects a key of a secret in the
                                        pod's namespace
                                      properties:
                                        key:
                                          description: The key of the secret to select
                                            from.  Must be a valid secret key.
                                          type: string
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                        optional:
                                          description: Specify whether the Secret
                                            or its key must be defined
                                          type: boolean
                                      required:
                                      - key
                                      type: object
                                      x-kubernetes-map-type: atomic
                                  type: object
                              required:
                              - name
                              type: object
                            type: array
                          exec:
                            description: "Defines the command to run. \n This field
                              cannot be updated."
                            properties:
                              args:
                                description: Args represents the arguments that are
                                  passed to the `command` for execution.
                                items:
                                  type: string
                                type: array
                              command:
                                description: "Specifies the command to be executed
                                  inside the container. The working directory for
                                  this command is the container's root directory('/').
                                  Commands are executed directly without a shell environment,
                                  meaning shell-specific syntax ('|', etc.) is not
                                  supported. If the shell is required, it must be
                                  explicitly invoked in the command. \n A successful
                                  execution is indicated by an exit status of 0; any
                                  non-zero status signifies a failure."
                                items:
                                  type: string
                                type: array
                            type: object
                          http:
                            description: "Specifies the HTTP request to perform. \n
                              This field cannot be updated. \n Note: HTTPAction is
                              to be implemented in future version."
                            properties:
                              host:
                                description: Indicates the server's domain name or
                                  IP address. Defaults to the Pod's IP. Prefer setting
                                  the "Host" header in httpHeaders when needed.
                                type: string
                              httpHeaders:
                                description: Allows for the inclusion of custom headers
                                  in the request. HTTP permits the use of repeated
                                  headers.
                                items:
                                  description: HTTPHeader describes a custom header
                                    to be used in HTTP probes
                                  properties:
                                    name:
                                      description: The header field name. This will
                                        be canonicalized upon output, so case-variant
                                        names will be understood as the same header.
                                      type: string
                                    value:
                                      description: The header field value
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                type: array
                              method:
                                description: Represents the type of HTTP request to
                                  be made, such as "GET," "POST," "PUT," etc. If not
                                  specified, "GET" is the default method.
                                type: string
                              path:
                                description: Specifies the endpoint to be requested
                                  on the HTTP server.
                                type: string
                              port:
                                anyOf:
                                - type: integer
                                - type: string
                                description: Specifies the target port for the HTTP
                                  request. It can be specified either as a numeric
                                  value in the range of 1 to 65535, or as a named
                                  port that meets the IANA_SVC_NAME specification.
                                x-kubernetes-int-or-string: true
                              scheme:
                                description: Designates the protocol used to make
                                  the request, such as HTTP or HTTPS. If not specified,
                                  HTTP is used by default.
                                type: string
                            required:
                            - port
                            type: object
                          image:
                            description: "Specifies the container image to be used
                              for running the Action. \n When specified, a dedicated
                              container will be created using this image to execute
                              the Action. This field is mutually exclusive with the
                              `container` field; only one of them should be provided.
                              \n This field cannot be updated."
                            type: string
                          matchingKey:
                            description: "Used in conjunction with the `targetPodSelector`
                              field to refine the selection of target pod(s) for Action
                              execution. The impact of this field depends on the `targetPodSelector`
                              value: \n - When `targetPodSelector` is set to `Any`
                              or `All`, this field will be ignored. - When `targetPodSelector`
                              is set to `Role`, only those replicas whose role matches
                              the `matchingKey` will be selected for the Action. \n
                              This field cannot be updated. \n Note: This field is
                              reserved for future use and is not currently active."
                            type: string
                          preCondition:
                            description: "Specifies the state that the cluster must
                              reach before the Action is executed. Currently, this
                              is only applicable to the `postProvision` action. \n
                              The conditions are as follows: \n - `Immediately`: Executed
                              right after the Component object is created. The readiness
                              of the Component and its resources is not guaranteed
                              at this stage. - `RuntimeReady`: The Action is triggered
                              after the Component object has been created and all
                              associated runtime resources (e.g. Pods) are in a ready
                              state. - `ComponentReady`: The Action is triggered after
                              the Component itself is in a ready state. This process
                              does not affect the readiness state of the Component
                              or the Cluster. - `ClusterReady`: The Action is executed
                              after the Cluster is in a ready state. This execution
                              does not alter the Component or the Cluster's state
                              of readiness. \n This field cannot be updated."
                            type: string
                          retryPolicy:
                            description: "Defines the strategy to be taken when retrying
                              the Action after a failure. \n It specifies the conditions
                              under which the Action should be retried and the limits
                              to apply, such as the maximum number of retries and
                              backoff strategy. \n This field cannot be updated."
                            properties:
                              maxRetries:
                                default: 0
                                description: Defines the maximum number of retry attempts
                                  that should be made for a given Action. This value
                                  is set to 0 by default, indicating that no retries
                                  will be made.
                                type: integer
                              retryInterval:
                                default: 0
                                description: Indicates the duration of time to wait
                                  between each retry attempt. This value is set to
                                  0 by default, indicating that there will be no delay
                                  between retry attempts.
                                format: int64
                                type: integer
                            type: object
                          targetPodSelector:
                            description: "Defines the criteria used to select the
                              target Pod(s) for executing the Action. This is useful
                              when there is no default target replica identified.
                              It allows for precise control over which Pod(s) the
                              Action should run in. \n This field cannot be updated.
                              \n Note: This field is reserved for future use and is
                              not currently active."
                            enum:
                            - Any
                            - All
                            - Role
                            - Ordinal
                            type: string
                          timeoutSeconds:
                            default: 0
                            description: "Specifies the maximum duration in seconds
                              that the Action is allowed to run. \n If the Action
                              does not complete within this time frame, it will be
                              terminated. \n This field cannot be updated."
                            format: int32
                            type: integer
                        type: object
                    type: object
                type: object
              logConfigs:
                description: "Defines the types of logs generated by instances of
                  the Component and their corresponding file paths. These logs can
                  be collected for further analysis and monitoring. \n The `logConfigs`
                  field is an optional list of LogConfig objects, where each object
                  represents a specific log type and its configuration. It allows
                  you to specify multiple log types and their respective file paths
                  for the Component. \n Examples: \n ```yaml logConfigs: - filePathPattern:
                  /data/mysql/log/mysqld-error.log name: error - filePathPattern:
                  /data/mysql/log/mysqld.log name: general - filePathPattern: /data/mysql/log/mysqld-slowquery.log
                  name: slow ``` \n This field is immutable."
                items:
                  properties:
                    filePathPattern:
                      description: "Specifies the paths or patterns identifying where
                        the log files are stored. This field allows the system to
                        locate and manage log files effectively. \n Examples: \n -
                        /home/postgres/pgdata/pgroot/data/log/postgresql-* - /data/mysql/log/mysqld-error.log"
                      maxLength: 4096
                      type: string
                    name:
                      description: Specifies a descriptive label for the log type,
                        such as 'slow' for a MySQL slow log file. It provides a clear
                        identification of the log's purpose and content.
                      maxLength: 128
                      type: string
                  required:
                  - filePathPattern
                  - name
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - name
                x-kubernetes-list-type: map
              minReadySeconds:
                default: 0
                description: "`minReadySeconds` is the minimum duration in seconds
                  that a new Pod should remain in the ready state without any of its
                  containers crashing to be considered available. This ensures the
                  Pod's stability and readiness to serve requests. \n A default value
                  of 0 seconds means the Pod is considered available as soon as it
                  enters the ready state."
                format: int32
                minimum: 0
                type: integer
              monitor:
                description: Deprecated since v0.9 monitor is monitoring config which
                  provided by provider.
                properties:
                  builtIn:
                    default: false
                    description: builtIn is a switch to enable KubeBlocks builtIn
                      monitoring. If BuiltIn is set to true, monitor metrics will
                      be scraped automatically. If BuiltIn is set to false, the provider
                      should set ExporterConfig and Sidecar container own.
                    type: boolean
                  exporterConfig:
                    description: exporterConfig provided by provider, which specify
                      necessary information to Time Series Database. exporterConfig
                      is valid when builtIn is false.
                    properties:
                      scrapePath:
                        default: /metrics
                        description: scrapePath is exporter url path for Time Series
                          Database to scrape metrics.
                        maxLength: 128
                        type: string
                      scrapePort:
                        anyOf:
                        - type: integer
                        - type: string
                        description: scrapePort is exporter port for Time Series Database
                          to scrape metrics.
                        x-kubernetes-int-or-string: true
                    required:
                    - scrapePort
                    type: object
                type: object
              podManagementPolicy:
                description: "InstanceSet controls the creation of pods during initial
                  scale up, replacement of pods on nodes, and scaling down. \n - `OrderedReady`:
                  Creates pods in increasing order (pod-0, then pod-1, etc). The controller
                  waits until each pod is ready before continuing. Pods are removed
                  in reverse order when scaling down. - `Parallel`: Creates pods in
                  parallel to match the desired scale without waiting. All pods are
                  deleted at once when scaling down."
                type: string
              policyRules:
                description: "Defines the namespaced policy rules required by the
                  Component. \n The `policyRules` field is an array of `rbacv1.PolicyRule`
                  objects that define the policy rules needed by the Component to
                  operate within a namespace. These policy rules determine the permissions
                  and verbs the Component is allowed to perform on Kubernetes resources
                  within the namespace. \n The purpose of this field is to automatically
                  generate the necessary RBAC roles for the Component based on the
                  specified policy rules. This ensures that the Pods in the Component
                  has appropriate permissions to function. \n Note: This field is
                  currently non-functional and is reserved for future implementation.
                  \n This field is immutable."
                items:
                  description: PolicyRule holds information that describes a policy
                    rule, but does not contain information about who the rule applies
                    to or which namespace the rule applies to.
                  properties:
                    apiGroups:
                      description: APIGroups is the name of the APIGroup that contains
                        the resources.  If multiple API groups are specified, any
                        action requested against one of the enumerated resources in
                        any API group will be allowed. "" represents the core API
                        group and "*" represents all API groups.
                      items:
                        type: string
                      type: array
                    nonResourceURLs:
                      description: NonResourceURLs is a set of partial urls that a
                        user should have access to.  *s are allowed, but only as the
                        full, final step in the path Since non-resource URLs are not
                        namespaced, this field is only applicable for ClusterRoles
                        referenced from a ClusterRoleBinding. Rules can either apply
                        to API resources (such as "pods" or "secrets") or non-resource
                        URL paths (such as "/api"),  but not both.
                      items:
                        type: string
                      type: array
                    resourceNames:
                      description: ResourceNames is an optional white list of names
                        that the rule applies to.  An empty set means that everything
                        is allowed.
                      items:
                        type: string
                      type: array
                    resources:
                      description: Resources is a list of resources this rule applies
                        to. '*' represents all resources.
                      items:
                        type: string
                      type: array
                    verbs:
                      description: Verbs is a list of Verbs that apply to ALL the
                        ResourceKinds contained in this rule. '*' represents all verbs.
                      items:
                        type: string
                      type: array
                  required:
                  - verbs
                  type: object
                type: array
              provider:
                description: "Specifies the name of the Component provider, typically
                  the vendor or developer name. It identifies the entity responsible
                  for creating and maintaining the Component. \n When specifying the
                  provider name, consider the following guidelines: \n - Keep the
                  name concise and relevant to the Component. - Use a consistent naming
                  convention across Components from the same provider. - Avoid using
                  trademarked or copyrighted names without proper permission."
                maxLength: 32
                type: string
              replicasLimit:
                description: "Defines the upper limit of the number of replicas supported
                  by the Component. \n It defines the maximum number of replicas that
                  can be created for the Component. This field allows you to set a
                  limit on the scalability of the Component, preventing it from exceeding
                  a certain number of replicas. \n This field is immutable."
                properties:
                  maxReplicas:
                    description: The maximum limit of replicas.
                    format: int32
                    type: integer
                  minReplicas:
                    description: The minimum limit of replicas.
                    format: int32
                    type: integer
                required:
                - maxReplicas
                - minReplicas
                type: object
                x-kubernetes-validations:
                - message: the minimum and maximum limit of replicas should be in
                    the range of [0, 128]
                  rule: self.minReplicas >= 0 && self.maxReplicas <= 128
                - message: the minimum replicas limit should be no greater than the
                    maximum
                  rule: self.minReplicas <= self.maxReplicas
              roleArbitrator:
                default: External
                description: "This field has been deprecated since v0.9. This field
                  is maintained for backward compatibility and its use is discouraged.
                  Existing usage should be updated to the current preferred approach
                  to avoid compatibility issues in future releases. \n This field
                  is immutable."
                enum:
                - External
                - Lorry
                type: string
              roles:
                description: "Enumerate all possible roles assigned to each replica
                  of the Component, influencing its behavior. \n A replica can have
                  zero to multiple roles. KubeBlocks operator determines the roles
                  of each replica by invoking the `lifecycleActions.roleProbe` method.
                  This action returns a list of roles for each replica, and the returned
                  roles must be predefined in the `roles` field. \n The roles assigned
                  to a replica can influence various aspects of the Component's behavior,
                  such as: \n - Service selection: The Component's exposed Services
                  may target replicas based on their roles using `roleSelector`. -
                  Update order: The roles can determine the order in which replicas
                  are updated during a Component update. For instance, replicas with
                  a \"follower\" role can be updated first, while the replica with
                  the \"leader\" role is updated last. This helps minimize the number
                  of leader changes during the update process. \n This field is immutable."
                items:
                  description: ReplicaRole represents a role that can be assumed by
                    a component instance.
                  properties:
                    name:
                      description: "Defines the role's identifier. It is used to set
                        the \"apps.kubeblocks.io/role\" label value on the corresponding
                        object. \n This field is immutable once set."
                      maxLength: 32
                      pattern: ^.*[^\s]+.*$
                      type: string
                    serviceable:
                      default: false
                      description: "Indicates whether a replica assigned this role
                        is capable of providing services. \n This field is immutable
                        once set."
                      type: boolean
                    votable:
                      default: false
                      description: "Specifies whether a replica with this role has
                        voting rights. In distributed systems, this typically means
                        the replica can participate in consensus decisions, configuration
                        changes, or other processes that require a quorum. \n This
                        field is immutable once set."
                      type: boolean
                    writable:
                      default: false
                      description: "Determines if a replica in this role has the authority
                        to perform write operations. A writable replica can modify
                        data, handle update operations. \n This field is immutable
                        once set."
                      type: boolean
                  required:
                  - name
                  type: object
                type: array
              runtime:
                description: "Specifies the PodSpec template used in the Component.
                  It includes the following elements: \n - Init containers - Containers
                  - Image - Commands - Args - Envs - Mounts - Ports - Security context
                  - Probes - Lifecycle - Volumes \n This field is intended to define
                  static settings that remain consistent across all instantiated Components.
                  Dynamic settings such as CPU and memory resource limits, as well
                  as scheduling settings (affinity, toleration, priority), may vary
                  among different instantiated Components. They should be specified
                  in the `cluster.spec.componentSpecs` (ClusterComponentSpec). \n
                  Specific instances of a Component may override settings defined
                  here, such as using a different container image or modifying environment
                  variable values. These instance-specific overrides can be specified
                  in `cluster.spec.componentSpecs[*].instances`. \n This field is
                  immutable and cannot be updated once set."
                properties:
                  activeDeadlineSeconds:
                    description: Optional duration in seconds the pod may be active
                      on the node relative to StartTime before the system will actively
                      try to mark it failed and kill associated containers. Value
                      must be a positive integer.
                    format: int64
                    type: integer
                  affinity:
                    description: If specified, the pod's scheduling constraints
                    properties:
                      nodeAffinity:
                        description: Describes node affinity scheduling rules for
                          the pod.
                        properties:
                          preferredDuringSchedulingIgnoredDuringExecution:
                            description: The scheduler will prefer to schedule pods
                              to nodes that satisfy the affinity expressions specified
                              by this field, but it may choose a node that violates
                              one or more of the expressions. The node that is most
                              preferred is the one with the greatest sum of weights,
                              i.e. for each node that meets all of the scheduling
                              requirements (resource request, requiredDuringScheduling
                              affinity expressions, etc.), compute a sum by iterating
                              through the elements of this field and adding "weight"
                              to the sum if the node matches the corresponding matchExpressions;
                              the node(s) with the highest sum are the most preferred.
                            items:
                              description: An empty preferred scheduling term matches
                                all objects with implicit weight 0 (i.e. it's a no-op).
                                A null preferred scheduling term matches no objects
                                (i.e. is also a no-op).
                              properties:
                                preference:
                                  description: A node selector term, associated with
                                    the corresponding weight.
                                  properties:
                                    matchExpressions:
                                      description: A list of node selector requirements
                                        by node's labels.
                                      items:
                                        description: A node selector requirement is
                                          a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: The label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: Represents a key's relationship
                                              to a set of values. Valid operators
                                              are In, NotIn, Exists, DoesNotExist.
                                              Gt, and Lt.
                                            type: string
                                          values:
                                            description: An array of string values.
                                              If the operator is In or NotIn, the
                                              values array must be non-empty. If the
                                              operator is Exists or DoesNotExist,
                                              the values array must be empty. If the
                                              operator is Gt or Lt, the values array
                                              must have a single element, which will
                                              be interpreted as an integer. This array
                                              is replaced during a strategic merge
                                              patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchFields:
                                      description: A list of node selector requirements
                                        by node's fields.
                                      items:
                                        description: A node selector requirement is
                                          a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: The label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: Represents a key's relationship
                                              to a set of values. Valid operators
                                              are In, NotIn, Exists, DoesNotExist.
                                              Gt, and Lt.
                                            type: string
                                          values:
                                            description: An array of string values.
                                              If the operator is In or NotIn, the
                                              values array must be non-empty. If the
                                              operator is Exists or DoesNotExist,
                                              the values array must be empty. If the
                                              operator is Gt or Lt, the values array
                                              must have a single element, which will
                                              be interpreted as an integer. This array
                                              is replaced during a strategic merge
                                              patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                  type: object
                                  x-kubernetes-map-type: atomic
                                weight:
                                  description: Weight associated with matching the
                                    corresponding nodeSelectorTerm, in the range 1-100.
                                  format: int32
                                  type: integer
                              required:
                              - preference
                              - weight
                              type: object
                            type: array
                          requiredDuringSchedulingIgnoredDuringExecution:
                            description: If the affinity requirements specified by
                              this field are not met at scheduling time, the pod will
                              not be scheduled onto the node. If the affinity requirements
                              specified by this field cease to be met at some point
                              during pod execution (e.g. due to an update), the system
                              may or may not try to eventually evict the pod from
                              its node.
                            properties:
                              nodeSelectorTerms:
                                description: Required. A list of node selector terms.
                                  The terms are ORed.
                                items:
                                  description: A null or empty node selector term
                                    matches no objects. The requirements of them are
                                    ANDed. The TopologySelectorTerm type implements
                                    a subset of the NodeSelectorTerm.
                                  properties:
                                    matchExpressions:
                                      description: A list of node selector requirements
                                        by node's labels.
                                      items:
                                        description: A node selector requirement is
                                          a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: The label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: Represents a key's relationship
                                              to a set of values. Valid operators
                                              are In, NotIn, Exists, DoesNotExist.
                                              Gt, and Lt.
                                            type: string
                                          values:
                                            description: An array of string values.
                                              If the operator is In or NotIn, the
                                              values array must be non-empty. If the
                                              operator is Exists or DoesNotExist,
                                              the values array must be empty. If the
                                              operator is Gt or Lt, the values array
                                              must have a single element, which will
                                              be interpreted as an integer. This array
                                              is replaced during a strategic merge
                                              patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchFields:
                                      description: A list of node selector requirements
                                        by node's fields.
                                      items:
                                        description: A node selector requirement is
                                          a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: The label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: Represents a key's relationship
                                              to a set of values. Valid operators
                                              are In, NotIn, Exists, DoesNotExist.
                                              Gt, and Lt.
                                            type: string
                                          values:
                                            description: An array of string values.
                                              If the operator is In or NotIn, the
                                              values array must be non-empty. If the
                                              operator is Exists or DoesNotExist,
                                              the values array must be empty. If the
                                              operator is Gt or Lt, the values array
                                              must have a single element, which will
                                              be interpreted as an integer. This array
                                              is replaced during a strategic merge
                                              patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                  type: object
                                  x-kubernetes-map-type: atomic
                                type: array
                            required:
                            - nodeSelectorTerms
                            type: object
                            x-kubernetes-map-type: atomic
                        type: object
                      podAffinity:
                        description: Describes pod affinity scheduling rules (e.g.
                          co-locate this pod in the same node, zone, etc. as some
                          other pod(s)).
                        properties:
                          preferredDuringSchedulingIgnoredDuringExecution:
                            description: The scheduler will prefer to schedule pods
                              to nodes that satisfy the affinity expressions specified
                              by this field, but it may choose a node that violates
                              one or more of the expressions. The node that is most
                              preferred is the one with the greatest sum of weights,
                              i.e. for each node that meets all of the scheduling
                              requirements (resource request, requiredDuringScheduling
                              affinity expressions, etc.), compute a sum by iterating
                              through the elements of this field and adding "weight"
                              to the sum if the node has pods which matches the corresponding
                              podAffinityTerm; the node(s) with the highest sum are
                              the most preferred.
                            items:
                              description: The weights of all of the matched WeightedPodAffinityTerm
                                fields are added per-node to find the most preferred
                                node(s)
                              properties:
                                podAffinityTerm:
                                  description: Required. A pod affinity term, associated
                                    with the corresponding weight.
                                  properties:
                                    labelSelector:
                                      description: A label query over a set of resources,
                                        in this case pods.
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list
                                            of label selector requirements. The requirements
                                            are ANDed.
                                          items:
                                            description: A label selector requirement
                                              is a selector that contains values,
                                              a key, and an operator that relates
                                              the key and values.
                                            properties:
                                              key:
                                                description: key is the label key
                                                  that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a
                                                  key's relationship to a set of values.
                                                  Valid operators are In, NotIn, Exists
                                                  and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of
                                                  string values. If the operator is
                                                  In or NotIn, the values array must
                                                  be non-empty. If the operator is
                                                  Exists or DoesNotExist, the values
                                                  array must be empty. This array
                                                  is replaced during a strategic merge
                                                  patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - key
                                            - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value}
                                            pairs. A single {key,value} in the matchLabels
                                            map is equivalent to an element of matchExpressions,
                                            whose key field is "key", the operator
                                            is "In", and the values array contains
                                            only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    namespaceSelector:
                                      description: A label query over the set of namespaces
                                        that the term applies to. The term is applied
                                        to the union of the namespaces selected by
                                        this field and the ones listed in the namespaces
                                        field. null selector and null or empty namespaces
                                        list means "this pod's namespace". An empty
                                        selector ({}) matches all namespaces.
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list
                                            of label selector requirements. The requirements
                                            are ANDed.
                                          items:
                                            description: A label selector requirement
                                              is a selector that contains values,
                                              a key, and an operator that relates
                                              the key and values.
                                            properties:
                                              key:
                                                description: key is the label key
                                                  that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a
                                                  key's relationship to a set of values.
                                                  Valid operators are In, NotIn, Exists
                                                  and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of
                                                  string values. If the operator is
                                                  In or NotIn, the values array must
                                                  be non-empty. If the operator is
                                                  Exists or DoesNotExist, the values
                                                  array must be empty. This array
                                                  is replaced during a strategic merge
                                                  patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - key
                                            - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value}
                                            pairs. A single {key,value} in the matchLabels
                                            map is equivalent to an element of matchExpressions,
                                            whose key field is "key", the operator
                                            is "In", and the values array contains
                                            only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    namespaces:
                                      description: namespaces specifies a static list
                                        of namespace names that the term applies to.
                                        The term is applied to the union of the namespaces
                                        listed in this field and the ones selected
                                        by namespaceSelector. null or empty namespaces
                                        list and null namespaceSelector means "this
                                        pod's namespace".
                                      items:
                                        type: string
                                      type: array
                                    topologyKey:
                                      description: This pod should be co-located (affinity)
                                        or not co-located (anti-affinity) with the
                                        pods matching the labelSelector in the specified
                                        namespaces, where co-located is defined as
                                        running on a node whose value of the label
                                        with key topologyKey matches that of any node
                                        on which any of the selected pods is running.
                                        Empty topologyKey is not allowed.
                                      type: string
                                  required:
                                  - topologyKey
                                  type: object
                                weight:
                                  description: weight associated with matching the
                                    corresponding podAffinityTerm, in the range 1-100.
                                  format: int32
                                  type: integer
                              required:
                              - podAffinityTerm
                              - weight
                              type: object
                            type: array
                          requiredDuringSchedulingIgnoredDuringExecution:
                            description: If the affinity requirements specified by
                              this field are not met at scheduling time, the pod will
                              not be scheduled onto the node. If the affinity requirements
                              specified by this field cease to be met at some point
                              during pod execution (e.g. due to a pod label update),
                              the system may or may not try to eventually evict the
                              pod from its node. When there are multiple elements,
                              the lists of nodes corresponding to each podAffinityTerm
                              are intersected, i.e. all terms must be satisfied.
                            items:
                              description: Defines a set of pods (namely those matching
                                the labelSelector relative to the given namespace(s))
                                that this pod should be co-located (affinity) or not
                                co-located (anti-affinity) with, where co-located
                                is defined as running on a node whose value of the
                                label with key <topologyKey> matches that of any node
                                on which a pod of the set of pods is running
                              properties:
                                labelSelector:
                                  description: A label query over a set of resources,
                                    in this case pods.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: A label selector requirement
                                          is a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's
                                              relationship to a set of values. Valid
                                              operators are In, NotIn, Exists and
                                              DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string
                                              values. If the operator is In or NotIn,
                                              the values array must be non-empty.
                                              If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This
                                              array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: matchLabels is a map of {key,value}
                                        pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions,
                                        whose key field is "key", the operator is
                                        "In", and the values array contains only "value".
                                        The requirements are ANDed.
                                      type: object
                                  type: object
                                  x-kubernetes-map-type: atomic
                                namespaceSelector:
                                  description: A label query over the set of namespaces
                                    that the term applies to. The term is applied
                                    to the union of the namespaces selected by this
                                    field and the ones listed in the namespaces field.
                                    null selector and null or empty namespaces list
                                    means "this pod's namespace". An empty selector
                                    ({}) matches all namespaces.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: A label selector requirement
                                          is a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's
                                              relationship to a set of values. Valid
                                              operators are In, NotIn, Exists and
                                              DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string
                                              values. If the operator is In or NotIn,
                                              the values array must be non-empty.
                                              If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This
                                              array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: matchLabels is a map of {key,value}
                                        pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions,
                                        whose key field is "key", the operator is
                                        "In", and the values array contains only "value".
                                        The requirements are ANDed.
                                      type: object
                                  type: object
                                  x-kubernetes-map-type: atomic
                                namespaces:
                                  description: namespaces specifies a static list
                                    of namespace names that the term applies to. The
                                    term is applied to the union of the namespaces
                                    listed in this field and the ones selected by
                                    namespaceSelector. null or empty namespaces list
                                    and null namespaceSelector means "this pod's namespace".
                                  items:
                                    type: string
                                  type: array
                                topologyKey:
                                  description: This pod should be co-located (affinity)
                                    or not co-located (anti-affinity) with the pods
                                    matching the labelSelector in the specified namespaces,
                                    where co-located is defined as running on a node
                                    whose value of the label with key topologyKey
                                    matches that of any node on which any of the selected
                                    pods is running. Empty topologyKey is not allowed.
                                  type: string
                              required:
                              - topologyKey
                              type: object
                            type: array
                        type: object
                      podAntiAffinity:
                        description: Describes pod anti-affinity scheduling rules
                          (e.g. avoid putting this pod in the same node, zone, etc.
                          as some other pod(s)).
                        properties:
                          preferredDuringSchedulingIgnoredDuringExecution:
                            description: The scheduler will prefer to schedule pods
                              to nodes that satisfy the anti-affinity expressions
                              specified by this field, but it may choose a node that
                              violates one or more of the expressions. The node that
                              is most preferred is the one with the greatest sum of
                              weights, i.e. for each node that meets all of the scheduling
                              requirements (resource request, requiredDuringScheduling
                              anti-affinity expressions, etc.), compute a sum by iterating
                              through the elements of this field and adding "weight"
                              to the sum if the node has pods which matches the corresponding
                              podAffinityTerm; the node(s) with the highest sum are
                              the most preferred.
                            items:
                              description: The weights of all of the matched WeightedPodAffinityTerm
                                fields are added per-node to find the most preferred
                                node(s)
                              properties:
                                podAffinityTerm:
                                  description: Required. A pod affinity term, associated
                                    with the corresponding weight.
                                  properties:
                                    labelSelector:
                                      description: A label query over a set of resources,
                                        in this case pods.
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list
                                            of label selector requirements. The requirements
                                            are ANDed.
                                          items:
                                            description: A label selector requirement
                                              is a selector that contains values,
                                              a key, and an operator that relates
                                              the key and values.
                                            properties:
                                              key:
                                                description: key is the label key
                                                  that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a
                                                  key's relationship to a set of values.
                                                  Valid operators are In, NotIn, Exists
                                                  and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of
                                                  string values. If the operator is
                                                  In or NotIn, the values array must
                                                  be non-empty. If the operator is
                                                  Exists or DoesNotExist, the values
                                                  array must be empty. This array
                                                  is replaced during a strategic merge
                                                  patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - key
                                            - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value}
                                            pairs. A single {key,value} in the matchLabels
                                            map is equivalent to an element of matchExpressions,
                                            whose key field is "key", the operator
                                            is "In", and the values array contains
                                            only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    namespaceSelector:
                                      description: A label query over the set of namespaces
                                        that the term applies to. The term is applied
                                        to the union of the namespaces selected by
                                        this field and the ones listed in the namespaces
                                        field. null selector and null or empty namespaces
                                        list means "this pod's namespace". An empty
                                        selector ({}) matches all namespaces.
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list
                                            of label selector requirements. The requirements
                                            are ANDed.
                                          items:
                                            description: A label selector requirement
                                              is a selector that contains values,
                                              a key, and an operator that relates
                                              the key and values.
                                            properties:
                                              key:
                                                description: key is the label key
                                                  that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a
                                                  key's relationship to a set of values.
                                                  Valid operators are In, NotIn, Exists
                                                  and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of
                                                  string values. If the operator is
                                                  In or NotIn, the values array must
                                                  be non-empty. If the operator is
                                                  Exists or DoesNotExist, the values
                                                  array must be empty. This array
                                                  is replaced during a strategic merge
                                                  patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - key
                                            - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value}
                                            pairs. A single {key,value} in the matchLabels
                                            map is equivalent to an element of matchExpressions,
                                            whose key field is "key", the operator
                                            is "In", and the values array contains
                                            only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    namespaces:
                                      description: namespaces specifies a static list
                                        of namespace names that the term applies to.
                                        The term is applied to the union of the namespaces
                                        listed in this field and the ones selected
                                        by namespaceSelector. null or empty namespaces
                                        list and null namespaceSelector means "this
                                        pod's namespace".
                                      items:
                                        type: string
                                      type: array
                                    topologyKey:
                                      description: This pod should be co-located (affinity)
                                        or not co-located (anti-affinity) with the
                                        pods matching the labelSelector in the specified
                                        namespaces, where co-located is defined as
                                        running on a node whose value of the label
                                        with key topologyKey matches that of any node
                                        on which any of the selected pods is running.
                                        Empty topologyKey is not allowed.
                                      type: string
                                  required:
                                  - topologyKey
                                  type: object
                                weight:
                                  description: weight associated with matching the
                                    corresponding podAffinityTerm, in the range 1-100.
                                  format: int32
                                  type: integer
                              required:
                              - podAffinityTerm
                              - weight
                              type: object
                            type: array
                          requiredDuringSchedulingIgnoredDuringExecution:
                            description: If the anti-affinity requirements specified
                              by this field are not met at scheduling time, the pod
                              will not be scheduled onto the node. If the anti-affinity
                              requirements specified by this field cease to be met
                              at some point during pod execution (e.g. due to a pod
                              label update), the system may or may not try to eventually
                              evict the pod from its node. When there are multiple
                              elements, the lists of nodes corresponding to each podAffinityTerm
                              are intersected, i.e. all terms must be satisfied.
                            items:
                              description: Defines a set of pods (namely those matching
                                the labelSelector relative to the given namespace(s))
                                that this pod should be co-located (affinity) or not
                                co-located (anti-affinity) with, where co-located
                                is defined as running on a node whose value of the
                                label with key <topologyKey> matches that of any node
                                on which a pod of the set of pods is running
                              properties:
                                labelSelector:
                                  description: A label query over a set of resources,
                                    in this case pods.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: A label selector requirement
                                          is a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's
                                              relationship to a set of values. Valid
                                              operators are In, NotIn, Exists and
                                              DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string
                                              values. If the operator is In or NotIn,
                                              the values array must be non-empty.
                                              If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This
                                              array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: matchLabels is a map of {key,value}
                                        pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions,
                                        whose key field is "key", the operator is
                                        "In", and the values array contains only "value".
                                        The requirements are ANDed.
                                      type: object
                                  type: object
                                  x-kubernetes-map-type: atomic
                                namespaceSelector:
                                  description: A label query over the set of namespaces
                                    that the term applies to. The term is applied
                                    to the union of the namespaces selected by this
                                    field and the ones listed in the namespaces field.
                                    null selector and null or empty namespaces list
                                    means "this pod's namespace". An empty selector
                                    ({}) matches all namespaces.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: A label selector requirement
                                          is a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's
                                              relationship to a set of values. Valid
                                              operators are In, NotIn, Exists and
                                              DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string
                                              values. If the operator is In or NotIn,
                                              the values array must be non-empty.
                                              If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This
                                              array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: matchLabels is a map of {key,value}
                                        pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions,
                                        whose key field is "key", the operator is
                                        "In", and the values array contains only "value".
                                        The requirements are ANDed.
                                      type: object
                                  type: object
                                  x-kubernetes-map-type: atomic
                                namespaces:
                                  description: namespaces specifies a static list
                                    of namespace names that the term applies to. The
                                    term is applied to the union of the namespaces
                                    listed in this field and the ones selected by
                                    namespaceSelector. null or empty namespaces list
                                    and null namespaceSelector means "this pod's namespace".
                                  items:
                                    type: string
                                  type: array
                                topologyKey:
                                  description: This pod should be co-located (affinity)
                                    or not co-located (anti-affinity) with the pods
                                    matching the labelSelector in the specified namespaces,
                                    where co-located is defined as running on a node
                                    whose value of the label with key topologyKey
                                    matches that of any node on which any of the selected
                                    pods is running. Empty topologyKey is not allowed.
                                  type: string
                              required:
                              - topologyKey
                              type: object
                            type: array
                        type: object
                    type: object
                  automountServiceAccountToken:
                    description: AutomountServiceAccountToken indicates whether a
                      service account token should be automatically mounted.
                    type: boolean
                  containers:
                    description: List of containers belonging to the pod. Containers
                      cannot currently be added or removed. There must be at least
                      one container in a Pod. Cannot be updated.
                    items:
                      description: A single application container that you want to
                        run within a pod.
                      properties:
                        args:
                          description: 'Arguments to the entrypoint. The container
                            image''s CMD is used if this is not provided. Variable
                            references $(VAR_NAME) are expanded using the container''s
                            environment. If a variable cannot be resolved, the reference
                            in the input string will be unchanged. Double $$ are reduced
                            to a single $, which allows for escaping the $(VAR_NAME)
                            syntax: i.e. "$$(VAR_NAME)" will produce the string literal
                            "$(VAR_NAME)". Escaped references will never be expanded,
                            regardless of whether the variable exists or not. Cannot
                            be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                          items:
                            type: string
                          type: array
                        command:
                          description: 'Entrypoint array. Not executed within a shell.
                            The container image''s ENTRYPOINT is used if this is not
                            provided. Variable references $(VAR_NAME) are expanded
                            using the container''s environment. If a variable cannot
                            be resolved, the reference in the input string will be
                            unchanged. Double $$ are reduced to a single $, which
                            allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)"
                            will produce the string literal "$(VAR_NAME)". Escaped
                            references will never be expanded, regardless of whether
                            the variable exists or not. Cannot be updated. More info:
                            https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                          items:
                            type: string
                          type: array
                        env:
                          description: List of environment variables to set in the
                            container. Cannot be updated.
                          items:
                            description: EnvVar represents an environment variable
                              present in a Container.
                            properties:
                              name:
                                description: Name of the environment variable. Must
                                  be a C_IDENTIFIER.
                                type: string
                              value:
                                description: 'Variable references $(VAR_NAME) are
                                  expanded using the previously defined environment
                                  variables in the container and any service environment
                                  variables. If a variable cannot be resolved, the
                                  reference in the input string will be unchanged.
                                  Double $$ are reduced to a single $, which allows
                                  for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)"
                                  will produce the string literal "$(VAR_NAME)". Escaped
                                  references will never be expanded, regardless of
                                  whether the variable exists or not. Defaults to
                                  "".'
                                type: string
                              valueFrom:
                                description: Source for the environment variable's
                                  value. Cannot be used if value is not empty.
                                properties:
                                  configMapKeyRef:
                                    description: Selects a key of a ConfigMap.
                                    properties:
                                      key:
                                        description: The key to select.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                        type: string
                                      optional:
                                        description: Specify whether the ConfigMap
                                          or its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  fieldRef:
                                    description: 'Selects a field of the pod: supports
                                      metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`,
                                      `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                      spec.serviceAccountName, status.hostIP, status.podIP,
                                      status.podIPs.'
                                    properties:
                                      apiVersion:
                                        description: Version of the schema the FieldPath
                                          is written in terms of, defaults to "v1".
                                        type: string
                                      fieldPath:
                                        description: Path of the field to select in
                                          the specified API version.
                                        type: string
                                    required:
                                    - fieldPath
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  resourceFieldRef:
                                    description: 'Selects a resource of the container:
                                      only resources limits and requests (limits.cpu,
                                      limits.memory, limits.ephemeral-storage, requests.cpu,
                                      requests.memory and requests.ephemeral-storage)
                                      are currently supported.'
                                    properties:
                                      containerName:
                                        description: 'Container name: required for
                                          volumes, optional for env vars'
                                        type: string
                                      divisor:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        description: Specifies the output format of
                                          the exposed resources, defaults to "1"
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      resource:
                                        description: 'Required: resource to select'
                                        type: string
                                    required:
                                    - resource
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  secretKeyRef:
                                    description: Selects a key of a secret in the
                                      pod's namespace
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or
                                          its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                    x-kubernetes-map-type: atomic
                                type: object
                            required:
                            - name
                            type: object
                          type: array
                        envFrom:
                          description: List of sources to populate environment variables
                            in the container. The keys defined within a source must
                            be a C_IDENTIFIER. All invalid keys will be reported as
                            an event when the container is starting. When a key exists
                            in multiple sources, the value associated with the last
                            source will take precedence. Values defined by an Env
                            with a duplicate key will take precedence. Cannot be updated.
                          items:
                            description: EnvFromSource represents the source of a
                              set of ConfigMaps
                            properties:
                              configMapRef:
                                description: The ConfigMap to select from
                                properties:
                                  name:
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind,
                                      uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the ConfigMap must
                                      be defined
                                    type: boolean
                                type: object
                                x-kubernetes-map-type: atomic
                              prefix:
                                description: An optional identifier to prepend to
                                  each key in the ConfigMap. Must be a C_IDENTIFIER.
                                type: string
                              secretRef:
                                description: The Secret to select from
                                properties:
                                  name:
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind,
                                      uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the Secret must be
                                      defined
                                    type: boolean
                                type: object
                                x-kubernetes-map-type: atomic
                            type: object
                          type: array
                        image:
                          description: 'Container image name. More info: https://kubernetes.io/docs/concepts/containers/images
                            This field is optional to allow higher level config management
                            to default or override container images in workload controllers
                            like Deployments and StatefulSets.'
                          type: string
                        imagePullPolicy:
                          description: 'Image pull policy. One of Always, Never, IfNotPresent.
                            Defaults to Always if :latest tag is specified, or IfNotPresent
                            otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images'
                          type: string
                        lifecycle:
                          description: Actions that the management system should take
                            in response to container lifecycle events. Cannot be updated.
                          properties:
                            postStart:
                              description: 'PostStart is called immediately after
                                a container is created. If the handler fails, the
                                container is terminated and restarted according to
                                its restart policy. Other management of the container
                                blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
                              properties:
                                exec:
                                  description: Exec specifies the action to take.
                                  properties:
                                    command:
                                      description: Command is the command line to
                                        execute inside the container, the working
                                        directory for the command  is root ('/') in
                                        the container's filesystem. The command is
                                        simply exec'd, it is not run inside a shell,
                                        so traditional shell instructions ('|', etc)
                                        won't work. To use a shell, you need to explicitly
                                        call out to that shell. Exit status of 0 is
                                        treated as live/healthy and non-zero is unhealthy.
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                httpGet:
                                  description: HTTPGet specifies the http request
                                    to perform.
                                  properties:
                                    host:
                                      description: Host name to connect to, defaults
                                        to the pod IP. You probably want to set "Host"
                                        in httpHeaders instead.
                                      type: string
                                    httpHeaders:
                                      description: Custom headers to set in the request.
                                        HTTP allows repeated headers.
                                      items:
                                        description: HTTPHeader describes a custom
                                          header to be used in HTTP probes
                                        properties:
                                          name:
                                            description: The header field name. This
                                              will be canonicalized upon output, so
                                              case-variant names will be understood
                                              as the same header.
                                            type: string
                                          value:
                                            description: The header field value
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      type: array
                                    path:
                                      description: Path to access on the HTTP server.
                                      type: string
                                    port:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: Name or number of the port to access
                                        on the container. Number must be in the range
                                        1 to 65535. Name must be an IANA_SVC_NAME.
                                      x-kubernetes-int-or-string: true
                                    scheme:
                                      description: Scheme to use for connecting to
                                        the host. Defaults to HTTP.
                                      type: string
                                  required:
                                  - port
                                  type: object
                                tcpSocket:
                                  description: Deprecated. TCPSocket is NOT supported
                                    as a LifecycleHandler and kept for the backward
                                    compatibility. There are no validation of this
                                    field and lifecycle hooks will fail in runtime
                                    when tcp handler is specified.
                                  properties:
                                    host:
                                      description: 'Optional: Host name to connect
                                        to, defaults to the pod IP.'
                                      type: string
                                    port:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: Number or name of the port to access
                                        on the container. Number must be in the range
                                        1 to 65535. Name must be an IANA_SVC_NAME.
                                      x-kubernetes-int-or-string: true
                                  required:
                                  - port
                                  type: object
                              type: object
                            preStop:
                              description: 'PreStop is called immediately before a
                                container is terminated due to an API request or management
                                event such as liveness/startup probe failure, preemption,
                                resource contention, etc. The handler is not called
                                if the container crashes or exits. The Pod''s termination
                                grace period countdown begins before the PreStop hook
                                is executed. Regardless of the outcome of the handler,
                                the container will eventually terminate within the
                                Pod''s termination grace period (unless delayed by
                                finalizers). Other management of the container blocks
                                until the hook completes or until the termination
                                grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
                              properties:
                                exec:
                                  description: Exec specifies the action to take.
                                  properties:
                                    command:
                                      description: Command is the command line to
                                        execute inside the container, the working
                                        directory for the command  is root ('/') in
                                        the container's filesystem. The command is
                                        simply exec'd, it is not run inside a shell,
                                        so traditional shell instructions ('|', etc)
                                        won't work. To use a shell, you need to explicitly
                                        call out to that shell. Exit status of 0 is
                                        treated as live/healthy and non-zero is unhealthy.
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                httpGet:
                                  description: HTTPGet specifies the http request
                                    to perform.
                                  properties:
                                    host:
                                      description: Host name to connect to, defaults
                                        to the pod IP. You probably want to set "Host"
                                        in httpHeaders instead.
                                      type: string
                                    httpHeaders:
                                      description: Custom headers to set in the request.
                                        HTTP allows repeated headers.
                                      items:
                                        description: HTTPHeader describes a custom
                                          header to be used in HTTP probes
                                        properties:
                                          name:
                                            description: The header field name. This
                                              will be canonicalized upon output, so
                                              case-variant names will be understood
                                              as the same header.
                                            type: string
                                          value:
                                            description: The header field value
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      type: array
                                    path:
                                      description: Path to access on the HTTP server.
                                      type: string
                                    port:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: Name or number of the port to access
                                        on the container. Number must be in the range
                                        1 to 65535. Name must be an IANA_SVC_NAME.
                                      x-kubernetes-int-or-string: true
                                    scheme:
                                      description: Scheme to use for connecting to
                                        the host. Defaults to HTTP.
                                      type: string
                                  required:
                                  - port
                                  type: object
                                tcpSocket:
                                  description: Deprecated. TCPSocket is NOT supported
                                    as a LifecycleHandler and kept for the backward
                                    compatibility. There are no validation of this
                                    field and lifecycle hooks will fail in runtime
                                    when tcp handler is specified.
                                  properties:
                                    host:
                                      description: 'Optional: Host name to connect
                                        to, defaults to the pod IP.'
                                      type: string
                                    port:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: Number or name of the port to access
                                        on the container. Number must be in the range
                                        1 to 65535. Name must be an IANA_SVC_NAME.
                                      x-kubernetes-int-or-string: true
                                  required:
                                  - port
                                  type: object
                              type: object
                          type: object
                        livenessProbe:
                          description: 'Periodic probe of container liveness. Container
                            will be restarted if the probe fails. Cannot be updated.
                            More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                          properties:
                            exec:
                              description: Exec specifies the action to take.
                              properties:
                                command:
                                  description: Command is the command line to execute
                                    inside the container, the working directory for
                                    the command  is root ('/') in the container's
                                    filesystem. The command is simply exec'd, it is
                                    not run inside a shell, so traditional shell instructions
                                    ('|', etc) won't work. To use a shell, you need
                                    to explicitly call out to that shell. Exit status
                                    of 0 is treated as live/healthy and non-zero is
                                    unhealthy.
                                  items:
                                    type: string
                                  type: array
                              type: object
                            failureThreshold:
                              description: Minimum consecutive failures for the probe
                                to be considered failed after having succeeded. Defaults
                                to 3. Minimum value is 1.
                              format: int32
                              type: integer
                            grpc:
                              description: GRPC specifies an action involving a GRPC
                                port.
                              properties:
                                port:
                                  description: Port number of the gRPC service. Number
                                    must be in the range 1 to 65535.
                                  format: int32
                                  type: integer
                                service:
                                  description: "Service is the name of the service
                                    to place in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
                                    \n If this is not specified, the default behavior
                                    is defined by gRPC."
                                  type: string
                              required:
                              - port
                              type: object
                            httpGet:
                              description: HTTPGet specifies the http request to perform.
                              properties:
                                host:
                                  description: Host name to connect to, defaults to
                                    the pod IP. You probably want to set "Host" in
                                    httpHeaders instead.
                                  type: string
                                httpHeaders:
                                  description: Custom headers to set in the request.
                                    HTTP allows repeated headers.
                                  items:
                                    description: HTTPHeader describes a custom header
                                      to be used in HTTP probes
                                    properties:
                                      name:
                                        description: The header field name. This will
                                          be canonicalized upon output, so case-variant
                                          names will be understood as the same header.
                                        type: string
                                      value:
                                        description: The header field value
                                        type: string
                                    required:
                                    - name
                                    - value
                                    type: object
                                  type: array
                                path:
                                  description: Path to access on the HTTP server.
                                  type: string
                                port:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Name or number of the port to access
                                    on the container. Number must be in the range
                                    1 to 65535. Name must be an IANA_SVC_NAME.
                                  x-kubernetes-int-or-string: true
                                scheme:
                                  description: Scheme to use for connecting to the
                                    host. Defaults to HTTP.
                                  type: string
                              required:
                              - port
                              type: object
                            initialDelaySeconds:
                              description: 'Number of seconds after the container
                                has started before liveness probes are initiated.
                                More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                              format: int32
                              type: integer
                            periodSeconds:
                              description: How often (in seconds) to perform the probe.
                                Default to 10 seconds. Minimum value is 1.
                              format: int32
                              type: integer
                            successThreshold:
                              description: Minimum consecutive successes for the probe
                                to be considered successful after having failed. Defaults
                                to 1. Must be 1 for liveness and startup. Minimum
                                value is 1.
                              format: int32
                              type: integer
                            tcpSocket:
                              description: TCPSocket specifies an action involving
                                a TCP port.
                              properties:
                                host:
                                  description: 'Optional: Host name to connect to,
                                    defaults to the pod IP.'
                                  type: string
                                port:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Number or name of the port to access
                                    on the container. Number must be in the range
                                    1 to 65535. Name must be an IANA_SVC_NAME.
                                  x-kubernetes-int-or-string: true
                              required:
                              - port
                              type: object
                            terminationGracePeriodSeconds:
                              description: Optional duration in seconds the pod needs
                                to terminate gracefully upon probe failure. The grace
                                period is the duration in seconds after the processes
                                running in the pod are sent a termination signal and
                                the time when the processes are forcibly halted with
                                a kill signal. Set this value longer than the expected
                                cleanup time for your process. If this value is nil,
                                the pod's terminationGracePeriodSeconds will be used.
                                Otherwise, this value overrides the value provided
                                by the pod spec. Value must be non-negative integer.
                                The value zero indicates stop immediately via the
                                kill signal (no opportunity to shut down). This is
                                a beta field and requires enabling ProbeTerminationGracePeriod
                                feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds
                                is used if unset.
                              format: int64
                              type: integer
                            timeoutSeconds:
                              description: 'Number of seconds after which the probe
                                times out. Defaults to 1 second. Minimum value is
                                1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                              format: int32
                              type: integer
                          type: object
                        name:
                          description: Name of the container specified as a DNS_LABEL.
                            Each container in a pod must have a unique name (DNS_LABEL).
                            Cannot be updated.
                          type: string
                        ports:
                          description: List of ports to expose from the container.
                            Not specifying a port here DOES NOT prevent that port
                            from being exposed. Any port which is listening on the
                            default "0.0.0.0" address inside a container will be accessible
                            from the network. Modifying this array with strategic
                            merge patch may corrupt the data. For more information
                            See https://github.com/kubernetes/kubernetes/issues/108255.
                            Cannot be updated.
                          items:
                            description: ContainerPort represents a network port in
                              a single container.
                            properties:
                              containerPort:
                                description: Number of port to expose on the pod's
                                  IP address. This must be a valid port number, 0
                                  < x < 65536.
                                format: int32
                                type: integer
                              hostIP:
                                description: What host IP to bind the external port
                                  to.
                                type: string
                              hostPort:
                                description: Number of port to expose on the host.
                                  If specified, this must be a valid port number,
                                  0 < x < 65536. If HostNetwork is specified, this
                                  must match ContainerPort. Most containers do not
                                  need this.
                                format: int32
                                type: integer
                              name:
                                description: If specified, this must be an IANA_SVC_NAME
                                  and unique within the pod. Each named port in a
                                  pod must have a unique name. Name for the port that
                                  can be referred to by services.
                                type: string
                              protocol:
                                default: TCP
                                description: Protocol for port. Must be UDP, TCP,
                                  or SCTP. Defaults to "TCP".
                                type: string
                            required:
                            - containerPort
                            type: object
                          type: array
                          x-kubernetes-list-map-keys:
                          - containerPort
                          - protocol
                          x-kubernetes-list-type: map
                        readinessProbe:
                          description: 'Periodic probe of container service readiness.
                            Container will be removed from service endpoints if the
                            probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                          properties:
                            exec:
                              description: Exec specifies the action to take.
                              properties:
                                command:
                                  description: Command is the command line to execute
                                    inside the container, the working directory for
                                    the command  is root ('/') in the container's
                                    filesystem. The command is simply exec'd, it is
                                    not run inside a shell, so traditional shell instructions
                                    ('|', etc) won't work. To use a shell, you need
                                    to explicitly call out to that shell. Exit status
                                    of 0 is treated as live/healthy and non-zero is
                                    unhealthy.
                                  items:
                                    type: string
                                  type: array
                              type: object
                            failureThreshold:
                              description: Minimum consecutive failures for the probe
                                to be considered failed after having succeeded. Defaults
                                to 3. Minimum value is 1.
                              format: int32
                              type: integer
                            grpc:
                              description: GRPC specifies an action involving a GRPC
                                port.
                              properties:
                                port:
                                  description: Port number of the gRPC service. Number
                                    must be in the range 1 to 65535.
                                  format: int32
                                  type: integer
                                service:
                                  description: "Service is the name of the service
                                    to place in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
                                    \n If this is not specified, the default behavior
                                    is defined by gRPC."
                                  type: string
                              required:
                              - port
                              type: object
                            httpGet:
                              description: HTTPGet specifies the http request to perform.
                              properties:
                                host:
                                  description: Host name to connect to, defaults to
                                    the pod IP. You probably want to set "Host" in
                                    httpHeaders instead.
                                  type: string
                                httpHeaders:
                                  description: Custom headers to set in the request.
                                    HTTP allows repeated headers.
                                  items:
                                    description: HTTPHeader describes a custom header
                                      to be used in HTTP probes
                                    properties:
                                      name:
                                        description: The header field name. This will
                                          be canonicalized upon output, so case-variant
                                          names will be understood as the same header.
                                        type: string
                                      value:
                                        description: The header field value
                                        type: string
                                    required:
                                    - name
                                    - value
                                    type: object
                                  type: array
                                path:
                                  description: Path to access on the HTTP server.
                                  type: string
                                port:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Name or number of the port to access
                                    on the container. Number must be in the range
                                    1 to 65535. Name must be an IANA_SVC_NAME.
                                  x-kubernetes-int-or-string: true
                                scheme:
                                  description: Scheme to use for connecting to the
                                    host. Defaults to HTTP.
                                  type: string
                              required:
                              - port
                              type: object
                            initialDelaySeconds:
                              description: 'Number of seconds after the container
                                has started before liveness probes are initiated.
                                More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                              format: int32
                              type: integer
                            periodSeconds:
                              description: How often (in seconds) to perform the probe.
                                Default to 10 seconds. Minimum value is 1.
                              format: int32
                              type: integer
                            successThreshold:
                              description: Minimum consecutive successes for the probe
                                to be considered successful after having failed. Defaults
                                to 1. Must be 1 for liveness and startup. Minimum
                                value is 1.
                              format: int32
                              type: integer
                            tcpSocket:
                              description: TCPSocket specifies an action involving
                                a TCP port.
                              properties:
                                host:
                                  description: 'Optional: Host name to connect to,
                                    defaults to the pod IP.'
                                  type: string
                                port:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Number or name of the port to access
                                    on the container. Number must be in the range
                                    1 to 65535. Name must be an IANA_SVC_NAME.
                                  x-kubernetes-int-or-string: true
                              required:
                              - port
                              type: object
                            terminationGracePeriodSeconds:
                              description: Optional duration in seconds the pod needs
                                to terminate gracefully upon probe failure. The grace
                                period is the duration in seconds after the processes
                                running in the pod are sent a termination signal and
                                the time when the processes are forcibly halted with
                                a kill signal. Set this value longer than the expected
                                cleanup time for your process. If this value is nil,
                                the pod's terminationGracePeriodSeconds will be used.
                                Otherwise, this value overrides the value provided
                                by the pod spec. Value must be non-negative integer.
                                The value zero indicates stop immediately via the
                                kill signal (no opportunity to shut down). This is
                                a beta field and requires enabling ProbeTerminationGracePeriod
                                feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds
                                is used if unset.
                              format: int64
                              type: integer
                            timeoutSeconds:
                              description: 'Number of seconds after which the probe
                                times out. Defaults to 1 second. Minimum value is
                                1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                              format: int32
                              type: integer
                          type: object
                        resizePolicy:
                          description: Resources resize policy for the container.
                          items:
                            description: ContainerResizePolicy represents resource
                              resize policy for the container.
                            properties:
                              resourceName:
                                description: 'Name of the resource to which this resource
                                  resize policy applies. Supported values: cpu, memory.'
                                type: string
                              restartPolicy:
                                description: Restart policy to apply when specified
                                  resource is resized. If not specified, it defaults
                                  to NotRequired.
                                type: string
                            required:
                            - resourceName
                            - restartPolicy
                            type: object
                          type: array
                          x-kubernetes-list-type: atomic
                        resources:
                          description: 'Compute Resources required by this container.
                            Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                          properties:
                            claims:
                              description: "Claims lists the names of resources, defined
                                in spec.resourceClaims, that are used by this container.
                                \n This is an alpha field and requires enabling the
                                DynamicResourceAllocation feature gate. \n This field
                                is immutable. It can only be set for containers."
                              items:
                                description: ResourceClaim references one entry in
                                  PodSpec.ResourceClaims.
                                properties:
                                  name:
                                    description: Name must match the name of one entry
                                      in pod.spec.resourceClaims of the Pod where
                                      this field is used. It makes that resource available
                                      inside a container.
                                    type: string
                                required:
                                - name
                                type: object
                              type: array
                              x-kubernetes-list-map-keys:
                              - name
                              x-kubernetes-list-type: map
                            limits:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: 'Limits describes the maximum amount of
                                compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                              type: object
                            requests:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: 'Requests describes the minimum amount
                                of compute resources required. If Requests is omitted
                                for a container, it defaults to Limits if that is
                                explicitly specified, otherwise to an implementation-defined
                                value. Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                              type: object
                          type: object
                        restartPolicy:
                          description: 'RestartPolicy defines the restart behavior
                            of individual containers in a pod. This field may only
                            be set for init containers, and the only allowed value
                            is "Always". For non-init containers or when this field
                            is not specified, the restart behavior is defined by the
                            Pod''s restart policy and the container type. Setting
                            the RestartPolicy as "Always" for the init container will
                            have the following effect: this init container will be
                            continually restarted on exit until all regular containers
                            have terminated. Once all regular containers have completed,
                            all init containers with restartPolicy "Always" will be
                            shut down. This lifecycle differs from normal init containers
                            and is often referred to as a "sidecar" container. Although
                            this init container still starts in the init container
                            sequence, it does not wait for the container to complete
                            before proceeding to the next init container. Instead,
                            the next init container starts immediately after this
                            init container is started, or after any startupProbe has
                            successfully completed.'
                          type: string
                        securityContext:
                          description: 'SecurityContext defines the security options
                            the container should be run with. If set, the fields of
                            SecurityContext override the equivalent fields of PodSecurityContext.
                            More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/'
                          properties:
                            allowPrivilegeEscalation:
                              description: 'AllowPrivilegeEscalation controls whether
                                a process can gain more privileges than its parent
                                process. This bool directly controls if the no_new_privs
                                flag will be set on the container process. AllowPrivilegeEscalation
                                is true always when the container is: 1) run as Privileged
                                2) has CAP_SYS_ADMIN Note that this field cannot be
                                set when spec.os.name is windows.'
                              type: boolean
                            capabilities:
                              description: The capabilities to add/drop when running
                                containers. Defaults to the default set of capabilities
                                granted by the container runtime. Note that this field
                                cannot be set when spec.os.name is windows.
                              properties:
                                add:
                                  description: Added capabilities
                                  items:
                                    description: Capability represent POSIX capabilities
                                      type
                                    type: string
                                  type: array
                                drop:
                                  description: Removed capabilities
                                  items:
                                    description: Capability represent POSIX capabilities
                                      type
                                    type: string
                                  type: array
                              type: object
                            privileged:
                              description: Run container in privileged mode. Processes
                                in privileged containers are essentially equivalent
                                to root on the host. Defaults to false. Note that
                                this field cannot be set when spec.os.name is windows.
                              type: boolean
                            procMount:
                              description: procMount denotes the type of proc mount
                                to use for the containers. The default is DefaultProcMount
                                which uses the container runtime defaults for readonly
                                paths and masked paths. This requires the ProcMountType
                                feature flag to be enabled. Note that this field cannot
                                be set when spec.os.name is windows.
                              type: string
                            readOnlyRootFilesystem:
                              description: Whether this container has a read-only
                                root filesystem. Default is false. Note that this
                                field cannot be set when spec.os.name is windows.
                              type: boolean
                            runAsGroup:
                              description: The GID to run the entrypoint of the container
                                process. Uses runtime default if unset. May also be
                                set in PodSecurityContext.  If set in both SecurityContext
                                and PodSecurityContext, the value specified in SecurityContext
                                takes precedence. Note that this field cannot be set
                                when spec.os.name is windows.
                              format: int64
                              type: integer
                            runAsNonRoot:
                              description: Indicates that the container must run as
                                a non-root user. If true, the Kubelet will validate
                                the image at runtime to ensure that it does not run
                                as UID 0 (root) and fail to start the container if
                                it does. If unset or false, no such validation will
                                be performed. May also be set in PodSecurityContext.  If
                                set in both SecurityContext and PodSecurityContext,
                                the value specified in SecurityContext takes precedence.
                              type: boolean
                            runAsUser:
                              description: The UID to run the entrypoint of the container
                                process. Defaults to user specified in image metadata
                                if unspecified. May also be set in PodSecurityContext.  If
                                set in both SecurityContext and PodSecurityContext,
                                the value specified in SecurityContext takes precedence.
                                Note that this field cannot be set when spec.os.name
                                is windows.
                              format: int64
                              type: integer
                            seLinuxOptions:
                              description: The SELinux context to be applied to the
                                container. If unspecified, the container runtime will
                                allocate a random SELinux context for each container.  May
                                also be set in PodSecurityContext.  If set in both
                                SecurityContext and PodSecurityContext, the value
                                specified in SecurityContext takes precedence. Note
                                that this field cannot be set when spec.os.name is
                                windows.
                              properties:
                                level:
                                  description: Level is SELinux level label that applies
                                    to the container.
                                  type: string
                                role:
                                  description: Role is a SELinux role label that applies
                                    to the container.
                                  type: string
                                type:
                                  description: Type is a SELinux type label that applies
                                    to the container.
                                  type: string
                                user:
                                  description: User is a SELinux user label that applies
                                    to the container.
                                  type: string
                              type: object
                            seccompProfile:
                              description: The seccomp options to use by this container.
                                If seccomp options are provided at both the pod &
                                container level, the container options override the
                                pod options. Note that this field cannot be set when
                                spec.os.name is windows.
                              properties:
                                localhostProfile:
                                  description: localhostProfile indicates a profile
                                    defined in a file on the node should be used.
                                    The profile must be preconfigured on the node
                                    to work. Must be a descending path, relative to
                                    the kubelet's configured seccomp profile location.
                                    Must be set if type is "Localhost". Must NOT be
                                    set for any other type.
                                  type: string
                                type:
                                  description: "type indicates which kind of seccomp
                                    profile will be applied. Valid options are: \n
                                    Localhost - a profile defined in a file on the
                                    node should be used. RuntimeDefault - the container
                                    runtime default profile should be used. Unconfined
                                    - no profile should be applied."
                                  type: string
                              required:
                              - type
                              type: object
                            windowsOptions:
                              description: The Windows specific settings applied to
                                all containers. If unspecified, the options from the
                                PodSecurityContext will be used. If set in both SecurityContext
                                and PodSecurityContext, the value specified in SecurityContext
                                takes precedence. Note that this field cannot be set
                                when spec.os.name is linux.
                              properties:
                                gmsaCredentialSpec:
                                  description: GMSACredentialSpec is where the GMSA
                                    admission webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                                    inlines the contents of the GMSA credential spec
                                    named by the GMSACredentialSpecName field.
                                  type: string
                                gmsaCredentialSpecName:
                                  description: GMSACredentialSpecName is the name
                                    of the GMSA credential spec to use.
                                  type: string
                                hostProcess:
                                  description: HostProcess determines if a container
                                    should be run as a 'Host Process' container. All
                                    of a Pod's containers must have the same effective
                                    HostProcess value (it is not allowed to have a
                                    mix of HostProcess containers and non-HostProcess
                                    containers). In addition, if HostProcess is true
                                    then HostNetwork must also be set to true.
                                  type: boolean
                                runAsUserName:
                                  description: The UserName in Windows to run the
                                    entrypoint of the container process. Defaults
                                    to the user specified in image metadata if unspecified.
                                    May also be set in PodSecurityContext. If set
                                    in both SecurityContext and PodSecurityContext,
                                    the value specified in SecurityContext takes precedence.
                                  type: string
                              type: object
                          type: object
                        startupProbe:
                          description: 'StartupProbe indicates that the Pod has successfully
                            initialized. If specified, no other probes are executed
                            until this completes successfully. If this probe fails,
                            the Pod will be restarted, just as if the livenessProbe
                            failed. This can be used to provide different probe parameters
                            at the beginning of a Pod''s lifecycle, when it might
                            take a long time to load data or warm a cache, than during
                            steady-state operation. This cannot be updated. More info:
                            https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                          properties:
                            exec:
                              description: Exec specifies the action to take.
                              properties:
                                command:
                                  description: Command is the command line to execute
                                    inside the container, the working directory for
                                    the command  is root ('/') in the container's
                                    filesystem. The command is simply exec'd, it is
                                    not run inside a shell, so traditional shell instructions
                                    ('|', etc) won't work. To use a shell, you need
                                    to explicitly call out to that shell. Exit status
                                    of 0 is treated as live/healthy and non-zero is
                                    unhealthy.
                                  items:
                                    type: string
                                  type: array
                              type: object
                            failureThreshold:
                              description: Minimum consecutive failures for the probe
                                to be considered failed after having succeeded. Defaults
                                to 3. Minimum value is 1.
                              format: int32
                              type: integer
                            grpc:
                              description: GRPC specifies an action involving a GRPC
                                port.
                              properties:
                                port:
                                  description: Port number of the gRPC service. Number
                                    must be in the range 1 to 65535.
                                  format: int32
                                  type: integer
                                service:
                                  description: "Service is the name of the service
                                    to place in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
                                    \n If this is not specified, the default behavior
                                    is defined by gRPC."
                                  type: string
                              required:
                              - port
                              type: object
                            httpGet:
                              description: HTTPGet specifies the http request to perform.
                              properties:
                                host:
                                  description: Host name to connect to, defaults to
                                    the pod IP. You probably want to set "Host" in
                                    httpHeaders instead.
                                  type: string
                                httpHeaders:
                                  description: Custom headers to set in the request.
                                    HTTP allows repeated headers.
                                  items:
                                    description: HTTPHeader describes a custom header
                                      to be used in HTTP probes
                                    properties:
                                      name:
                                        description: The header field name. This will
                                          be canonicalized upon output, so case-variant
                                          names will be understood as the same header.
                                        type: string
                                      value:
                                        description: The header field value
                                        type: string
                                    required:
                                    - name
                                    - value
                                    type: object
                                  type: array
                                path:
                                  description: Path to access on the HTTP server.
                                  type: string
                                port:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Name or number of the port to access
                                    on the container. Number must be in the range
                                    1 to 65535. Name must be an IANA_SVC_NAME.
                                  x-kubernetes-int-or-string: true
                                scheme:
                                  description: Scheme to use for connecting to the
                                    host. Defaults to HTTP.
                                  type: string
                              required:
                              - port
                              type: object
                            initialDelaySeconds:
                              description: 'Number of seconds after the container
                                has started before liveness probes are initiated.
                                More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                              format: int32
                              type: integer
                            periodSeconds:
                              description: How often (in seconds) to perform the probe.
                                Default to 10 seconds. Minimum value is 1.
                              format: int32
                              type: integer
                            successThreshold:
                              description: Minimum consecutive successes for the probe
                                to be considered successful after having failed. Defaults
                                to 1. Must be 1 for liveness and startup. Minimum
                                value is 1.
                              format: int32
                              type: integer
                            tcpSocket:
                              description: TCPSocket specifies an action involving
                                a TCP port.
                              properties:
                                host:
                                  description: 'Optional: Host name to connect to,
                                    defaults to the pod IP.'
                                  type: string
                                port:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Number or name of the port to access
                                    on the container. Number must be in the range
                                    1 to 65535. Name must be an IANA_SVC_NAME.
                                  x-kubernetes-int-or-string: true
                              required:
                              - port
                              type: object
                            terminationGracePeriodSeconds:
                              description: Optional duration in seconds the pod needs
                                to terminate gracefully upon probe failure. The grace
                                period is the duration in seconds after the processes
                                running in the pod are sent a termination signal and
                                the time when the processes are forcibly halted with
                                a kill signal. Set this value longer than the expected
                                cleanup time for your process. If this value is nil,
                                the pod's terminationGracePeriodSeconds will be used.
                                Otherwise, this value overrides the value provided
                                by the pod spec. Value must be non-negative integer.
                                The value zero indicates stop immediately via the
                                kill signal (no opportunity to shut down). This is
                                a beta field and requires enabling ProbeTerminationGracePeriod
                                feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds
                                is used if unset.
                              format: int64
                              type: integer
                            timeoutSeconds:
                              description: 'Number of seconds after which the probe
                                times out. Defaults to 1 second. Minimum value is
                                1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                              format: int32
                              type: integer
                          type: object
                        stdin:
                          description: Whether this container should allocate a buffer
                            for stdin in the container runtime. If this is not set,
                            reads from stdin in the container will always result in
                            EOF. Default is false.
                          type: boolean
                        stdinOnce:
                          description: Whether the container runtime should close
                            the stdin channel after it has been opened by a single
                            attach. When stdin is true the stdin stream will remain
                            open across multiple attach sessions. If stdinOnce is
                            set to true, stdin is opened on container start, is empty
                            until the first client attaches to stdin, and then remains
                            open and accepts data until the client disconnects, at
                            which time stdin is closed and remains closed until the
                            container is restarted. If this flag is false, a container
                            processes that reads from stdin will never receive an
                            EOF. Default is false
                          type: boolean
                        terminationMessagePath:
                          description: 'Optional: Path at which the file to which
                            the container''s termination message will be written is
                            mounted into the container''s filesystem. Message written
                            is intended to be brief final status, such as an assertion
                            failure message. Will be truncated by the node if greater
                            than 4096 bytes. The total message length across all containers
                            will be limited to 12kb. Defaults to /dev/termination-log.
                            Cannot be updated.'
                          type: string
                        terminationMessagePolicy:
                          description: Indicate how the termination message should
                            be populated. File will use the contents of terminationMessagePath
                            to populate the container status message on both success
                            and failure. FallbackToLogsOnError will use the last chunk
                            of container log output if the termination message file
                            is empty and the container exited with an error. The log
                            output is limited to 2048 bytes or 80 lines, whichever
                            is smaller. Defaults to File. Cannot be updated.
                          type: string
                        tty:
                          description: Whether this container should allocate a TTY
                            for itself, also requires 'stdin' to be true. Default
                            is false.
                          type: boolean
                        volumeDevices:
                          description: volumeDevices is the list of block devices
                            to be used by the container.
                          items:
                            description: volumeDevice describes a mapping of a raw
                              block device within a container.
                            properties:
                              devicePath:
                                description: devicePath is the path inside of the
                                  container that the device will be mapped to.
                                type: string
                              name:
                                description: name must match the name of a persistentVolumeClaim
                                  in the pod
                                type: string
                            required:
                            - devicePath
                            - name
                            type: object
                          type: array
                        volumeMounts:
                          description: Pod volumes to mount into the container's filesystem.
                            Cannot be updated.
                          items:
                            description: VolumeMount describes a mounting of a Volume
                              within a container.
                            properties:
                              mountPath:
                                description: Path within the container at which the
                                  volume should be mounted.  Must not contain ':'.
                                type: string
                              mountPropagation:
                                description: mountPropagation determines how mounts
                                  are propagated from the host to container and the
                                  other way around. When not set, MountPropagationNone
                                  is used. This field is beta in 1.10.
                                type: string
                              name:
                                description: This must match the Name of a Volume.
                                type: string
                              readOnly:
                                description: Mounted read-only if true, read-write
                                  otherwise (false or unspecified). Defaults to false.
                                type: boolean
                              subPath:
                                description: Path within the volume from which the
                                  container's volume should be mounted. Defaults to
                                  "" (volume's root).
                                type: string
                              subPathExpr:
                                description: Expanded path within the volume from
                                  which the container's volume should be mounted.
                                  Behaves similarly to SubPath but environment variable
                                  references $(VAR_NAME) are expanded using the container's
                                  environment. Defaults to "" (volume's root). SubPathExpr
                                  and SubPath are mutually exclusive.
                                type: string
                            required:
                            - mountPath
                            - name
                            type: object
                          type: array
                        workingDir:
                          description: Container's working directory. If not specified,
                            the container runtime's default will be used, which might
                            be configured in the container image. Cannot be updated.
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                  dnsConfig:
                    description: Specifies the DNS parameters of a pod. Parameters
                      specified here will be merged to the generated DNS configuration
                      based on DNSPolicy.
                    properties:
                      nameservers:
                        description: A list of DNS name server IP addresses. This
                          will be appended to the base nameservers generated from
                          DNSPolicy. Duplicated nameservers will be removed.
                        items:
                          type: string
                        type: array
                      options:
                        description: A list of DNS resolver options. This will be
                          merged with the base options generated from DNSPolicy. Duplicated
                          entries will be removed. Resolution options given in Options
                          will override those that appear in the base DNSPolicy.
                        items:
                          description: PodDNSConfigOption defines DNS resolver options
                            of a pod.
                          properties:
                            name:
                              description: Required.
                              type: string
                            value:
                              type: string
                          type: object
                        type: array
                      searches:
                        description: A list of DNS search domains for host-name lookup.
                          This will be appended to the base search paths generated
                          from DNSPolicy. Duplicated search paths will be removed.
                        items:
                          type: string
                        type: array
                    type: object
                  dnsPolicy:
                    description: Set DNS policy for the pod. Defaults to "ClusterFirst".
                      Valid values are 'ClusterFirstWithHostNet', 'ClusterFirst',
                      'Default' or 'None'. DNS parameters given in DNSConfig will
                      be merged with the policy selected with DNSPolicy. To have DNS
                      options set along with hostNetwork, you have to specify DNS
                      policy explicitly to 'ClusterFirstWithHostNet'.
                    type: string
                  enableServiceLinks:
                    description: 'EnableServiceLinks indicates whether information
                      about services should be injected into pod''s environment variables,
                      matching the syntax of Docker links. Optional: Defaults to true.'
                    type: boolean
                  ephemeralContainers:
                    description: List of ephemeral containers run in this pod. Ephemeral
                      containers may be run in an existing pod to perform user-initiated
                      actions such as debugging. This list cannot be specified when
                      creating a pod, and it cannot be modified by updating the pod
                      spec. In order to add an ephemeral container to an existing
                      pod, use the pod's ephemeralcontainers subresource.
                    items:
                      description: "An EphemeralContainer is a temporary container
                        that you may add to an existing Pod for user-initiated activities
                        such as debugging. Ephemeral containers have no resource or
                        scheduling guarantees, and they will not be restarted when
                        they exit or when a Pod is removed or restarted. The kubelet
                        may evict a Pod if an ephemeral container causes the Pod to
                        exceed its resource allocation. \n To add an ephemeral container,
                        use the ephemeralcontainers subresource of an existing Pod.
                        Ephemeral containers may not be removed or restarted."
                      properties:
                        args:
                          description: 'Arguments to the entrypoint. The image''s
                            CMD is used if this is not provided. Variable references
                            $(VAR_NAME) are expanded using the container''s environment.
                            If a variable cannot be resolved, the reference in the
                            input string will be unchanged. Double $$ are reduced
                            to a single $, which allows for escaping the $(VAR_NAME)
                            syntax: i.e. "$$(VAR_NAME)" will produce the string literal
                            "$(VAR_NAME)". Escaped references will never be expanded,
                            regardless of whether the variable exists or not. Cannot
                            be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                          items:
                            type: string
                          type: array
                        command:
                          description: 'Entrypoint array. Not executed within a shell.
                            The image''s ENTRYPOINT is used if this is not provided.
                            Variable references $(VAR_NAME) are expanded using the
                            container''s environment. If a variable cannot be resolved,
                            the reference in the input string will be unchanged. Double
                            $$ are reduced to a single $, which allows for escaping
                            the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce
                            the string literal "$(VAR_NAME)". Escaped references will
                            never be expanded, regardless of whether the variable
                            exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                          items:
                            type: string
                          type: array
                        env:
                          description: List of environment variables to set in the
                            container. Cannot be updated.
                          items:
                            description: EnvVar represents an environment variable
                              present in a Container.
                            properties:
                              name:
                                description: Name of the environment variable. Must
                                  be a C_IDENTIFIER.
                                type: string
                              value:
                                description: 'Variable references $(VAR_NAME) are
                                  expanded using the previously defined environment
                                  variables in the container and any service environment
                                  variables. If a variable cannot be resolved, the
                                  reference in the input string will be unchanged.
                                  Double $$ are reduced to a single $, which allows
                                  for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)"
                                  will produce the string literal "$(VAR_NAME)". Escaped
                                  references will never be expanded, regardless of
                                  whether the variable exists or not. Defaults to
                                  "".'
                                type: string
                              valueFrom:
                                description: Source for the environment variable's
                                  value. Cannot be used if value is not empty.
                                properties:
                                  configMapKeyRef:
                                    description: Selects a key of a ConfigMap.
                                    properties:
                                      key:
                                        description: The key to select.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                        type: string
                                      optional:
                                        description: Specify whether the ConfigMap
                                          or its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  fieldRef:
                                    description: 'Selects a field of the pod: supports
                                      metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`,
                                      `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                      spec.serviceAccountName, status.hostIP, status.podIP,
                                      status.podIPs.'
                                    properties:
                                      apiVersion:
                                        description: Version of the schema the FieldPath
                                          is written in terms of, defaults to "v1".
                                        type: string
                                      fieldPath:
                                        description: Path of the field to select in
                                          the specified API version.
                                        type: string
                                    required:
                                    - fieldPath
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  resourceFieldRef:
                                    description: 'Selects a resource of the container:
                                      only resources limits and requests (limits.cpu,
                                      limits.memory, limits.ephemeral-storage, requests.cpu,
                                      requests.memory and requests.ephemeral-storage)
                                      are currently supported.'
                                    properties:
                                      containerName:
                                        description: 'Container name: required for
                                          volumes, optional for env vars'
                                        type: string
                                      divisor:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        description: Specifies the output format of
                                          the exposed resources, defaults to "1"
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      resource:
                                        description: 'Required: resource to select'
                                        type: string
                                    required:
                                    - resource
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  secretKeyRef:
                                    description: Selects a key of a secret in the
                                      pod's namespace
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or
                                          its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                    x-kubernetes-map-type: atomic
                                type: object
                            required:
                            - name
                            type: object
                          type: array
                        envFrom:
                          description: List of sources to populate environment variables
                            in the container. The keys defined within a source must
                            be a C_IDENTIFIER. All invalid keys will be reported as
                            an event when the container is starting. When a key exists
                            in multiple sources, the value associated with the last
                            source will take precedence. Values defined by an Env
                            with a duplicate key will take precedence. Cannot be updated.
                          items:
                            description: EnvFromSource represents the source of a
                              set of ConfigMaps
                            properties:
                              configMapRef:
                                description: The ConfigMap to select from
                                properties:
                                  name:
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind,
                                      uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the ConfigMap must
                                      be defined
                                    type: boolean
                                type: object
                                x-kubernetes-map-type: atomic
                              prefix:
                                description: An optional identifier to prepend to
                                  each key in the ConfigMap. Must be a C_IDENTIFIER.
                                type: string
                              secretRef:
                                description: The Secret to select from
                                properties:
                                  name:
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind,
                                      uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the Secret must be
                                      defined
                                    type: boolean
                                type: object
                                x-kubernetes-map-type: atomic
                            type: object
                          type: array
                        image:
                          description: 'Container image name. More info: https://kubernetes.io/docs/concepts/containers/images'
                          type: string
                        imagePullPolicy:
                          description: 'Image pull policy. One of Always, Never, IfNotPresent.
                            Defaults to Always if :latest tag is specified, or IfNotPresent
                            otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images'
                          type: string
                        lifecycle:
                          description: Lifecycle is not allowed for ephemeral containers.
                          properties:
                            postStart:
                              description: 'PostStart is called immediately after
                                a container is created. If the handler fails, the
                                container is terminated and restarted according to
                                its restart policy. Other management of the container
                                blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
                              properties:
                                exec:
                                  description: Exec specifies the action to take.
                                  properties:
                                    command:
                                      description: Command is the command line to
                                        execute inside the container, the working
                                        directory for the command  is root ('/') in
                                        the container's filesystem. The command is
                                        simply exec'd, it is not run inside a shell,
                                        so traditional shell instructions ('|', etc)
                                        won't work. To use a shell, you need to explicitly
                                        call out to that shell. Exit status of 0 is
                                        treated as live/healthy and non-zero is unhealthy.
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                httpGet:
                                  description: HTTPGet specifies the http request
                                    to perform.
                                  properties:
                                    host:
                                      description: Host name to connect to, defaults
                                        to the pod IP. You probably want to set "Host"
                                        in httpHeaders instead.
                                      type: string
                                    httpHeaders:
                                      description: Custom headers to set in the request.
                                        HTTP allows repeated headers.
                                      items:
                                        description: HTTPHeader describes a custom
                                          header to be used in HTTP probes
                                        properties:
                                          name:
                                            description: The header field name. This
                                              will be canonicalized upon output, so
                                              case-variant names will be understood
                                              as the same header.
                                            type: string
                                          value:
                                            description: The header field value
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      type: array
                                    path:
                                      description: Path to access on the HTTP server.
                                      type: string
                                    port:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: Name or number of the port to access
                                        on the container. Number must be in the range
                                        1 to 65535. Name must be an IANA_SVC_NAME.
                                      x-kubernetes-int-or-string: true
                                    scheme:
                                      description: Scheme to use for connecting to
                                        the host. Defaults to HTTP.
                                      type: string
                                  required:
                                  - port
                                  type: object
                                tcpSocket:
                                  description: Deprecated. TCPSocket is NOT supported
                                    as a LifecycleHandler and kept for the backward
                                    compatibility. There are no validation of this
                                    field and lifecycle hooks will fail in runtime
                                    when tcp handler is specified.
                                  properties:
                                    host:
                                      description: 'Optional: Host name to connect
                                        to, defaults to the pod IP.'
                                      type: string
                                    port:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: Number or name of the port to access
                                        on the container. Number must be in the range
                                        1 to 65535. Name must be an IANA_SVC_NAME.
                                      x-kubernetes-int-or-string: true
                                  required:
                                  - port
                                  type: object
                              type: object
                            preStop:
                              description: 'PreStop is called immediately before a
                                container is terminated due to an API request or management
                                event such as liveness/startup probe failure, preemption,
                                resource contention, etc. The handler is not called
                                if the container crashes or exits. The Pod''s termination
                                grace period countdown begins before the PreStop hook
                                is executed. Regardless of the outcome of the handler,
                                the container will eventually terminate within the
                                Pod''s termination grace period (unless delayed by
                                finalizers). Other management of the container blocks
                                until the hook completes or until the termination
                                grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
                              properties:
                                exec:
                                  description: Exec specifies the action to take.
                                  properties:
                                    command:
                                      description: Command is the command line to
                                        execute inside the container, the working
                                        directory for the command  is root ('/') in
                                        the container's filesystem. The command is
                                        simply exec'd, it is not run inside a shell,
                                        so traditional shell instructions ('|', etc)
                                        won't work. To use a shell, you need to explicitly
                                        call out to that shell. Exit status of 0 is
                                        treated as live/healthy and non-zero is unhealthy.
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                httpGet:
                                  description: HTTPGet specifies the http request
                                    to perform.
                                  properties:
                                    host:
                                      description: Host name to connect to, defaults
                                        to the pod IP. You probably want to set "Host"
                                        in httpHeaders instead.
                                      type: string
                                    httpHeaders:
                                      description: Custom headers to set in the request.
                                        HTTP allows repeated headers.
                                      items:
                                        description: HTTPHeader describes a custom
                                          header to be used in HTTP probes
                                        properties:
                                          name:
                                            description: The header field name. This
                                              will be canonicalized upon output, so
                                              case-variant names will be understood
                                              as the same header.
                                            type: string
                                          value:
                                            description: The header field value
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      type: array
                                    path:
                                      description: Path to access on the HTTP server.
                                      type: string
                                    port:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: Name or number of the port to access
                                        on the container. Number must be in the range
                                        1 to 65535. Name must be an IANA_SVC_NAME.
                                      x-kubernetes-int-or-string: true
                                    scheme:
                                      description: Scheme to use for connecting to
                                        the host. Defaults to HTTP.
                                      type: string
                                  required:
                                  - port
                                  type: object
                                tcpSocket:
                                  description: Deprecated. TCPSocket is NOT supported
                                    as a LifecycleHandler and kept for the backward
                                    compatibility. There are no validation of this
                                    field and lifecycle hooks will fail in runtime
                                    when tcp handler is specified.
                                  properties:
                                    host:
                                      description: 'Optional: Host name to connect
                                        to, defaults to the pod IP.'
                                      type: string
                                    port:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: Number or name of the port to access
                                        on the container. Number must be in the range
                                        1 to 65535. Name must be an IANA_SVC_NAME.
                                      x-kubernetes-int-or-string: true
                                  required:
                                  - port
                                  type: object
                              type: object
                          type: object
                        livenessProbe:
                          description: Probes are not allowed for ephemeral containers.
                          properties:
                            exec:
                              description: Exec specifies the action to take.
                              properties:
                                command:
                                  description: Command is the command line to execute
                                    inside the container, the working directory for
                                    the command  is root ('/') in the container's
                                    filesystem. The command is simply exec'd, it is
                                    not run inside a shell, so traditional shell instructions
                                    ('|', etc) won't work. To use a shell, you need
                                    to explicitly call out to that shell. Exit status
                                    of 0 is treated as live/healthy and non-zero is
                                    unhealthy.
                                  items:
                                    type: string
                                  type: array
                              type: object
                            failureThreshold:
                              description: Minimum consecutive failures for the probe
                                to be considered failed after having succeeded. Defaults
                                to 3. Minimum value is 1.
                              format: int32
                              type: integer
                            grpc:
                              description: GRPC specifies an action involving a GRPC
                                port.
                              properties:
                                port:
                                  description: Port number of the gRPC service. Number
                                    must be in the range 1 to 65535.
                                  format: int32
                                  type: integer
                                service:
                                  description: "Service is the name of the service
                                    to place in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
                                    \n If this is not specified, the default behavior
                                    is defined by gRPC."
                                  type: string
                              required:
                              - port
                              type: object
                            httpGet:
                              description: HTTPGet specifies the http request to perform.
                              properties:
                                host:
                                  description: Host name to connect to, defaults to
                                    the pod IP. You probably want to set "Host" in
                                    httpHeaders instead.
                                  type: string
                                httpHeaders:
                                  description: Custom headers to set in the request.
                                    HTTP allows repeated headers.
                                  items:
                                    description: HTTPHeader describes a custom header
                                      to be used in HTTP probes
                                    properties:
                                      name:
                                        description: The header field name. This will
                                          be canonicalized upon output, so case-variant
                                          names will be understood as the same header.
                                        type: string
                                      value:
                                        description: The header field value
                                        type: string
                                    required:
                                    - name
                                    - value
                                    type: object
                                  type: array
                                path:
                                  description: Path to access on the HTTP server.
                                  type: string
                                port:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Name or number of the port to access
                                    on the container. Number must be in the range
                                    1 to 65535. Name must be an IANA_SVC_NAME.
                                  x-kubernetes-int-or-string: true
                                scheme:
                                  description: Scheme to use for connecting to the
                                    host. Defaults to HTTP.
                                  type: string
                              required:
                              - port
                              type: object
                            initialDelaySeconds:
                              description: 'Number of seconds after the container
                                has started before liveness probes are initiated.
                                More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                              format: int32
                              type: integer
                            periodSeconds:
                              description: How often (in seconds) to perform the probe.
                                Default to 10 seconds. Minimum value is 1.
                              format: int32
                              type: integer
                            successThreshold:
                              description: Minimum consecutive successes for the probe
                                to be considered successful after having failed. Defaults
                                to 1. Must be 1 for liveness and startup. Minimum
                                value is 1.
                              format: int32
                              type: integer
                            tcpSocket:
                              description: TCPSocket specifies an action involving
                                a TCP port.
                              properties:
                                host:
                                  description: 'Optional: Host name to connect to,
                                    defaults to the pod IP.'
                                  type: string
                                port:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Number or name of the port to access
                                    on the container. Number must be in the range
                                    1 to 65535. Name must be an IANA_SVC_NAME.
                                  x-kubernetes-int-or-string: true
                              required:
                              - port
                              type: object
                            terminationGracePeriodSeconds:
                              description: Optional duration in seconds the pod needs
                                to terminate gracefully upon probe failure. The grace
                                period is the duration in seconds after the processes
                                running in the pod are sent a termination signal and
                                the time when the processes are forcibly halted with
                                a kill signal. Set this value longer than the expected
                                cleanup time for your process. If this value is nil,
                                the pod's terminationGracePeriodSeconds will be used.
                                Otherwise, this value overrides the value provided
                                by the pod spec. Value must be non-negative integer.
                                The value zero indicates stop immediately via the
                                kill signal (no opportunity to shut down). This is
                                a beta field and requires enabling ProbeTerminationGracePeriod
                                feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds
                                is used if unset.
                              format: int64
                              type: integer
                            timeoutSeconds:
                              description: 'Number of seconds after which the probe
                                times out. Defaults to 1 second. Minimum value is
                                1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                              format: int32
                              type: integer
                          type: object
                        name:
                          description: Name of the ephemeral container specified as
                            a DNS_LABEL. This name must be unique among all containers,
                            init containers and ephemeral containers.
                          type: string
                        ports:
                          description: Ports are not allowed for ephemeral containers.
                          items:
                            description: ContainerPort represents a network port in
                              a single container.
                            properties:
                              containerPort:
                                description: Number of port to expose on the pod's
                                  IP address. This must be a valid port number, 0
                                  < x < 65536.
                                format: int32
                                type: integer
                              hostIP:
                                description: What host IP to bind the external port
                                  to.
                                type: string
                              hostPort:
                                description: Number of port to expose on the host.
                                  If specified, this must be a valid port number,
                                  0 < x < 65536. If HostNetwork is specified, this
                                  must match ContainerPort. Most containers do not
                                  need this.
                                format: int32
                                type: integer
                              name:
                                description: If specified, this must be an IANA_SVC_NAME
                                  and unique within the pod. Each named port in a
                                  pod must have a unique name. Name for the port that
                                  can be referred to by services.
                                type: string
                              protocol:
                                default: TCP
                                description: Protocol for port. Must be UDP, TCP,
                                  or SCTP. Defaults to "TCP".
                                type: string
                            required:
                            - containerPort
                            type: object
                          type: array
                          x-kubernetes-list-map-keys:
                          - containerPort
                          - protocol
                          x-kubernetes-list-type: map
                        readinessProbe:
                          description: Probes are not allowed for ephemeral containers.
                          properties:
                            exec:
                              description: Exec specifies the action to take.
                              properties:
                                command:
                                  description: Command is the command line to execute
                                    inside the container, the working directory for
                                    the command  is root ('/') in the container's
                                    filesystem. The command is simply exec'd, it is
                                    not run inside a shell, so traditional shell instructions
                                    ('|', etc) won't work. To use a shell, you need
                                    to explicitly call out to that shell. Exit status
                                    of 0 is treated as live/healthy and non-zero is
                                    unhealthy.
                                  items:
                                    type: string
                                  type: array
                              type: object
                            failureThreshold:
                              description: Minimum consecutive failures for the probe
                                to be considered failed after having succeeded. Defaults
                                to 3. Minimum value is 1.
                              format: int32
                              type: integer
                            grpc:
                              description: GRPC specifies an action involving a GRPC
                                port.
                              properties:
                                port:
                                  description: Port number of the gRPC service. Number
                                    must be in the range 1 to 65535.
                                  format: int32
                                  type: integer
                                service:
                                  description: "Service is the name of the service
                                    to place in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
                                    \n If this is not specified, the default behavior
                                    is defined by gRPC."
                                  type: string
                              required:
                              - port
                              type: object
                            httpGet:
                              description: HTTPGet specifies the http request to perform.
                              properties:
                                host:
                                  description: Host name to connect to, defaults to
                                    the pod IP. You probably want to set "Host" in
                                    httpHeaders instead.
                                  type: string
                                httpHeaders:
                                  description: Custom headers to set in the request.
                                    HTTP allows repeated headers.
                                  items:
                                    description: HTTPHeader describes a custom header
                                      to be used in HTTP probes
                                    properties:
                                      name:
                                        description: The header field name. This will
                                          be canonicalized upon output, so case-variant
                                          names will be understood as the same header.
                                        type: string
                                      value:
                                        description: The header field value
                                        type: string
                                    required:
                                    - name
                                    - value
                                    type: object
                                  type: array
                                path:
                                  description: Path to access on the HTTP server.
                                  type: string
                                port:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Name or number of the port to access
                                    on the container. Number must be in the range
                                    1 to 65535. Name must be an IANA_SVC_NAME.
                                  x-kubernetes-int-or-string: true
                                scheme:
                                  description: Scheme to use for connecting to the
                                    host. Defaults to HTTP.
                                  type: string
                              required:
                              - port
                              type: object
                            initialDelaySeconds:
                              description: 'Number of seconds after the container
                                has started before liveness probes are initiated.
                                More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                              format: int32
                              type: integer
                            periodSeconds:
                              description: How often (in seconds) to perform the probe.
                                Default to 10 seconds. Minimum value is 1.
                              format: int32
                              type: integer
                            successThreshold:
                              description: Minimum consecutive successes for the probe
                                to be considered successful after having failed. Defaults
                                to 1. Must be 1 for liveness and startup. Minimum
                                value is 1.
                              format: int32
                              type: integer
                            tcpSocket:
                              description: TCPSocket specifies an action involving
                                a TCP port.
                              properties:
                                host:
                                  description: 'Optional: Host name to connect to,
                                    defaults to the pod IP.'
                                  type: string
                                port:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Number or name of the port to access
                                    on the container. Number must be in the range
                                    1 to 65535. Name must be an IANA_SVC_NAME.
                                  x-kubernetes-int-or-string: true
                              required:
                              - port
                              type: object
                            terminationGracePeriodSeconds:
                              description: Optional duration in seconds the pod needs
                                to terminate gracefully upon probe failure. The grace
                                period is the duration in seconds after the processes
                                running in the pod are sent a termination signal and
                                the time when the processes are forcibly halted with
                                a kill signal. Set this value longer than the expected
                                cleanup time for your process. If this value is nil,
                                the pod's terminationGracePeriodSeconds will be used.
                                Otherwise, this value overrides the value provided
                                by the pod spec. Value must be non-negative integer.
                                The value zero indicates stop immediately via the
                                kill signal (no opportunity to shut down). This is
                                a beta field and requires enabling ProbeTerminationGracePeriod
                                feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds
                                is used if unset.
                              format: int64
                              type: integer
                            timeoutSeconds:
                              description: 'Number of seconds after which the probe
                                times out. Defaults to 1 second. Minimum value is
                                1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                              format: int32
                              type: integer
                          type: object
                        resizePolicy:
                          description: Resources resize policy for the container.
                          items:
                            description: ContainerResizePolicy represents resource
                              resize policy for the container.
                            properties:
                              resourceName:
                                description: 'Name of the resource to which this resource
                                  resize policy applies. Supported values: cpu, memory.'
                                type: string
                              restartPolicy:
                                description: Restart policy to apply when specified
                                  resource is resized. If not specified, it defaults
                                  to NotRequired.
                                type: string
                            required:
                            - resourceName
                            - restartPolicy
                            type: object
                          type: array
                          x-kubernetes-list-type: atomic
                        resources:
                          description: Resources are not allowed for ephemeral containers.
                            Ephemeral containers use spare resources already allocated
                            to the pod.
                          properties:
                            claims:
                              description: "Claims lists the names of resources, defined
                                in spec.resourceClaims, that are used by this container.
                                \n This is an alpha field and requires enabling the
                                DynamicResourceAllocation feature gate. \n This field
                                is immutable. It can only be set for containers."
                              items:
                                description: ResourceClaim references one entry in
                                  PodSpec.ResourceClaims.
                                properties:
                                  name:
                                    description: Name must match the name of one entry
                                      in pod.spec.resourceClaims of the Pod where
                                      this field is used. It makes that resource available
                                      inside a container.
                                    type: string
                                required:
                                - name
                                type: object
                              type: array
                              x-kubernetes-list-map-keys:
                              - name
                              x-kubernetes-list-type: map
                            limits:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: 'Limits describes the maximum amount of
                                compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                              type: object
                            requests:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: 'Requests describes the minimum amount
                                of compute resources required. If Requests is omitted
                                for a container, it defaults to Limits if that is
                                explicitly specified, otherwise to an implementation-defined
                                value. Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                              type: object
                          type: object
                        restartPolicy:
                          description: Restart policy for the container to manage
                            the restart behavior of each container within a pod. This
                            may only be set for init containers. You cannot set this
                            field on ephemeral containers.
                          type: string
                        securityContext:
                          description: 'Optional: SecurityContext defines the security
                            options the ephemeral container should be run with. If
                            set, the fields of SecurityContext override the equivalent
                            fields of PodSecurityContext.'
                          properties:
                            allowPrivilegeEscalation:
                              description: 'AllowPrivilegeEscalation controls whether
                                a process can gain more privileges than its parent
                                process. This bool directly controls if the no_new_privs
                                flag will be set on the container process. AllowPrivilegeEscalation
                                is true always when the container is: 1) run as Privileged
                                2) has CAP_SYS_ADMIN Note that this field cannot be
                                set when spec.os.name is windows.'
                              type: boolean
                            capabilities:
                              description: The capabilities to add/drop when running
                                containers. Defaults to the default set of capabilities
                                granted by the container runtime. Note that this field
                                cannot be set when spec.os.name is windows.
                              properties:
                                add:
                                  description: Added capabilities
                                  items:
                                    description: Capability represent POSIX capabilities
                                      type
                                    type: string
                                  type: array
                                drop:
                                  description: Removed capabilities
                                  items:
                                    description: Capability represent POSIX capabilities
                                      type
                                    type: string
                                  type: array
                              type: object
                            privileged:
                              description: Run container in privileged mode. Processes
                                in privileged containers are essentially equivalent
                                to root on the host. Defaults to false. Note that
                                this field cannot be set when spec.os.name is windows.
                              type: boolean
                            procMount:
                              description: procMount denotes the type of proc mount
                                to use for the containers. The default is DefaultProcMount
                                which uses the container runtime defaults for readonly
                                paths and masked paths. This requires the ProcMountType
                                feature flag to be enabled. Note that this field cannot
                                be set when spec.os.name is windows.
                              type: string
                            readOnlyRootFilesystem:
                              description: Whether this container has a read-only
                                root filesystem. Default is false. Note that this
                                field cannot be set when spec.os.name is windows.
                              type: boolean
                            runAsGroup:
                              description: The GID to run the entrypoint of the container
                                process. Uses runtime default if unset. May also be
                                set in PodSecurityContext.  If set in both SecurityContext
                                and PodSecurityContext, the value specified in SecurityContext
                                takes precedence. Note that this field cannot be set
                                when spec.os.name is windows.
                              format: int64
                              type: integer
                            runAsNonRoot:
                              description: Indicates that the container must run as
                                a non-root user. If true, the Kubelet will validate
                                the image at runtime to ensure that it does not run
                                as UID 0 (root) and fail to start the container if
                                it does. If unset or false, no such validation will
                                be performed. May also be set in PodSecurityContext.  If
                                set in both SecurityContext and PodSecurityContext,
                                the value specified in SecurityContext takes precedence.
                              type: boolean
                            runAsUser:
                              description: The UID to run the entrypoint of the container
                                process. Defaults to user specified in image metadata
                                if unspecified. May also be set in PodSecurityContext.  If
                                set in both SecurityContext and PodSecurityContext,
                                the value specified in SecurityContext takes precedence.
                                Note that this field cannot be set when spec.os.name
                                is windows.
                              format: int64
                              type: integer
                            seLinuxOptions:
                              description: The SELinux context to be applied to the
                                container. If unspecified, the container runtime will
                                allocate a random SELinux context for each container.  May
                                also be set in PodSecurityContext.  If set in both
                                SecurityContext and PodSecurityContext, the value
                                specified in SecurityContext takes precedence. Note
                                that this field cannot be set when spec.os.name is
                                windows.
                              properties:
                                level:
                                  description: Level is SELinux level label that applies
                                    to the container.
                                  type: string
                                role:
                                  description: Role is a SELinux role label that applies
                                    to the container.
                                  type: string
                                type:
                                  description: Type is a SELinux type label that applies
                                    to the container.
                                  type: string
                                user:
                                  description: User is a SELinux user label that applies
                                    to the container.
                                  type: string
                              type: object
                            seccompProfile:
                              description: The seccomp options to use by this container.
                                If seccomp options are provided at both the pod &
                                container level, the container options override the
                                pod options. Note that this field cannot be set when
                                spec.os.name is windows.
                              properties:
                                localhostProfile:
                                  description: localhostProfile indicates a profile
                                    defined in a file on the node should be used.
                                    The profile must be preconfigured on the node
                                    to work. Must be a descending path, relative to
                                    the kubelet's configured seccomp profile location.
                                    Must be set if type is "Localhost". Must NOT be
                                    set for any other type.
                                  type: string
                                type:
                                  description: "type indicates which kind of seccomp
                                    profile will be applied. Valid options are: \n
                                    Localhost - a profile defined in a file on the
                                    node should be used. RuntimeDefault - the container
                                    runtime default profile should be used. Unconfined
                                    - no profile should be applied."
                                  type: string
                              required:
                              - type
                              type: object
                            windowsOptions:
                              description: The Windows specific settings applied to
                                all containers. If unspecified, the options from the
                                PodSecurityContext will be used. If set in both SecurityContext
                                and PodSecurityContext, the value specified in SecurityContext
                                takes precedence. Note that this field cannot be set
                                when spec.os.name is linux.
                              properties:
                                gmsaCredentialSpec:
                                  description: GMSACredentialSpec is where the GMSA
                                    admission webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                                    inlines the contents of the GMSA credential spec
                                    named by the GMSACredentialSpecName field.
                                  type: string
                                gmsaCredentialSpecName:
                                  description: GMSACredentialSpecName is the name
                                    of the GMSA credential spec to use.
                                  type: string
                                hostProcess:
                                  description: HostProcess determines if a container
                                    should be run as a 'Host Process' container. All
                                    of a Pod's containers must have the same effective
                                    HostProcess value (it is not allowed to have a
                                    mix of HostProcess containers and non-HostProcess
                                    containers). In addition, if HostProcess is true
                                    then HostNetwork must also be set to true.
                                  type: boolean
                                runAsUserName:
                                  description: The UserName in Windows to run the
                                    entrypoint of the container process. Defaults
                                    to the user specified in image metadata if unspecified.
                                    May also be set in PodSecurityContext. If set
                                    in both SecurityContext and PodSecurityContext,
                                    the value specified in SecurityContext takes precedence.
                                  type: string
                              type: object
                          type: object
                        startupProbe:
                          description: Probes are not allowed for ephemeral containers.
                          properties:
                            exec:
                              description: Exec specifies the action to take.
                              properties:
                                command:
                                  description: Command is the command line to execute
                                    inside the container, the working directory for
                                    the command  is root ('/') in the container's
                                    filesystem. The command is simply exec'd, it is
                                    not run inside a shell, so traditional shell instructions
                                    ('|', etc) won't work. To use a shell, you need
                                    to explicitly call out to that shell. Exit status
                                    of 0 is treated as live/healthy and non-zero is
                                    unhealthy.
                                  items:
                                    type: string
                                  type: array
                              type: object
                            failureThreshold:
                              description: Minimum consecutive failures for the probe
                                to be considered failed after having succeeded. Defaults
                                to 3. Minimum value is 1.
                              format: int32
                              type: integer
                            grpc:
                              description: GRPC specifies an action involving a GRPC
                                port.
                              properties:
                                port:
                                  description: Port number of the gRPC service. Number
                                    must be in the range 1 to 65535.
                                  format: int32
                                  type: integer
                                service:
                                  description: "Service is the name of the service
                                    to place in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
                                    \n If this is not specified, the default behavior
                                    is defined by gRPC."
                                  type: string
                              required:
                              - port
                              type: object
                            httpGet:
                              description: HTTPGet specifies the http request to perform.
                              properties:
                                host:
                                  description: Host name to connect to, defaults to
                                    the pod IP. You probably want to set "Host" in
                                    httpHeaders instead.
                                  type: string
                                httpHeaders:
                                  description: Custom headers to set in the request.
                                    HTTP allows repeated headers.
                                  items:
                                    description: HTTPHeader describes a custom header
                                      to be used in HTTP probes
                                    properties:
                                      name:
                                        description: The header field name. This will
                                          be canonicalized upon output, so case-variant
                                          names will be understood as the same header.
                                        type: string
                                      value:
                                        description: The header field value
                                        type: string
                                    required:
                                    - name
                                    - value
                                    type: object
                                  type: array
                                path:
                                  description: Path to access on the HTTP server.
                                  type: string
                                port:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Name or number of the port to access
                                    on the container. Number must be in the range
                                    1 to 65535. Name must be an IANA_SVC_NAME.
                                  x-kubernetes-int-or-string: true
                                scheme:
                                  description: Scheme to use for connecting to the
                                    host. Defaults to HTTP.
                                  type: string
                              required:
                              - port
                              type: object
                            initialDelaySeconds:
                              description: 'Number of seconds after the container
                                has started before liveness probes are initiated.
                                More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                              format: int32
                              type: integer
                            periodSeconds:
                              description: How often (in seconds) to perform the probe.
                                Default to 10 seconds. Minimum value is 1.
                              format: int32
                              type: integer
                            successThreshold:
                              description: Minimum consecutive successes for the probe
                                to be considered successful after having failed. Defaults
                                to 1. Must be 1 for liveness and startup. Minimum
                                value is 1.
                              format: int32
                              type: integer
                            tcpSocket:
                              description: TCPSocket specifies an action involving
                                a TCP port.
                              properties:
                                host:
                                  description: 'Optional: Host name to connect to,
                                    defaults to the pod IP.'
                                  type: string
                                port:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Number or name of the port to access
                                    on the container. Number must be in the range
                                    1 to 65535. Name must be an IANA_SVC_NAME.
                                  x-kubernetes-int-or-string: true
                              required:
                              - port
                              type: object
                            terminationGracePeriodSeconds:
                              description: Optional duration in seconds the pod needs
                                to terminate gracefully upon probe failure. The grace
                                period is the duration in seconds after the processes
                                running in the pod are sent a termination signal and
                                the time when the processes are forcibly halted with
                                a kill signal. Set this value longer than the expected
                                cleanup time for your process. If this value is nil,
                                the pod's terminationGracePeriodSeconds will be used.
                                Otherwise, this value overrides the value provided
                                by the pod spec. Value must be non-negative integer.
                                The value zero indicates stop immediately via the
                                kill signal (no opportunity to shut down). This is
                                a beta field and requires enabling ProbeTerminationGracePeriod
                                feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds
                                is used if unset.
                              format: int64
                              type: integer
                            timeoutSeconds:
                              description: 'Number of seconds after which the probe
                                times out. Defaults to 1 second. Minimum value is
                                1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                              format: int32
                              type: integer
                          type: object
                        stdin:
                          description: Whether this container should allocate a buffer
                            for stdin in the container runtime. If this is not set,
                            reads from stdin in the container will always result in
                            EOF. Default is false.
                          type: boolean
                        stdinOnce:
                          description: Whether the container runtime should close
                            the stdin channel after it has been opened by a single
                            attach. When stdin is true the stdin stream will remain
                            open across multiple attach sessions. If stdinOnce is
                            set to true, stdin is opened on container start, is empty
                            until the first client attaches to stdin, and then remains
                            open and accepts data until the client disconnects, at
                            which time stdin is closed and remains closed until the
                            container is restarted. If this flag is false, a container
                            processes that reads from stdin will never receive an
                            EOF. Default is false
                          type: boolean
                        targetContainerName:
                          description: "If set, the name of the container from PodSpec
                            that this ephemeral container targets. The ephemeral container
                            will be run in the namespaces (IPC, PID, etc) of this
                            container. If not set then the ephemeral container uses
                            the namespaces configured in the Pod spec. \n The container
                            runtime must implement support for this feature. If the
                            runtime does not support namespace targeting then the
                            result of setting this field is undefined."
                          type: string
                        terminationMessagePath:
                          description: 'Optional: Path at which the file to which
                            the container''s termination message will be written is
                            mounted into the container''s filesystem. Message written
                            is intended to be brief final status, such as an assertion
                            failure message. Will be truncated by the node if greater
                            than 4096 bytes. The total message length across all containers
                            will be limited to 12kb. Defaults to /dev/termination-log.
                            Cannot be updated.'
                          type: string
                        terminationMessagePolicy:
                          description: Indicate how the termination message should
                            be populated. File will use the contents of terminationMessagePath
                            to populate the container status message on both success
                            and failure. FallbackToLogsOnError will use the last chunk
                            of container log output if the termination message file
                            is empty and the container exited with an error. The log
                            output is limited to 2048 bytes or 80 lines, whichever
                            is smaller. Defaults to File. Cannot be updated.
                          type: string
                        tty:
                          description: Whether this container should allocate a TTY
                            for itself, also requires 'stdin' to be true. Default
                            is false.
                          type: boolean
                        volumeDevices:
                          description: volumeDevices is the list of block devices
                            to be used by the container.
                          items:
                            description: volumeDevice describes a mapping of a raw
                              block device within a container.
                            properties:
                              devicePath:
                                description: devicePath is the path inside of the
                                  container that the device will be mapped to.
                                type: string
                              name:
                                description: name must match the name of a persistentVolumeClaim
                                  in the pod
                                type: string
                            required:
                            - devicePath
                            - name
                            type: object
                          type: array
                        volumeMounts:
                          description: Pod volumes to mount into the container's filesystem.
                            Subpath mounts are not allowed for ephemeral containers.
                            Cannot be updated.
                          items:
                            description: VolumeMount describes a mounting of a Volume
                              within a container.
                            properties:
                              mountPath:
                                description: Path within the container at which the
                                  volume should be mounted.  Must not contain ':'.
                                type: string
                              mountPropagation:
                                description: mountPropagation determines how mounts
                                  are propagated from the host to container and the
                                  other way around. When not set, MountPropagationNone
                                  is used. This field is beta in 1.10.
                                type: string
                              name:
                                description: This must match the Name of a Volume.
                                type: string
                              readOnly:
                                description: Mounted read-only if true, read-write
                                  otherwise (false or unspecified). Defaults to false.
                                type: boolean
                              subPath:
                                description: Path within the volume from which the
                                  container's volume should be mounted. Defaults to
                                  "" (volume's root).
                                type: string
                              subPathExpr:
                                description: Expanded path within the volume from
                                  which the container's volume should be mounted.
                                  Behaves similarly to SubPath but environment variable
                                  references $(VAR_NAME) are expanded using the container's
                                  environment. Defaults to "" (volume's root). SubPathExpr
                                  and SubPath are mutually exclusive.
                                type: string
                            required:
                            - mountPath
                            - name
                            type: object
                          type: array
                        workingDir:
                          description: Container's working directory. If not specified,
                            the container runtime's default will be used, which might
                            be configured in the container image. Cannot be updated.
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                  hostAliases:
                    description: HostAliases is an optional list of hosts and IPs
                      that will be injected into the pod's hosts file if specified.
                      This is only valid for non-hostNetwork pods.
                    items:
                      description: HostAlias holds the mapping between IP and hostnames
                        that will be injected as an entry in the pod's hosts file.
                      properties:
                        hostnames:
                          description: Hostnames for the above IP address.
                          items:
                            type: string
                          type: array
                        ip:
                          description: IP address of the host file entry.
                          type: string
                      type: object
                    type: array
                  hostIPC:
                    description: 'Use the host''s ipc namespace. Optional: Default
                      to false.'
                    type: boolean
                  hostNetwork:
                    description: Host networking requested for this pod. Use the host's
                      network namespace. If this option is set, the ports that will
                      be used must be specified. Default to false.
                    type: boolean
                  hostPID:
                    description: 'Use the host''s pid namespace. Optional: Default
                      to false.'
                    type: boolean
                  hostUsers:
                    description: 'Use the host''s user namespace. Optional: Default
                      to true. If set to true or not present, the pod will be run
                      in the host user namespace, useful for when the pod needs a
                      feature only available to the host user namespace, such as loading
                      a kernel module with CAP_SYS_MODULE. When set to false, a new
                      userns is created for the pod. Setting false is useful for mitigating
                      container breakout vulnerabilities even allowing users to run
                      their containers as root without actually having root privileges
                      on the host. This field is alpha-level and is only honored by
                      servers that enable the UserNamespacesSupport feature.'
                    type: boolean
                  hostname:
                    description: Specifies the hostname of the Pod If not specified,
                      the pod's hostname will be set to a system-defined value.
                    type: string
                  imagePullSecrets:
                    description: 'ImagePullSecrets is an optional list of references
                      to secrets in the same namespace to use for pulling any of the
                      images used by this PodSpec. If specified, these secrets will
                      be passed to individual puller implementations for them to use.
                      More info: https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod'
                    items:
                      description: LocalObjectReference contains enough information
                        to let you locate the referenced object inside the same namespace.
                      properties:
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            TODO: Add other useful fields. apiVersion, kind, uid?'
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                    type: array
                  initContainers:
                    description: 'List of initialization containers belonging to the
                      pod. Init containers are executed in order prior to containers
                      being started. If any init container fails, the pod is considered
                      to have failed and is handled according to its restartPolicy.
                      The name for an init container or normal container must be unique
                      among all containers. Init containers may not have Lifecycle
                      actions, Readiness probes, Liveness probes, or Startup probes.
                      The resourceRequirements of an init container are taken into
                      account during scheduling by finding the highest request/limit
                      for each resource type, and then using the max of of that value
                      or the sum of the normal containers. Limits are applied to init
                      containers in a similar fashion. Init containers cannot currently
                      be added or removed. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/'
                    items:
                      description: A single application container that you want to
                        run within a pod.
                      properties:
                        args:
                          description: 'Arguments to the entrypoint. The container
                            image''s CMD is used if this is not provided. Variable
                            references $(VAR_NAME) are expanded using the container''s
                            environment. If a variable cannot be resolved, the reference
                            in the input string will be unchanged. Double $$ are reduced
                            to a single $, which allows for escaping the $(VAR_NAME)
                            syntax: i.e. "$$(VAR_NAME)" will produce the string literal
                            "$(VAR_NAME)". Escaped references will never be expanded,
                            regardless of whether the variable exists or not. Cannot
                            be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                          items:
                            type: string
                          type: array
                        command:
                          description: 'Entrypoint array. Not executed within a shell.
                            The container image''s ENTRYPOINT is used if this is not
                            provided. Variable references $(VAR_NAME) are expanded
                            using the container''s environment. If a variable cannot
                            be resolved, the reference in the input string will be
                            unchanged. Double $$ are reduced to a single $, which
                            allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)"
                            will produce the string literal "$(VAR_NAME)". Escaped
                            references will never be expanded, regardless of whether
                            the variable exists or not. Cannot be updated. More info:
                            https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                          items:
                            type: string
                          type: array
                        env:
                          description: List of environment variables to set in the
                            container. Cannot be updated.
                          items:
                            description: EnvVar represents an environment variable
                              present in a Container.
                            properties:
                              name:
                                description: Name of the environment variable. Must
                                  be a C_IDENTIFIER.
                                type: string
                              value:
                                description: 'Variable references $(VAR_NAME) are
                                  expanded using the previously defined environment
                                  variables in the container and any service environment
                                  variables. If a variable cannot be resolved, the
                                  reference in the input string will be unchanged.
                                  Double $$ are reduced to a single $, which allows
                                  for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)"
                                  will produce the string literal "$(VAR_NAME)". Escaped
                                  references will never be expanded, regardless of
                                  whether the variable exists or not. Defaults to
                                  "".'
                                type: string
                              valueFrom:
                                description: Source for the environment variable's
                                  value. Cannot be used if value is not empty.
                                properties:
                                  configMapKeyRef:
                                    description: Selects a key of a ConfigMap.
                                    properties:
                                      key:
                                        description: The key to select.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                        type: string
                                      optional:
                                        description: Specify whether the ConfigMap
                                          or its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  fieldRef:
                                    description: 'Selects a field of the pod: supports
                                      metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`,
                                      `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                      spec.serviceAccountName, status.hostIP, status.podIP,
                                      status.podIPs.'
                                    properties:
                                      apiVersion:
                                        description: Version of the schema the FieldPath
                                          is written in terms of, defaults to "v1".
                                        type: string
                                      fieldPath:
                                        description: Path of the field to select in
                                          the specified API version.
                                        type: string
                                    required:
                                    - fieldPath
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  resourceFieldRef:
                                    description: 'Selects a resource of the container:
                                      only resources limits and requests (limits.cpu,
                                      limits.memory, limits.ephemeral-storage, requests.cpu,
                                      requests.memory and requests.ephemeral-storage)
                                      are currently supported.'
                                    properties:
                                      containerName:
                                        description: 'Container name: required for
                                          volumes, optional for env vars'
                                        type: string
                                      divisor:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        description: Specifies the output format of
                                          the exposed resources, defaults to "1"
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      resource:
                                        description: 'Required: resource to select'
                                        type: string
                                    required:
                                    - resource
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  secretKeyRef:
                                    description: Selects a key of a secret in the
                                      pod's namespace
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or
                                          its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                    x-kubernetes-map-type: atomic
                                type: object
                            required:
                            - name
                            type: object
                          type: array
                        envFrom:
                          description: List of sources to populate environment variables
                            in the container. The keys defined within a source must
                            be a C_IDENTIFIER. All invalid keys will be reported as
                            an event when the container is starting. When a key exists
                            in multiple sources, the value associated with the last
                            source will take precedence. Values defined by an Env
                            with a duplicate key will take precedence. Cannot be updated.
                          items:
                            description: EnvFromSource represents the source of a
                              set of ConfigMaps
                            properties:
                              configMapRef:
                                description: The ConfigMap to select from
                                properties:
                                  name:
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind,
                                      uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the ConfigMap must
                                      be defined
                                    type: boolean
                                type: object
                                x-kubernetes-map-type: atomic
                              prefix:
                                description: An optional identifier to prepend to
                                  each key in the ConfigMap. Must be a C_IDENTIFIER.
                                type: string
                              secretRef:
                                description: The Secret to select from
                                properties:
                                  name:
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind,
                                      uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the Secret must be
                                      defined
                                    type: boolean
                                type: object
                                x-kubernetes-map-type: atomic
                            type: object
                          type: array
                        image:
                          description: 'Container image name. More info: https://kubernetes.io/docs/concepts/containers/images
                            This field is optional to allow higher level config management
                            to default or override container images in workload controllers
                            like Deployments and StatefulSets.'
                          type: string
                        imagePullPolicy:
                          description: 'Image pull policy. One of Always, Never, IfNotPresent.
                            Defaults to Always if :latest tag is specified, or IfNotPresent
                            otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images'
                          type: string
                        lifecycle:
                          description: Actions that the management system should take
                            in response to container lifecycle events. Cannot be updated.
                          properties:
                            postStart:
                              description: 'PostStart is called immediately after
                                a container is created. If the handler fails, the
                                container is terminated and restarted according to
                                its restart policy. Other management of the container
                                blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
                              properties:
                                exec:
                                  description: Exec specifies the action to take.
                                  properties:
                                    command:
                                      description: Command is the command line to
                                        execute inside the container, the working
                                        directory for the command  is root ('/') in
                                        the container's filesystem. The command is
                                        simply exec'd, it is not run inside a shell,
                                        so traditional shell instructions ('|', etc)
                                        won't work. To use a shell, you need to explicitly
                                        call out to that shell. Exit status of 0 is
                                        treated as live/healthy and non-zero is unhealthy.
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                httpGet:
                                  description: HTTPGet specifies the http request
                                    to perform.
                                  properties:
                                    host:
                                      description: Host name to connect to, defaults
                                        to the pod IP. You probably want to set "Host"
                                        in httpHeaders instead.
                                      type: string
                                    httpHeaders:
                                      description: Custom headers to set in the request.
                                        HTTP allows repeated headers.
                                      items:
                                        description: HTTPHeader describes a custom
                                          header to be used in HTTP probes
                                        properties:
                                          name:
                                            description: The header field name. This
                                              will be canonicalized upon output, so
                                              case-variant names will be understood
                                              as the same header.
                                            type: string
                                          value:
                                            description: The header field value
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      type: array
                                    path:
                                      description: Path to access on the HTTP server.
                                      type: string
                                    port:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: Name or number of the port to access
                                        on the container. Number must be in the range
                                        1 to 65535. Name must be an IANA_SVC_NAME.
                                      x-kubernetes-int-or-string: true
                                    scheme:
                                      description: Scheme to use for connecting to
                                        the host. Defaults to HTTP.
                                      type: string
                                  required:
                                  - port
                                  type: object
                                tcpSocket:
                                  description: Deprecated. TCPSocket is NOT supported
                                    as a LifecycleHandler and kept for the backward
                                    compatibility. There are no validation of this
                                    field and lifecycle hooks will fail in runtime
                                    when tcp handler is specified.
                                  properties:
                                    host:
                                      description: 'Optional: Host name to connect
                                        to, defaults to the pod IP.'
                                      type: string
                                    port:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: Number or name of the port to access
                                        on the container. Number must be in the range
                                        1 to 65535. Name must be an IANA_SVC_NAME.
                                      x-kubernetes-int-or-string: true
                                  required:
                                  - port
                                  type: object
                              type: object
                            preStop:
                              description: 'PreStop is called immediately before a
                                container is terminated due to an API request or management
                                event such as liveness/startup probe failure, preemption,
                                resource contention, etc. The handler is not called
                                if the container crashes or exits. The Pod''s termination
                                grace period countdown begins before the PreStop hook
                                is executed. Regardless of the outcome of the handler,
                                the container will eventually terminate within the
                                Pod''s termination grace period (unless delayed by
                                finalizers). Other management of the container blocks
                                until the hook completes or until the termination
                                grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
                              properties:
                                exec:
                                  description: Exec specifies the action to take.
                                  properties:
                                    command:
                                      description: Command is the command line to
                                        execute inside the container, the working
                                        directory for the command  is root ('/') in
                                        the container's filesystem. The command is
                                        simply exec'd, it is not run inside a shell,
                                        so traditional shell instructions ('|', etc)
                                        won't work. To use a shell, you need to explicitly
                                        call out to that shell. Exit status of 0 is
                                        treated as live/healthy and non-zero is unhealthy.
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                httpGet:
                                  description: HTTPGet specifies the http request
                                    to perform.
                                  properties:
                                    host:
                                      description: Host name to connect to, defaults
                                        to the pod IP. You probably want to set "Host"
                                        in httpHeaders instead.
                                      type: string
                                    httpHeaders:
                                      description: Custom headers to set in the request.
                                        HTTP allows repeated headers.
                                      items:
                                        description: HTTPHeader describes a custom
                                          header to be used in HTTP probes
                                        properties:
                                          name:
                                            description: The header field name. This
                                              will be canonicalized upon output, so
                                              case-variant names will be understood
                                              as the same header.
                                            type: string
                                          value:
                                            description: The header field value
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      type: array
                                    path:
                                      description: Path to access on the HTTP server.
                                      type: string
                                    port:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: Name or number of the port to access
                                        on the container. Number must be in the range
                                        1 to 65535. Name must be an IANA_SVC_NAME.
                                      x-kubernetes-int-or-string: true
                                    scheme:
                                      description: Scheme to use for connecting to
                                        the host. Defaults to HTTP.
                                      type: string
                                  required:
                                  - port
                                  type: object
                                tcpSocket:
                                  description: Deprecated. TCPSocket is NOT supported
                                    as a LifecycleHandler and kept for the backward
                                    compatibility. There are no validation of this
                                    field and lifecycle hooks will fail in runtime
                                    when tcp handler is specified.
                                  properties:
                                    host:
                                      description: 'Optional: Host name to connect
                                        to, defaults to the pod IP.'
                                      type: string
                                    port:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: Number or name of the port to access
                                        on the container. Number must be in the range
                                        1 to 65535. Name must be an IANA_SVC_NAME.
                                      x-kubernetes-int-or-string: true
                                  required:
                                  - port
                                  type: object
                              type: object
                          type: object
                        livenessProbe:
                          description: 'Periodic probe of container liveness. Container
                            will be restarted if the probe fails. Cannot be updated.
                            More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                          properties:
                            exec:
                              description: Exec specifies the action to take.
                              properties:
                                command:
                                  description: Command is the command line to execute
                                    inside the container, the working directory for
                                    the command  is root ('/') in the container's
                                    filesystem. The command is simply exec'd, it is
                                    not run inside a shell, so traditional shell instructions
                                    ('|', etc) won't work. To use a shell, you need
                                    to explicitly call out to that shell. Exit status
                                    of 0 is treated as live/healthy and non-zero is
                                    unhealthy.
                                  items:
                                    type: string
                                  type: array
                              type: object
                            failureThreshold:
                              description: Minimum consecutive failures for the probe
                                to be considered failed after having succeeded. Defaults
                                to 3. Minimum value is 1.
                              format: int32
                              type: integer
                            grpc:
                              description: GRPC specifies an action involving a GRPC
                                port.
                              properties:
                                port:
                                  description: Port number of the gRPC service. Number
                                    must be in the range 1 to 65535.
                                  format: int32
                                  type: integer
                                service:
                                  description: "Service is the name of the service
                                    to place in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
                                    \n If this is not specified, the default behavior
                                    is defined by gRPC."
                                  type: string
                              required:
                              - port
                              type: object
                            httpGet:
                              description: HTTPGet specifies the http request to perform.
                              properties:
                                host:
                                  description: Host name to connect to, defaults to
                                    the pod IP. You probably want to set "Host" in
                                    httpHeaders instead.
                                  type: string
                                httpHeaders:
                                  description: Custom headers to set in the request.
                                    HTTP allows repeated headers.
                                  items:
                                    description: HTTPHeader describes a custom header
                                      to be used in HTTP probes
                                    properties:
                                      name:
                                        description: The header field name. This will
                                          be canonicalized upon output, so case-variant
                                          names will be understood as the same header.
                                        type: string
                                      value:
                                        description: The header field value
                                        type: string
                                    required:
                                    - name
                                    - value
                                    type: object
                                  type: array
                                path:
                                  description: Path to access on the HTTP server.
                                  type: string
                                port:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Name or number of the port to access
                                    on the container. Number must be in the range
                                    1 to 65535. Name must be an IANA_SVC_NAME.
                                  x-kubernetes-int-or-string: true
                                scheme:
                                  description: Scheme to use for connecting to the
                                    host. Defaults to HTTP.
                                  type: string
                              required:
                              - port
                              type: object
                            initialDelaySeconds:
                              description: 'Number of seconds after the container
                                has started before liveness probes are initiated.
                                More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                              format: int32
                              type: integer
                            periodSeconds:
                              description: How often (in seconds) to perform the probe.
                                Default to 10 seconds. Minimum value is 1.
                              format: int32
                              type: integer
                            successThreshold:
                              description: Minimum consecutive successes for the probe
                                to be considered successful after having failed. Defaults
                                to 1. Must be 1 for liveness and startup. Minimum
                                value is 1.
                              format: int32
                              type: integer
                            tcpSocket:
                              description: TCPSocket specifies an action involving
                                a TCP port.
                              properties:
                                host:
                                  description: 'Optional: Host name to connect to,
                                    defaults to the pod IP.'
                                  type: string
                                port:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Number or name of the port to access
                                    on the container. Number must be in the range
                                    1 to 65535. Name must be an IANA_SVC_NAME.
                                  x-kubernetes-int-or-string: true
                              required:
                              - port
                              type: object
                            terminationGracePeriodSeconds:
                              description: Optional duration in seconds the pod needs
                                to terminate gracefully upon probe failure. The grace
                                period is the duration in seconds after the processes
                                running in the pod are sent a termination signal and
                                the time when the processes are forcibly halted with
                                a kill signal. Set this value longer than the expected
                                cleanup time for your process. If this value is nil,
                                the pod's terminationGracePeriodSeconds will be used.
                                Otherwise, this value overrides the value provided
                                by the pod spec. Value must be non-negative integer.
                                The value zero indicates stop immediately via the
                                kill signal (no opportunity to shut down). This is
                                a beta field and requires enabling ProbeTerminationGracePeriod
                                feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds
                                is used if unset.
                              format: int64
                              type: integer
                            timeoutSeconds:
                              description: 'Number of seconds after which the probe
                                times out. Defaults to 1 second. Minimum value is
                                1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                              format: int32
                              type: integer
                          type: object
                        name:
                          description: Name of the container specified as a DNS_LABEL.
                            Each container in a pod must have a unique name (DNS_LABEL).
                            Cannot be updated.
                          type: string
                        ports:
                          description: List of ports to expose from the container.
                            Not specifying a port here DOES NOT prevent that port
                            from being exposed. Any port which is listening on the
                            default "0.0.0.0" address inside a container will be accessible
                            from the network. Modifying this array with strategic
                            merge patch may corrupt the data. For more information
                            See https://github.com/kubernetes/kubernetes/issues/108255.
                            Cannot be updated.
                          items:
                            description: ContainerPort represents a network port in
                              a single container.
                            properties:
                              containerPort:
                                description: Number of port to expose on the pod's
                                  IP address. This must be a valid port number, 0
                                  < x < 65536.
                                format: int32
                                type: integer
                              hostIP:
                                description: What host IP to bind the external port
                                  to.
                                type: string
                              hostPort:
                                description: Number of port to expose on the host.
                                  If specified, this must be a valid port number,
                                  0 < x < 65536. If HostNetwork is specified, this
                                  must match ContainerPort. Most containers do not
                                  need this.
                                format: int32
                                type: integer
                              name:
                                description: If specified, this must be an IANA_SVC_NAME
                                  and unique within the pod. Each named port in a
                                  pod must have a unique name. Name for the port that
                                  can be referred to by services.
                                type: string
                              protocol:
                                default: TCP
                                description: Protocol for port. Must be UDP, TCP,
                                  or SCTP. Defaults to "TCP".
                                type: string
                            required:
                            - containerPort
                            type: object
                          type: array
                          x-kubernetes-list-map-keys:
                          - containerPort
                          - protocol
                          x-kubernetes-list-type: map
                        readinessProbe:
                          description: 'Periodic probe of container service readiness.
                            Container will be removed from service endpoints if the
                            probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                          properties:
                            exec:
                              description: Exec specifies the action to take.
                              properties:
                                command:
                                  description: Command is the command line to execute
                                    inside the container, the working directory for
                                    the command  is root ('/') in the container's
                                    filesystem. The command is simply exec'd, it is
                                    not run inside a shell, so traditional shell instructions
                                    ('|', etc) won't work. To use a shell, you need
                                    to explicitly call out to that shell. Exit status
                                    of 0 is treated as live/healthy and non-zero is
                                    unhealthy.
                                  items:
                                    type: string
                                  type: array
                              type: object
                            failureThreshold:
                              description: Minimum consecutive failures for the probe
                                to be considered failed after having succeeded. Defaults
                                to 3. Minimum value is 1.
                              format: int32
                              type: integer
                            grpc:
                              description: GRPC specifies an action involving a GRPC
                                port.
                              properties:
                                port:
                                  description: Port number of the gRPC service. Number
                                    must be in the range 1 to 65535.
                                  format: int32
                                  type: integer
                                service:
                                  description: "Service is the name of the service
                                    to place in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
                                    \n If this is not specified, the default behavior
                                    is defined by gRPC."
                                  type: string
                              required:
                              - port
                              type: object
                            httpGet:
                              description: HTTPGet specifies the http request to perform.
                              properties:
                                host:
                                  description: Host name to connect to, defaults to
                                    the pod IP. You probably want to set "Host" in
                                    httpHeaders instead.
                                  type: string
                                httpHeaders:
                                  description: Custom headers to set in the request.
                                    HTTP allows repeated headers.
                                  items:
                                    description: HTTPHeader describes a custom header
                                      to be used in HTTP probes
                                    properties:
                                      name:
                                        description: The header field name. This will
                                          be canonicalized upon output, so case-variant
                                          names will be understood as the same header.
                                        type: string
                                      value:
                                        description: The header field value
                                        type: string
                                    required:
                                    - name
                                    - value
                                    type: object
                                  type: array
                                path:
                                  description: Path to access on the HTTP server.
                                  type: string
                                port:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Name or number of the port to access
                                    on the container. Number must be in the range
                                    1 to 65535. Name must be an IANA_SVC_NAME.
                                  x-kubernetes-int-or-string: true
                                scheme:
                                  description: Scheme to use for connecting to the
                                    host. Defaults to HTTP.
                                  type: string
                              required:
                              - port
                              type: object
                            initialDelaySeconds:
                              description: 'Number of seconds after the container
                                has started before liveness probes are initiated.
                                More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                              format: int32
                              type: integer
                            periodSeconds:
                              description: How often (in seconds) to perform the probe.
                                Default to 10 seconds. Minimum value is 1.
                              format: int32
                              type: integer
                            successThreshold:
                              description: Minimum consecutive successes for the probe
                                to be considered successful after having failed. Defaults
                                to 1. Must be 1 for liveness and startup. Minimum
                                value is 1.
                              format: int32
                              type: integer
                            tcpSocket:
                              description: TCPSocket specifies an action involving
                                a TCP port.
                              properties:
                                host:
                                  description: 'Optional: Host name to connect to,
                                    defaults to the pod IP.'
                                  type: string
                                port:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Number or name of the port to access
                                    on the container. Number must be in the range
                                    1 to 65535. Name must be an IANA_SVC_NAME.
                                  x-kubernetes-int-or-string: true
                              required:
                              - port
                              type: object
                            terminationGracePeriodSeconds:
                              description: Optional duration in seconds the pod needs
                                to terminate gracefully upon probe failure. The grace
                                period is the duration in seconds after the processes
                                running in the pod are sent a termination signal and
                                the time when the processes are forcibly halted with
                                a kill signal. Set this value longer than the expected
                                cleanup time for your process. If this value is nil,
                                the pod's terminationGracePeriodSeconds will be used.
                                Otherwise, this value overrides the value provided
                                by the pod spec. Value must be non-negative integer.
                                The value zero indicates stop immediately via the
                                kill signal (no opportunity to shut down). This is
                                a beta field and requires enabling ProbeTerminationGracePeriod
                                feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds
                                is used if unset.
                              format: int64
                              type: integer
                            timeoutSeconds:
                              description: 'Number of seconds after which the probe
                                times out. Defaults to 1 second. Minimum value is
                                1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                              format: int32
                              type: integer
                          type: object
                        resizePolicy:
                          description: Resources resize policy for the container.
                          items:
                            description: ContainerResizePolicy represents resource
                              resize policy for the container.
                            properties:
                              resourceName:
                                description: 'Name of the resource to which this resource
                                  resize policy applies. Supported values: cpu, memory.'
                                type: string
                              restartPolicy:
                                description: Restart policy to apply when specified
                                  resource is resized. If not specified, it defaults
                                  to NotRequired.
                                type: string
                            required:
                            - resourceName
                            - restartPolicy
                            type: object
                          type: array
                          x-kubernetes-list-type: atomic
                        resources:
                          description: 'Compute Resources required by this container.
                            Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                          properties:
                            claims:
                              description: "Claims lists the names of resources, defined
                                in spec.resourceClaims, that are used by this container.
                                \n This is an alpha field and requires enabling the
                                DynamicResourceAllocation feature gate. \n This field
                                is immutable. It can only be set for containers."
                              items:
                                description: ResourceClaim references one entry in
                                  PodSpec.ResourceClaims.
                                properties:
                                  name:
                                    description: Name must match the name of one entry
                                      in pod.spec.resourceClaims of the Pod where
                                      this field is used. It makes that resource available
                                      inside a container.
                                    type: string
                                required:
                                - name
                                type: object
                              type: array
                              x-kubernetes-list-map-keys:
                              - name
                              x-kubernetes-list-type: map
                            limits:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: 'Limits describes the maximum amount of
                                compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                              type: object
                            requests:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: 'Requests describes the minimum amount
                                of compute resources required. If Requests is omitted
                                for a container, it defaults to Limits if that is
                                explicitly specified, otherwise to an implementation-defined
                                value. Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                              type: object
                          type: object
                        restartPolicy:
                          description: 'RestartPolicy defines the restart behavior
                            of individual containers in a pod. This field may only
                            be set for init containers, and the only allowed value
                            is "Always". For non-init containers or when this field
                            is not specified, the restart behavior is defined by the
                            Pod''s restart policy and the container type. Setting
                            the RestartPolicy as "Always" for the init container will
                            have the following effect: this init container will be
                            continually restarted on exit until all regular containers
                            have terminated. Once all regular containers have completed,
                            all init containers with restartPolicy "Always" will be
                            shut down. This lifecycle differs from normal init containers
                            and is often referred to as a "sidecar" container. Although
                            this init container still starts in the init container
                            sequence, it does not wait for the container to complete
                            before proceeding to the next init container. Instead,
                            the next init container starts immediately after this
                            init container is started, or after any startupProbe has
                            successfully completed.'
                          type: string
                        securityContext:
                          description: 'SecurityContext defines the security options
                            the container should be run with. If set, the fields of
                            SecurityContext override the equivalent fields of PodSecurityContext.
                            More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/'
                          properties:
                            allowPrivilegeEscalation:
                              description: 'AllowPrivilegeEscalation controls whether
                                a process can gain more privileges than its parent
                                process. This bool directly controls if the no_new_privs
                                flag will be set on the container process. AllowPrivilegeEscalation
                                is true always when the container is: 1) run as Privileged
                                2) has CAP_SYS_ADMIN Note that this field cannot be
                                set when spec.os.name is windows.'
                              type: boolean
                            capabilities:
                              description: The capabilities to add/drop when running
                                containers. Defaults to the default set of capabilities
                                granted by the container runtime. Note that this field
                                cannot be set when spec.os.name is windows.
                              properties:
                                add:
                                  description: Added capabilities
                                  items:
                                    description: Capability represent POSIX capabilities
                                      type
                                    type: string
                                  type: array
                                drop:
                                  description: Removed capabilities
                                  items:
                                    description: Capability represent POSIX capabilities
                                      type
                                    type: string
                                  type: array
                              type: object
                            privileged:
                              description: Run container in privileged mode. Processes
                                in privileged containers are essentially equivalent
                                to root on the host. Defaults to false. Note that
                                this field cannot be set when spec.os.name is windows.
                              type: boolean
                            procMount:
                              description: procMount denotes the type of proc mount
                                to use for the containers. The default is DefaultProcMount
                                which uses the container runtime defaults for readonly
                                paths and masked paths. This requires the ProcMountType
                                feature flag to be enabled. Note that this field cannot
                                be set when spec.os.name is windows.
                              type: string
                            readOnlyRootFilesystem:
                              description: Whether this container has a read-only
                                root filesystem. Default is false. Note that this
                                field cannot be set when spec.os.name is windows.
                              type: boolean
                            runAsGroup:
                              description: The GID to run the entrypoint of the container
                                process. Uses runtime default if unset. May also be
                                set in PodSecurityContext.  If set in both SecurityContext
                                and PodSecurityContext, the value specified in SecurityContext
                                takes precedence. Note that this field cannot be set
                                when spec.os.name is windows.
                              format: int64
                              type: integer
                            runAsNonRoot:
                              description: Indicates that the container must run as
                                a non-root user. If true, the Kubelet will validate
                                the image at runtime to ensure that it does not run
                                as UID 0 (root) and fail to start the container if
                                it does. If unset or false, no such validation will
                                be performed. May also be set in PodSecurityContext.  If
                                set in both SecurityContext and PodSecurityContext,
                                the value specified in SecurityContext takes precedence.
                              type: boolean
                            runAsUser:
                              description: The UID to run the entrypoint of the container
                                process. Defaults to user specified in image metadata
                                if unspecified. May also be set in PodSecurityContext.  If
                                set in both SecurityContext and PodSecurityContext,
                                the value specified in SecurityContext takes precedence.
                                Note that this field cannot be set when spec.os.name
                                is windows.
                              format: int64
                              type: integer
                            seLinuxOptions:
                              description: The SELinux context to be applied to the
                                container. If unspecified, the container runtime will
                                allocate a random SELinux context for each container.  May
                                also be set in PodSecurityContext.  If set in both
                                SecurityContext and PodSecurityContext, the value
                                specified in SecurityContext takes precedence. Note
                                that this field cannot be set when spec.os.name is
                                windows.
                              properties:
                                level:
                                  description: Level is SELinux level label that applies
                                    to the container.
                                  type: string
                                role:
                                  description: Role is a SELinux role label that applies
                                    to the container.
                                  type: string
                                type:
                                  description: Type is a SELinux type label that applies
                                    to the container.
                                  type: string
                                user:
                                  description: User is a SELinux user label that applies
                                    to the container.
                                  type: string
                              type: object
                            seccompProfile:
                              description: The seccomp options to use by this container.
                                If seccomp options are provided at both the pod &
                                container level, the container options override the
                                pod options. Note that this field cannot be set when
                                spec.os.name is windows.
                              properties:
                                localhostProfile:
                                  description: localhostProfile indicates a profile
                                    defined in a file on the node should be used.
                                    The profile must be preconfigured on the node
                                    to work. Must be a descending path, relative to
                                    the kubelet's configured seccomp profile location.
                                    Must be set if type is "Localhost". Must NOT be
                                    set for any other type.
                                  type: string
                                type:
                                  description: "type indicates which kind of seccomp
                                    profile will be applied. Valid options are: \n
                                    Localhost - a profile defined in a file on the
                                    node should be used. RuntimeDefault - the container
                                    runtime default profile should be used. Unconfined
                                    - no profile should be applied."
                                  type: string
                              required:
                              - type
                              type: object
                            windowsOptions:
                              description: The Windows specific settings applied to
                                all containers. If unspecified, the options from the
                                PodSecurityContext will be used. If set in both SecurityContext
                                and PodSecurityContext, the value specified in SecurityContext
                                takes precedence. Note that this field cannot be set
                                when spec.os.name is linux.
                              properties:
                                gmsaCredentialSpec:
                                  description: GMSACredentialSpec is where the GMSA
                                    admission webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                                    inlines the contents of the GMSA credential spec
                                    named by the GMSACredentialSpecName field.
                                  type: string
                                gmsaCredentialSpecName:
                                  description: GMSACredentialSpecName is the name
                                    of the GMSA credential spec to use.
                                  type: string
                                hostProcess:
                                  description: HostProcess determines if a container
                                    should be run as a 'Host Process' container. All
                                    of a Pod's containers must have the same effective
                                    HostProcess value (it is not allowed to have a
                                    mix of HostProcess containers and non-HostProcess
                                    containers). In addition, if HostProcess is true
                                    then HostNetwork must also be set to true.
                                  type: boolean
                                runAsUserName:
                                  description: The UserName in Windows to run the
                                    entrypoint of the container process. Defaults
                                    to the user specified in image metadata if unspecified.
                                    May also be set in PodSecurityContext. If set
                                    in both SecurityContext and PodSecurityContext,
                                    the value specified in SecurityContext takes precedence.
                                  type: string
                              type: object
                          type: object
                        startupProbe:
                          description: 'StartupProbe indicates that the Pod has successfully
                            initialized. If specified, no other probes are executed
                            until this completes successfully. If this probe fails,
                            the Pod will be restarted, just as if the livenessProbe
                            failed. This can be used to provide different probe parameters
                            at the beginning of a Pod''s lifecycle, when it might
                            take a long time to load data or warm a cache, than during
                            steady-state operation. This cannot be updated. More info:
                            https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                          properties:
                            exec:
                              description: Exec specifies the action to take.
                              properties:
                                command:
                                  description: Command is the command line to execute
                                    inside the container, the working directory for
                                    the command  is root ('/') in the container's
                                    filesystem. The command is simply exec'd, it is
                                    not run inside a shell, so traditional shell instructions
                                    ('|', etc) won't work. To use a shell, you need
                                    to explicitly call out to that shell. Exit status
                                    of 0 is treated as live/healthy and non-zero is
                                    unhealthy.
                                  items:
                                    type: string
                                  type: array
                              type: object
                            failureThreshold:
                              description: Minimum consecutive failures for the probe
                                to be considered failed after having succeeded. Defaults
                                to 3. Minimum value is 1.
                              format: int32
                              type: integer
                            grpc:
                              description: GRPC specifies an action involving a GRPC
                                port.
                              properties:
                                port:
                                  description: Port number of the gRPC service. Number
                                    must be in the range 1 to 65535.
                                  format: int32
                                  type: integer
                                service:
                                  description: "Service is the name of the service
                                    to place in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
                                    \n If this is not specified, the default behavior
                                    is defined by gRPC."
                                  type: string
                              required:
                              - port
                              type: object
                            httpGet:
                              description: HTTPGet specifies the http request to perform.
                              properties:
                                host:
                                  description: Host name to connect to, defaults to
                                    the pod IP. You probably want to set "Host" in
                                    httpHeaders instead.
                                  type: string
                                httpHeaders:
                                  description: Custom headers to set in the request.
                                    HTTP allows repeated headers.
                                  items:
                                    description: HTTPHeader describes a custom header
                                      to be used in HTTP probes
                                    properties:
                                      name:
                                        description: The header field name. This will
                                          be canonicalized upon output, so case-variant
                                          names will be understood as the same header.
                                        type: string
                                      value:
                                        description: The header field value
                                        type: string
                                    required:
                                    - name
                                    - value
                                    type: object
                                  type: array
                                path:
                                  description: Path to access on the HTTP server.
                                  type: string
                                port:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Name or number of the port to access
                                    on the container. Number must be in the range
                                    1 to 65535. Name must be an IANA_SVC_NAME.
                                  x-kubernetes-int-or-string: true
                                scheme:
                                  description: Scheme to use for connecting to the
                                    host. Defaults to HTTP.
                                  type: string
                              required:
                              - port
                              type: object
                            initialDelaySeconds:
                              description: 'Number of seconds after the container
                                has started before liveness probes are initiated.
                                More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                              format: int32
                              type: integer
                            periodSeconds:
                              description: How often (in seconds) to perform the probe.
                                Default to 10 seconds. Minimum value is 1.
                              format: int32
                              type: integer
                            successThreshold:
                              description: Minimum consecutive successes for the probe
                                to be considered successful after having failed. Defaults
                                to 1. Must be 1 for liveness and startup. Minimum
                                value is 1.
                              format: int32
                              type: integer
                            tcpSocket:
                              description: TCPSocket specifies an action involving
                                a TCP port.
                              properties:
                                host:
                                  description: 'Optional: Host name to connect to,
                                    defaults to the pod IP.'
                                  type: string
                                port:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Number or name of the port to access
                                    on the container. Number must be in the range
                                    1 to 65535. Name must be an IANA_SVC_NAME.
                                  x-kubernetes-int-or-string: true
                              required:
                              - port
                              type: object
                            terminationGracePeriodSeconds:
                              description: Optional duration in seconds the pod needs
                                to terminate gracefully upon probe failure. The grace
                                period is the duration in seconds after the processes
                                running in the pod are sent a termination signal and
                                the time when the processes are forcibly halted with
                                a kill signal. Set this value longer than the expected
                                cleanup time for your process. If this value is nil,
                                the pod's terminationGracePeriodSeconds will be used.
                                Otherwise, this value overrides the value provided
                                by the pod spec. Value must be non-negative integer.
                                The value zero indicates stop immediately via the
                                kill signal (no opportunity to shut down). This is
                                a beta field and requires enabling ProbeTerminationGracePeriod
                                feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds
                                is used if unset.
                              format: int64
                              type: integer
                            timeoutSeconds:
                              description: 'Number of seconds after which the probe
                                times out. Defaults to 1 second. Minimum value is
                                1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                              format: int32
                              type: integer
                          type: object
                        stdin:
                          description: Whether this container should allocate a buffer
                            for stdin in the container runtime. If this is not set,
                            reads from stdin in the container will always result in
                            EOF. Default is false.
                          type: boolean
                        stdinOnce:
                          description: Whether the container runtime should close
                            the stdin channel after it has been opened by a single
                            attach. When stdin is true the stdin stream will remain
                            open across multiple attach sessions. If stdinOnce is
                            set to true, stdin is opened on container start, is empty
                            until the first client attaches to stdin, and then remains
                            open and accepts data until the client disconnects, at
                            which time stdin is closed and remains closed until the
                            container is restarted. If this flag is false, a container
                            processes that reads from stdin will never receive an
                            EOF. Default is false
                          type: boolean
                        terminationMessagePath:
                          description: 'Optional: Path at which the file to which
                            the container''s termination message will be written is
                            mounted into the container''s filesystem. Message written
                            is intended to be brief final status, such as an assertion
                            failure message. Will be truncated by the node if greater
                            than 4096 bytes. The total message length across all containers
                            will be limited to 12kb. Defaults to /dev/termination-log.
                            Cannot be updated.'
                          type: string
                        terminationMessagePolicy:
                          description: Indicate how the termination message should
                            be populated. File will use the contents of terminationMessagePath
                            to populate the container status message on both success
                            and failure. FallbackToLogsOnError will use the last chunk
                            of container log output if the termination message file
                            is empty and the container exited with an error. The log
                            output is limited to 2048 bytes or 80 lines, whichever
                            is smaller. Defaults to File. Cannot be updated.
                          type: string
                        tty:
                          description: Whether this container should allocate a TTY
                            for itself, also requires 'stdin' to be true. Default
                            is false.
                          type: boolean
                        volumeDevices:
                          description: volumeDevices is the list of block devices
                            to be used by the container.
                          items:
                            description: volumeDevice describes a mapping of a raw
                              block device within a container.
                            properties:
                              devicePath:
                                description: devicePath is the path inside of the
                                  container that the device will be mapped to.
                                type: string
                              name:
                                description: name must match the name of a persistentVolumeClaim
                                  in the pod
                                type: string
                            required:
                            - devicePath
                            - name
                            type: object
                          type: array
                        volumeMounts:
                          description: Pod volumes to mount into the container's filesystem.
                            Cannot be updated.
                          items:
                            description: VolumeMount describes a mounting of a Volume
                              within a container.
                            properties:
                              mountPath:
                                description: Path within the container at which the
                                  volume should be mounted.  Must not contain ':'.
                                type: string
                              mountPropagation:
                                description: mountPropagation determines how mounts
                                  are propagated from the host to container and the
                                  other way around. When not set, MountPropagationNone
                                  is used. This field is beta in 1.10.
                                type: string
                              name:
                                description: This must match the Name of a Volume.
                                type: string
                              readOnly:
                                description: Mounted read-only if true, read-write
                                  otherwise (false or unspecified). Defaults to false.
                                type: boolean
                              subPath:
                                description: Path within the volume from which the
                                  container's volume should be mounted. Defaults to
                                  "" (volume's root).
                                type: string
                              subPathExpr:
                                description: Expanded path within the volume from
                                  which the container's volume should be mounted.
                                  Behaves similarly to SubPath but environment variable
                                  references $(VAR_NAME) are expanded using the container's
                                  environment. Defaults to "" (volume's root). SubPathExpr
                                  and SubPath are mutually exclusive.
                                type: string
                            required:
                            - mountPath
                            - name
                            type: object
                          type: array
                        workingDir:
                          description: Container's working directory. If not specified,
                            the container runtime's default will be used, which might
                            be configured in the container image. Cannot be updated.
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                  nodeName:
                    description: NodeName is a request to schedule this pod onto a
                      specific node. If it is non-empty, the scheduler simply schedules
                      this pod onto that node, assuming that it fits resource requirements.
                    type: string
                  nodeSelector:
                    additionalProperties:
                      type: string
                    description: 'NodeSelector is a selector which must be true for
                      the pod to fit on a node. Selector which must match a node''s
                      labels for the pod to be scheduled on that node. More info:
                      https://kubernetes.io/docs/concepts/configuration/assign-pod-node/'
                    type: object
                    x-kubernetes-map-type: atomic
                  os:
                    description: "Specifies the OS of the containers in the pod. Some
                      pod and container fields are restricted if this is set. \n If
                      the OS field is set to linux, the following fields must be unset:
                      -securityContext.windowsOptions \n If the OS field is set to
                      windows, following fields must be unset: - spec.hostPID - spec.hostIPC
                      - spec.hostUsers - spec.securityContext.seLinuxOptions - spec.securityContext.seccompProfile
                      - spec.securityContext.fsGroup - spec.securityContext.fsGroupChangePolicy
                      - spec.securityContext.sysctls - spec.shareProcessNamespace
                      - spec.securityContext.runAsUser - spec.securityContext.runAsGroup
                      - spec.securityContext.supplementalGroups - spec.containers[*].securityContext.seLinuxOptions
                      - spec.containers[*].securityContext.seccompProfile - spec.containers[*].securityContext.capabilities
                      - spec.containers[*].securityContext.readOnlyRootFilesystem
                      - spec.containers[*].securityContext.privileged - spec.containers[*].securityContext.allowPrivilegeEscalation
                      - spec.containers[*].securityContext.procMount - spec.containers[*].securityContext.runAsUser
                      - spec.containers[*].securityContext.runAsGroup"
                    properties:
                      name:
                        description: 'Name is the name of the operating system. The
                          currently supported values are linux and windows. Additional
                          value may be defined in future and can be one of: https://github.com/opencontainers/runtime-spec/blob/master/config.md#platform-specific-configuration
                          Clients should expect to handle additional values and treat
                          unrecognized values in this field as os: null'
                        type: string
                    required:
                    - name
                    type: object
                  overhead:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Overhead represents the resource overhead associated
                      with running a pod for a given RuntimeClass. This field will
                      be autopopulated at admission time by the RuntimeClass admission
                      controller. If the RuntimeClass admission controller is enabled,
                      overhead must not be set in Pod create requests. The RuntimeClass
                      admission controller will reject Pod create requests which have
                      the overhead already set. If RuntimeClass is configured and
                      selected in the PodSpec, Overhead will be set to the value defined
                      in the corresponding RuntimeClass, otherwise it will remain
                      unset and treated as zero. More info: https://git.k8s.io/enhancements/keps/sig-node/688-pod-overhead/README.md'
                    type: object
                  preemptionPolicy:
                    description: PreemptionPolicy is the Policy for preempting pods
                      with lower priority. One of Never, PreemptLowerPriority. Defaults
                      to PreemptLowerPriority if unset.
                    type: string
                  priority:
                    description: The priority value. Various system components use
                      this field to find the priority of the pod. When Priority Admission
                      Controller is enabled, it prevents users from setting this field.
                      The admission controller populates this field from PriorityClassName.
                      The higher the value, the higher the priority.
                    format: int32
                    type: integer
                  priorityClassName:
                    description: If specified, indicates the pod's priority. "system-node-critical"
                      and "system-cluster-critical" are two special keywords which
                      indicate the highest priorities with the former being the highest
                      priority. Any other name must be defined by creating a PriorityClass
                      object with that name. If not specified, the pod priority will
                      be default or zero if there is no default.
                    type: string
                  readinessGates:
                    description: 'If specified, all readiness gates will be evaluated
                      for pod readiness. A pod is ready when all its containers are
                      ready AND all conditions specified in the readiness gates have
                      status equal to "True" More info: https://git.k8s.io/enhancements/keps/sig-network/580-pod-readiness-gates'
                    items:
                      description: PodReadinessGate contains the reference to a pod
                        condition
                      properties:
                        conditionType:
                          description: ConditionType refers to a condition in the
                            pod's condition list with matching type.
                          type: string
                      required:
                      - conditionType
                      type: object
                    type: array
                  resourceClaims:
                    description: "ResourceClaims defines which ResourceClaims must
                      be allocated and reserved before the Pod is allowed to start.
                      The resources will be made available to those containers which
                      consume them by name. \n This is an alpha field and requires
                      enabling the DynamicResourceAllocation feature gate. \n This
                      field is immutable."
                    items:
                      description: PodResourceClaim references exactly one ResourceClaim
                        through a ClaimSource. It adds a name to it that uniquely
                        identifies the ResourceClaim inside the Pod. Containers that
                        need access to the ResourceClaim reference it with this name.
                      properties:
                        name:
                          description: Name uniquely identifies this resource claim
                            inside the pod. This must be a DNS_LABEL.
                          type: string
                        source:
                          description: Source describes where to find the ResourceClaim.
                          properties:
                            resourceClaimName:
                              description: ResourceClaimName is the name of a ResourceClaim
                                object in the same namespace as this pod.
                              type: string
                            resourceClaimTemplateName:
                              description: "ResourceClaimTemplateName is the name
                                of a ResourceClaimTemplate object in the same namespace
                                as this pod. \n The template will be used to create
                                a new ResourceClaim, which will be bound to this pod.
                                When this pod is deleted, the ResourceClaim will also
                                be deleted. The pod name and resource name, along
                                with a generated component, will be used to form a
                                unique name for the ResourceClaim, which will be recorded
                                in pod.status.resourceClaimStatuses. \n This field
                                is immutable and no changes will be made to the corresponding
                                ResourceClaim by the control plane after creating
                                the ResourceClaim."
                              type: string
                          type: object
                      required:
                      - name
                      type: object
                    type: array
                    x-kubernetes-list-map-keys:
                    - name
                    x-kubernetes-list-type: map
                  restartPolicy:
                    description: 'Restart policy for all containers within the pod.
                      One of Always, OnFailure, Never. In some contexts, only a subset
                      of those values may be permitted. Default to Always. More info:
                      https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#restart-policy'
                    type: string
                  runtimeClassName:
                    description: 'RuntimeClassName refers to a RuntimeClass object
                      in the node.k8s.io group, which should be used to run this pod.  If
                      no RuntimeClass resource matches the named class, the pod will
                      not be run. If unset or empty, the "legacy" RuntimeClass will
                      be used, which is an implicit class with an empty definition
                      that uses the default runtime handler. More info: https://git.k8s.io/enhancements/keps/sig-node/585-runtime-class'
                    type: string
                  schedulerName:
                    description: If specified, the pod will be dispatched by specified
                      scheduler. If not specified, the pod will be dispatched by default
                      scheduler.
                    type: string
                  schedulingGates:
                    description: "SchedulingGates is an opaque list of values that
                      if specified will block scheduling the pod. If schedulingGates
                      is not empty, the pod will stay in the SchedulingGated state
                      and the scheduler will not attempt to schedule the pod. \n SchedulingGates
                      can only be set at pod creation time, and be removed only afterwards.
                      \n This is a beta feature enabled by the PodSchedulingReadiness
                      feature gate."
                    items:
                      description: PodSchedulingGate is associated to a Pod to guard
                        its scheduling.
                      properties:
                        name:
                          description: Name of the scheduling gate. Each scheduling
                            gate must have a unique name field.
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                    x-kubernetes-list-map-keys:
                    - name
                    x-kubernetes-list-type: map
                  securityContext:
                    description: 'SecurityContext holds pod-level security attributes
                      and common container settings. Optional: Defaults to empty.  See
                      type description for default values of each field.'
                    properties:
                      fsGroup:
                        description: "A special supplemental group that applies to
                          all containers in a pod. Some volume types allow the Kubelet
                          to change the ownership of that volume to be owned by the
                          pod: \n 1. The owning GID will be the FSGroup 2. The setgid
                          bit is set (new files created in the volume will be owned
                          by FSGroup) 3. The permission bits are OR'd with rw-rw----
                          \n If unset, the Kubelet will not modify the ownership and
                          permissions of any volume. Note that this field cannot be
                          set when spec.os.name is windows."
                        format: int64
                        type: integer
                      fsGroupChangePolicy:
                        description: 'fsGroupChangePolicy defines behavior of changing
                          ownership and permission of the volume before being exposed
                          inside Pod. This field will only apply to volume types which
                          support fsGroup based ownership(and permissions). It will
                          have no effect on ephemeral volume types such as: secret,
                          configmaps and emptydir. Valid values are "OnRootMismatch"
                          and "Always". If not specified, "Always" is used. Note that
                          this field cannot be set when spec.os.name is windows.'
                        type: string
                      runAsGroup:
                        description: The GID to run the entrypoint of the container
                          process. Uses runtime default if unset. May also be set
                          in SecurityContext.  If set in both SecurityContext and
                          PodSecurityContext, the value specified in SecurityContext
                          takes precedence for that container. Note that this field
                          cannot be set when spec.os.name is windows.
                        format: int64
                        type: integer
                      runAsNonRoot:
                        description: Indicates that the container must run as a non-root
                          user. If true, the Kubelet will validate the image at runtime
                          to ensure that it does not run as UID 0 (root) and fail
                          to start the container if it does. If unset or false, no
                          such validation will be performed. May also be set in SecurityContext.  If
                          set in both SecurityContext and PodSecurityContext, the
                          value specified in SecurityContext takes precedence.
                        type: boolean
                      runAsUser:
                        description: The UID to run the entrypoint of the container
                          process. Defaults to user specified in image metadata if
                          unspecified. May also be set in SecurityContext.  If set
                          in both SecurityContext and PodSecurityContext, the value
                          specified in SecurityContext takes precedence for that container.
                          Note that this field cannot be set when spec.os.name is
                          windows.
                        format: int64
                        type: integer
                      seLinuxOptions:
                        description: The SELinux context to be applied to all containers.
                          If unspecified, the container runtime will allocate a random
                          SELinux context for each container.  May also be set in
                          SecurityContext.  If set in both SecurityContext and PodSecurityContext,
                          the value specified in SecurityContext takes precedence
                          for that container. Note that this field cannot be set when
                          spec.os.name is windows.
                        properties:
                          level:
                            description: Level is SELinux level label that applies
                              to the container.
                            type: string
                          role:
                            description: Role is a SELinux role label that applies
                              to the container.
                            type: string
                          type:
                            description: Type is a SELinux type label that applies
                              to the container.
                            type: string
                          user:
                            description: User is a SELinux user label that applies
                              to the container.
                            type: string
                        type: object
                      seccompProfile:
                        description: The seccomp options to use by the containers
                          in this pod. Note that this field cannot be set when spec.os.name
                          is windows.
                        properties:
                          localhostProfile:
                            description: localhostProfile indicates a profile defined
                              in a file on the node should be used. The profile must
                              be preconfigured on the node to work. Must be a descending
                              path, relative to the kubelet's configured seccomp profile
                              location. Must be set if type is "Localhost". Must NOT
                              be set for any other type.
                            type: string
                          type:
                            description: "type indicates which kind of seccomp profile
                              will be applied. Valid options are: \n Localhost - a
                              profile defined in a file on the node should be used.
                              RuntimeDefault - the container runtime default profile
                              should be used. Unconfined - no profile should be applied."
                            type: string
                        required:
                        - type
                        type: object
                      supplementalGroups:
                        description: A list of groups applied to the first process
                          run in each container, in addition to the container's primary
                          GID, the fsGroup (if specified), and group memberships defined
                          in the container image for the uid of the container process.
                          If unspecified, no additional groups are added to any container.
                          Note that group memberships defined in the container image
                          for the uid of the container process are still effective,
                          even if they are not included in this list. Note that this
                          field cannot be set when spec.os.name is windows.
                        items:
                          format: int64
                          type: integer
                        type: array
                      sysctls:
                        description: Sysctls hold a list of namespaced sysctls used
                          for the pod. Pods with unsupported sysctls (by the container
                          runtime) might fail to launch. Note that this field cannot
                          be set when spec.os.name is windows.
                        items:
                          description: Sysctl defines a kernel parameter to be set
                          properties:
                            name:
                              description: Name of a property to set
                              type: string
                            value:
                              description: Value of a property to set
                              type: string
                          required:
                          - name
                          - value
                          type: object
                        type: array
                      windowsOptions:
                        description: The Windows specific settings applied to all
                          containers. If unspecified, the options within a container's
                          SecurityContext will be used. If set in both SecurityContext
                          and PodSecurityContext, the value specified in SecurityContext
                          takes precedence. Note that this field cannot be set when
                          spec.os.name is linux.
                        properties:
                          gmsaCredentialSpec:
                            description: GMSACredentialSpec is where the GMSA admission
                              webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                              inlines the contents of the GMSA credential spec named
                              by the GMSACredentialSpecName field.
                            type: string
                          gmsaCredentialSpecName:
                            description: GMSACredentialSpecName is the name of the
                              GMSA credential spec to use.
                            type: string
                          hostProcess:
                            description: HostProcess determines if a container should
                              be run as a 'Host Process' container. All of a Pod's
                              containers must have the same effective HostProcess
                              value (it is not allowed to have a mix of HostProcess
                              containers and non-HostProcess containers). In addition,
                              if HostProcess is true then HostNetwork must also be
                              set to true.
                            type: boolean
                          runAsUserName:
                            description: The UserName in Windows to run the entrypoint
                              of the container process. Defaults to the user specified
                              in image metadata if unspecified. May also be set in
                              PodSecurityContext. If set in both SecurityContext and
                              PodSecurityContext, the value specified in SecurityContext
                              takes precedence.
                            type: string
                        type: object
                    type: object
                  serviceAccount:
                    description: 'DeprecatedServiceAccount is a depreciated alias
                      for ServiceAccountName. Deprecated: Use serviceAccountName instead.'
                    type: string
                  serviceAccountName:
                    description: 'ServiceAccountName is the name of the ServiceAccount
                      to use to run this pod. More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/'
                    type: string
                  setHostnameAsFQDN:
                    description: If true the pod's hostname will be configured as
                      the pod's FQDN, rather than the leaf name (the default). In
                      Linux containers, this means setting the FQDN in the hostname
                      field of the kernel (the nodename field of struct utsname).
                      In Windows containers, this means setting the registry value
                      of hostname for the registry key HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters
                      to FQDN. If a pod does not have FQDN, this has no effect. Default
                      to false.
                    type: boolean
                  shareProcessNamespace:
                    description: 'Share a single process namespace between all of
                      the containers in a pod. When this is set containers will be
                      able to view and signal processes from other containers in the
                      same pod, and the first process in each container will not be
                      assigned PID 1. HostPID and ShareProcessNamespace cannot both
                      be set. Optional: Default to false.'
                    type: boolean
                  subdomain:
                    description: If specified, the fully qualified Pod hostname will
                      be "<hostname>.<subdomain>.<pod namespace>.svc.<cluster domain>".
                      If not specified, the pod will not have a domainname at all.
                    type: string
                  terminationGracePeriodSeconds:
                    description: Optional duration in seconds the pod needs to terminate
                      gracefully. May be decreased in delete request. Value must be
                      non-negative integer. The value zero indicates stop immediately
                      via the kill signal (no opportunity to shut down). If this value
                      is nil, the default grace period will be used instead. The grace
                      period is the duration in seconds after the processes running
                      in the pod are sent a termination signal and the time when the
                      processes are forcibly halted with a kill signal. Set this value
                      longer than the expected cleanup time for your process. Defaults
                      to 30 seconds.
                    format: int64
                    type: integer
                  tolerations:
                    description: If specified, the pod's tolerations.
                    items:
                      description: The pod this Toleration is attached to tolerates
                        any taint that matches the triple <key,value,effect> using
                        the matching operator <operator>.
                      properties:
                        effect:
                          description: Effect indicates the taint effect to match.
                            Empty means match all taint effects. When specified, allowed
                            values are NoSchedule, PreferNoSchedule and NoExecute.
                          type: string
                        key:
                          description: Key is the taint key that the toleration applies
                            to. Empty means match all taint keys. If the key is empty,
                            operator must be Exists; this combination means to match
                            all values and all keys.
                          type: string
                        operator:
                          description: Operator represents a key's relationship to
                            the value. Valid operators are Exists and Equal. Defaults
                            to Equal. Exists is equivalent to wildcard for value,
                            so that a pod can tolerate all taints of a particular
                            category.
                          type: string
                        tolerationSeconds:
                          description: TolerationSeconds represents the period of
                            time the toleration (which must be of effect NoExecute,
                            otherwise this field is ignored) tolerates the taint.
                            By default, it is not set, which means tolerate the taint
                            forever (do not evict). Zero and negative values will
                            be treated as 0 (evict immediately) by the system.
                          format: int64
                          type: integer
                        value:
                          description: Value is the taint value the toleration matches
                            to. If the operator is Exists, the value should be empty,
                            otherwise just a regular string.
                          type: string
                      type: object
                    type: array
                  topologySpreadConstraints:
                    description: TopologySpreadConstraints describes how a group of
                      pods ought to spread across topology domains. Scheduler will
                      schedule pods in a way which abides by the constraints. All
                      topologySpreadConstraints are ANDed.
                    items:
                      description: TopologySpreadConstraint specifies how to spread
                        matching pods among the given topology.
                      properties:
                        labelSelector:
                          description: LabelSelector is used to find matching pods.
                            Pods that match this label selector are counted to determine
                            the number of pods in their corresponding topology domain.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: A label selector requirement is a selector
                                  that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: operator represents a key's relationship
                                      to a set of values. Valid operators are In,
                                      NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: values is an array of string values.
                                      If the operator is In or NotIn, the values array
                                      must be non-empty. If the operator is Exists
                                      or DoesNotExist, the values array must be empty.
                                      This array is replaced during a strategic merge
                                      patch.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: matchLabels is a map of {key,value} pairs.
                                A single {key,value} in the matchLabels map is equivalent
                                to an element of matchExpressions, whose key field
                                is "key", the operator is "In", and the values array
                                contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                          x-kubernetes-map-type: atomic
                        matchLabelKeys:
                          description: "MatchLabelKeys is a set of pod label keys
                            to select the pods over which spreading will be calculated.
                            The keys are used to lookup values from the incoming pod
                            labels, those key-value labels are ANDed with labelSelector
                            to select the group of existing pods over which spreading
                            will be calculated for the incoming pod. The same key
                            is forbidden to exist in both MatchLabelKeys and LabelSelector.
                            MatchLabelKeys cannot be set when LabelSelector isn't
                            set. Keys that don't exist in the incoming pod labels
                            will be ignored. A null or empty list means only match
                            against labelSelector. \n This is a beta field and requires
                            the MatchLabelKeysInPodTopologySpread feature gate to
                            be enabled (enabled by default)."
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                        maxSkew:
                          description: 'MaxSkew describes the degree to which pods
                            may be unevenly distributed. When `whenUnsatisfiable=DoNotSchedule`,
                            it is the maximum permitted difference between the number
                            of matching pods in the target topology and the global
                            minimum. The global minimum is the minimum number of matching
                            pods in an eligible domain or zero if the number of eligible
                            domains is less than MinDomains. For example, in a 3-zone
                            cluster, MaxSkew is set to 1, and pods with the same labelSelector
                            spread as 2/2/1: In this case, the global minimum is 1.
                            | zone1 | zone2 | zone3 | |  P P  |  P P  |   P   | -
                            if MaxSkew is 1, incoming pod can only be scheduled to
                            zone3 to become 2/2/2; scheduling it onto zone1(zone2)
                            would make the ActualSkew(3-1) on zone1(zone2) violate
                            MaxSkew(1). - if MaxSkew is 2, incoming pod can be scheduled
                            onto any zone. When `whenUnsatisfiable=ScheduleAnyway`,
                            it is used to give higher precedence to topologies that
                            satisfy it. It''s a required field. Default value is 1
                            and 0 is not allowed.'
                          format: int32
                          type: integer
                        minDomains:
                          description: "MinDomains indicates a minimum number of eligible
                            domains. When the number of eligible domains with matching
                            topology keys is less than minDomains, Pod Topology Spread
                            treats \"global minimum\" as 0, and then the calculation
                            of Skew is performed. And when the number of eligible
                            domains with matching topology keys equals or greater
                            than minDomains, this value has no effect on scheduling.
                            As a result, when the number of eligible domains is less
                            than minDomains, scheduler won't schedule more than maxSkew
                            Pods to those domains. If value is nil, the constraint
                            behaves as if MinDomains is equal to 1. Valid values are
                            integers greater than 0. When value is not nil, WhenUnsatisfiable
                            must be DoNotSchedule. \n For example, in a 3-zone cluster,
                            MaxSkew is set to 2, MinDomains is set to 5 and pods with
                            the same labelSelector spread as 2/2/2: | zone1 | zone2
                            | zone3 | |  P P  |  P P  |  P P  | The number of domains
                            is less than 5(MinDomains), so \"global minimum\" is treated
                            as 0. In this situation, new pod with the same labelSelector
                            cannot be scheduled, because computed skew will be 3(3
                            - 0) if new Pod is scheduled to any of the three zones,
                            it will violate MaxSkew. \n This is a beta field and requires
                            the MinDomainsInPodTopologySpread feature gate to be enabled
                            (enabled by default)."
                          format: int32
                          type: integer
                        nodeAffinityPolicy:
                          description: "NodeAffinityPolicy indicates how we will treat
                            Pod's nodeAffinity/nodeSelector when calculating pod topology
                            spread skew. Options are: - Honor: only nodes matching
                            nodeAffinity/nodeSelector are included in the calculations.
                            - Ignore: nodeAffinity/nodeSelector are ignored. All nodes
                            are included in the calculations. \n If this value is
                            nil, the behavior is equivalent to the Honor policy. This
                            is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread
                            feature flag."
                          type: string
                        nodeTaintsPolicy:
                          description: "NodeTaintsPolicy indicates how we will treat
                            node taints when calculating pod topology spread skew.
                            Options are: - Honor: nodes without taints, along with
                            tainted nodes for which the incoming pod has a toleration,
                            are included. - Ignore: node taints are ignored. All nodes
                            are included. \n If this value is nil, the behavior is
                            equivalent to the Ignore policy. This is a beta-level
                            feature default enabled by the NodeInclusionPolicyInPodTopologySpread
                            feature flag."
                          type: string
                        topologyKey:
                          description: TopologyKey is the key of node labels. Nodes
                            that have a label with this key and identical values are
                            considered to be in the same topology. We consider each
                            <key, value> as a "bucket", and try to put balanced number
                            of pods into each bucket. We define a domain as a particular
                            instance of a topology. Also, we define an eligible domain
                            as a domain whose nodes meet the requirements of nodeAffinityPolicy
                            and nodeTaintsPolicy. e.g. If TopologyKey is "kubernetes.io/hostname",
                            each Node is a domain of that topology. And, if TopologyKey
                            is "topology.kubernetes.io/zone", each zone is a domain
                            of that topology. It's a required field.
                          type: string
                        whenUnsatisfiable:
                          description: 'WhenUnsatisfiable indicates how to deal with
                            a pod if it doesn''t satisfy the spread constraint. -
                            DoNotSchedule (default) tells the scheduler not to schedule
                            it. - ScheduleAnyway tells the scheduler to schedule the
                            pod in any location, but giving higher precedence to topologies
                            that would help reduce the skew. A constraint is considered
                            "Unsatisfiable" for an incoming pod if and only if every
                            possible node assignment for that pod would violate "MaxSkew"
                            on some topology. For example, in a 3-zone cluster, MaxSkew
                            is set to 1, and pods with the same labelSelector spread
                            as 3/1/1: | zone1 | zone2 | zone3 | | P P P |   P   |   P   |
                            If WhenUnsatisfiable is set to DoNotSchedule, incoming
                            pod can only be scheduled to zone2(zone3) to become 3/2/1(3/1/2)
                            as ActualSkew(2-1) on zone2(zone3) satisfies MaxSkew(1).
                            In other words, the cluster can still be imbalanced, but
                            scheduler won''t make it *more* imbalanced. It''s a required
                            field.'
                          type: string
                      required:
                      - maxSkew
                      - topologyKey
                      - whenUnsatisfiable
                      type: object
                    type: array
                    x-kubernetes-list-map-keys:
                    - topologyKey
                    - whenUnsatisfiable
                    x-kubernetes-list-type: map
                  volumes:
                    description: 'List of volumes that can be mounted by containers
                      belonging to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes'
                    items:
                      description: Volume represents a named volume in a pod that
                        may be accessed by any container in the pod.
                      properties:
                        awsElasticBlockStore:
                          description: 'awsElasticBlockStore represents an AWS Disk
                            resource that is attached to a kubelet''s host machine
                            and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                          properties:
                            fsType:
                              description: 'fsType is the filesystem type of the volume
                                that you want to mount. Tip: Ensure that the filesystem
                                type is supported by the host operating system. Examples:
                                "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4"
                                if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                                TODO: how do we prevent errors in the filesystem from
                                compromising the machine'
                              type: string
                            partition:
                              description: 'partition is the partition in the volume
                                that you want to mount. If omitted, the default is
                                to mount by volume name. Examples: For volume /dev/sda1,
                                you specify the partition as "1". Similarly, the volume
                                partition for /dev/sda is "0" (or you can leave the
                                property empty).'
                              format: int32
                              type: integer
                            readOnly:
                              description: 'readOnly value true will force the readOnly
                                setting in VolumeMounts. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                              type: boolean
                            volumeID:
                              description: 'volumeID is unique ID of the persistent
                                disk resource in AWS (Amazon EBS volume). More info:
                                https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                              type: string
                          required:
                          - volumeID
                          type: object
                        azureDisk:
                          description: azureDisk represents an Azure Data Disk mount
                            on the host and bind mount to the pod.
                          properties:
                            cachingMode:
                              description: 'cachingMode is the Host Caching mode:
                                None, Read Only, Read Write.'
                              type: string
                            diskName:
                              description: diskName is the Name of the data disk in
                                the blob storage
                              type: string
                            diskURI:
                              description: diskURI is the URI of data disk in the
                                blob storage
                              type: string
                            fsType:
                              description: fsType is Filesystem type to mount. Must
                                be a filesystem type supported by the host operating
                                system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred
                                to be "ext4" if unspecified.
                              type: string
                            kind:
                              description: 'kind expected values are Shared: multiple
                                blob disks per storage account  Dedicated: single
                                blob disk per storage account  Managed: azure managed
                                data disk (only in managed availability set). defaults
                                to shared'
                              type: string
                            readOnly:
                              description: readOnly Defaults to false (read/write).
                                ReadOnly here will force the ReadOnly setting in VolumeMounts.
                              type: boolean
                          required:
                          - diskName
                          - diskURI
                          type: object
                        azureFile:
                          description: azureFile represents an Azure File Service
                            mount on the host and bind mount to the pod.
                          properties:
                            readOnly:
                              description: readOnly defaults to false (read/write).
                                ReadOnly here will force the ReadOnly setting in VolumeMounts.
                              type: boolean
                            secretName:
                              description: secretName is the  name of secret that
                                contains Azure Storage Account Name and Key
                              type: string
                            shareName:
                              description: shareName is the azure share Name
                              type: string
                          required:
                          - secretName
                          - shareName
                          type: object
                        cephfs:
                          description: cephFS represents a Ceph FS mount on the host
                            that shares a pod's lifetime
                          properties:
                            monitors:
                              description: 'monitors is Required: Monitors is a collection
                                of Ceph monitors More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                              items:
                                type: string
                              type: array
                            path:
                              description: 'path is Optional: Used as the mounted
                                root, rather than the full Ceph tree, default is /'
                              type: string
                            readOnly:
                              description: 'readOnly is Optional: Defaults to false
                                (read/write). ReadOnly here will force the ReadOnly
                                setting in VolumeMounts. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                              type: boolean
                            secretFile:
                              description: 'secretFile is Optional: SecretFile is
                                the path to key ring for User, default is /etc/ceph/user.secret
                                More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                              type: string
                            secretRef:
                              description: 'secretRef is Optional: SecretRef is reference
                                to the authentication secret for User, default is
                                empty. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                              properties:
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                              type: object
                              x-kubernetes-map-type: atomic
                            user:
                              description: 'user is optional: User is the rados user
                                name, default is admin More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                              type: string
                          required:
                          - monitors
                          type: object
                        cinder:
                          description: 'cinder represents a cinder volume attached
                            and mounted on kubelets host machine. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                          properties:
                            fsType:
                              description: 'fsType is the filesystem type to mount.
                                Must be a filesystem type supported by the host operating
                                system. Examples: "ext4", "xfs", "ntfs". Implicitly
                                inferred to be "ext4" if unspecified. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                              type: string
                            readOnly:
                              description: 'readOnly defaults to false (read/write).
                                ReadOnly here will force the ReadOnly setting in VolumeMounts.
                                More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                              type: boolean
                            secretRef:
                              description: 'secretRef is optional: points to a secret
                                object containing parameters used to connect to OpenStack.'
                              properties:
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                              type: object
                              x-kubernetes-map-type: atomic
                            volumeID:
                              description: 'volumeID used to identify the volume in
                                cinder. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                              type: string
                          required:
                          - volumeID
                          type: object
                        configMap:
                          description: configMap represents a configMap that should
                            populate this volume
                          properties:
                            defaultMode:
                              description: 'defaultMode is optional: mode bits used
                                to set permissions on created files by default. Must
                                be an octal value between 0000 and 0777 or a decimal
                                value between 0 and 511. YAML accepts both octal and
                                decimal values, JSON requires decimal values for mode
                                bits. Defaults to 0644. Directories within the path
                                are not affected by this setting. This might be in
                                conflict with other options that affect the file mode,
                                like fsGroup, and the result can be other mode bits
                                set.'
                              format: int32
                              type: integer
                            items:
                              description: items if unspecified, each key-value pair
                                in the Data field of the referenced ConfigMap will
                                be projected into the volume as a file whose name
                                is the key and content is the value. If specified,
                                the listed keys will be projected into the specified
                                paths, and unlisted keys will not be present. If a
                                key is specified which is not present in the ConfigMap,
                                the volume setup will error unless it is marked optional.
                                Paths must be relative and may not contain the '..'
                                path or start with '..'.
                              items:
                                description: Maps a string key to a path within a
                                  volume.
                                properties:
                                  key:
                                    description: key is the key to project.
                                    type: string
                                  mode:
                                    description: 'mode is Optional: mode bits used
                                      to set permissions on this file. Must be an
                                      octal value between 0000 and 0777 or a decimal
                                      value between 0 and 511. YAML accepts both octal
                                      and decimal values, JSON requires decimal values
                                      for mode bits. If not specified, the volume
                                      defaultMode will be used. This might be in conflict
                                      with other options that affect the file mode,
                                      like fsGroup, and the result can be other mode
                                      bits set.'
                                    format: int32
                                    type: integer
                                  path:
                                    description: path is the relative path of the
                                      file to map the key to. May not be an absolute
                                      path. May not contain the path element '..'.
                                      May not start with the string '..'.
                                    type: string
                                required:
                                - key
                                - path
                                type: object
                              type: array
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: optional specify whether the ConfigMap
                                or its keys must be defined
                              type: boolean
                          type: object
                          x-kubernetes-map-type: atomic
                        csi:
                          description: csi (Container Storage Interface) represents
                            ephemeral storage that is handled by certain external
                            CSI drivers (Beta feature).
                          properties:
                            driver:
                              description: driver is the name of the CSI driver that
                                handles this volume. Consult with your admin for the
                                correct name as registered in the cluster.
                              type: string
                            fsType:
                              description: fsType to mount. Ex. "ext4", "xfs", "ntfs".
                                If not provided, the empty value is passed to the
                                associated CSI driver which will determine the default
                                filesystem to apply.
                              type: string
                            nodePublishSecretRef:
                              description: nodePublishSecretRef is a reference to
                                the secret object containing sensitive information
                                to pass to the CSI driver to complete the CSI NodePublishVolume
                                and NodeUnpublishVolume calls. This field is optional,
                                and  may be empty if no secret is required. If the
                                secret object contains more than one secret, all secret
                                references are passed.
                              properties:
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                              type: object
                              x-kubernetes-map-type: atomic
                            readOnly:
                              description: readOnly specifies a read-only configuration
                                for the volume. Defaults to false (read/write).
                              type: boolean
                            volumeAttributes:
                              additionalProperties:
                                type: string
                              description: volumeAttributes stores driver-specific
                                properties that are passed to the CSI driver. Consult
                                your driver's documentation for supported values.
                              type: object
                          required:
                          - driver
                          type: object
                        downwardAPI:
                          description: downwardAPI represents downward API about the
                            pod that should populate this volume
                          properties:
                            defaultMode:
                              description: 'Optional: mode bits to use on created
                                files by default. Must be a Optional: mode bits used
                                to set permissions on created files by default. Must
                                be an octal value between 0000 and 0777 or a decimal
                                value between 0 and 511. YAML accepts both octal and
                                decimal values, JSON requires decimal values for mode
                                bits. Defaults to 0644. Directories within the path
                                are not affected by this setting. This might be in
                                conflict with other options that affect the file mode,
                                like fsGroup, and the result can be other mode bits
                                set.'
                              format: int32
                              type: integer
                            items:
                              description: Items is a list of downward API volume
                                file
                              items:
                                description: DownwardAPIVolumeFile represents information
                                  to create the file containing the pod field
                                properties:
                                  fieldRef:
                                    description: 'Required: Selects a field of the
                                      pod: only annotations, labels, name and namespace
                                      are supported.'
                                    properties:
                                      apiVersion:
                                        description: Version of the schema the FieldPath
                                          is written in terms of, defaults to "v1".
                                        type: string
                                      fieldPath:
                                        description: Path of the field to select in
                                          the specified API version.
                                        type: string
                                    required:
                                    - fieldPath
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  mode:
                                    description: 'Optional: mode bits used to set
                                      permissions on this file, must be an octal value
                                      between 0000 and 0777 or a decimal value between
                                      0 and 511. YAML accepts both octal and decimal
                                      values, JSON requires decimal values for mode
                                      bits. If not specified, the volume defaultMode
                                      will be used. This might be in conflict with
                                      other options that affect the file mode, like
                                      fsGroup, and the result can be other mode bits
                                      set.'
                                    format: int32
                                    type: integer
                                  path:
                                    description: 'Required: Path is  the relative
                                      path name of the file to be created. Must not
                                      be absolute or contain the ''..'' path. Must
                                      be utf-8 encoded. The first item of the relative
                                      path must not start with ''..'''
                                    type: string
                                  resourceFieldRef:
                                    description: 'Selects a resource of the container:
                                      only resources limits and requests (limits.cpu,
                                      limits.memory, requests.cpu and requests.memory)
                                      are currently supported.'
                                    properties:
                                      containerName:
                                        description: 'Container name: required for
                                          volumes, optional for env vars'
                                        type: string
                                      divisor:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        description: Specifies the output format of
                                          the exposed resources, defaults to "1"
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      resource:
                                        description: 'Required: resource to select'
                                        type: string
                                    required:
                                    - resource
                                    type: object
                                    x-kubernetes-map-type: atomic
                                required:
                                - path
                                type: object
                              type: array
                          type: object
                        emptyDir:
                          description: 'emptyDir represents a temporary directory
                            that shares a pod''s lifetime. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                          properties:
                            medium:
                              description: 'medium represents what type of storage
                                medium should back this directory. The default is
                                "" which means to use the node''s default medium.
                                Must be an empty string (default) or Memory. More
                                info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                              type: string
                            sizeLimit:
                              anyOf:
                              - type: integer
                              - type: string
                              description: 'sizeLimit is the total amount of local
                                storage required for this EmptyDir volume. The size
                                limit is also applicable for memory medium. The maximum
                                usage on memory medium EmptyDir would be the minimum
                                value between the SizeLimit specified here and the
                                sum of memory limits of all containers in a pod. The
                                default is nil which means that the limit is undefined.
                                More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                          type: object
                        ephemeral:
                          description: "ephemeral represents a volume that is handled
                            by a cluster storage driver. The volume's lifecycle is
                            tied to the pod that defines it - it will be created before
                            the pod starts, and deleted when the pod is removed. \n
                            Use this if: a) the volume is only needed while the pod
                            runs, b) features of normal volumes like restoring from
                            snapshot or capacity tracking are needed, c) the storage
                            driver is specified through a storage class, and d) the
                            storage driver supports dynamic volume provisioning through
                            a PersistentVolumeClaim (see EphemeralVolumeSource for
                            more information on the connection between this volume
                            type and PersistentVolumeClaim). \n Use PersistentVolumeClaim
                            or one of the vendor-specific APIs for volumes that persist
                            for longer than the lifecycle of an individual pod. \n
                            Use CSI for light-weight local ephemeral volumes if the
                            CSI driver is meant to be used that way - see the documentation
                            of the driver for more information. \n A pod can use both
                            types of ephemeral volumes and persistent volumes at the
                            same time."
                          properties:
                            volumeClaimTemplate:
                              description: "Will be used to create a stand-alone PVC
                                to provision the volume. The pod in which this EphemeralVolumeSource
                                is embedded will be the owner of the PVC, i.e. the
                                PVC will be deleted together with the pod.  The name
                                of the PVC will be `<pod name>-<volume name>` where
                                `<volume name>` is the name from the `PodSpec.Volumes`
                                array entry. Pod validation will reject the pod if
                                the concatenated name is not valid for a PVC (for
                                example, too long). \n An existing PVC with that name
                                that is not owned by the pod will *not* be used for
                                the pod to avoid using an unrelated volume by mistake.
                                Starting the pod is then blocked until the unrelated
                                PVC is removed. If such a pre-created PVC is meant
                                to be used by the pod, the PVC has to updated with
                                an owner reference to the pod once the pod exists.
                                Normally this should not be necessary, but it may
                                be useful when manually reconstructing a broken cluster.
                                \n This field is read-only and no changes will be
                                made by Kubernetes to the PVC after it has been created.
                                \n Required, must not be nil."
                              properties:
                                metadata:
                                  description: May contain labels and annotations
                                    that will be copied into the PVC when creating
                                    it. No other fields are allowed and will be rejected
                                    during validation.
                                  properties:
                                    annotations:
                                      additionalProperties:
                                        type: string
                                      type: object
                                    finalizers:
                                      items:
                                        type: string
                                      type: array
                                    labels:
                                      additionalProperties:
                                        type: string
                                      type: object
                                    name:
                                      type: string
                                    namespace:
                                      type: string
                                  type: object
                                spec:
                                  description: The specification for the PersistentVolumeClaim.
                                    The entire content is copied unchanged into the
                                    PVC that gets created from this template. The
                                    same fields as in a PersistentVolumeClaim are
                                    also valid here.
                                  properties:
                                    accessModes:
                                      description: 'accessModes contains the desired
                                        access modes the volume should have. More
                                        info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                                      items:
                                        type: string
                                      type: array
                                    dataSource:
                                      description: 'dataSource field can be used to
                                        specify either: * An existing VolumeSnapshot
                                        object (snapshot.storage.k8s.io/VolumeSnapshot)
                                        * An existing PVC (PersistentVolumeClaim)
                                        If the provisioner or an external controller
                                        can support the specified data source, it
                                        will create a new volume based on the contents
                                        of the specified data source. When the AnyVolumeDataSource
                                        feature gate is enabled, dataSource contents
                                        will be copied to dataSourceRef, and dataSourceRef
                                        contents will be copied to dataSource when
                                        dataSourceRef.namespace is not specified.
                                        If the namespace is specified, then dataSourceRef
                                        will not be copied to dataSource.'
                                      properties:
                                        apiGroup:
                                          description: APIGroup is the group for the
                                            resource being referenced. If APIGroup
                                            is not specified, the specified Kind must
                                            be in the core API group. For any other
                                            third-party types, APIGroup is required.
                                          type: string
                                        kind:
                                          description: Kind is the type of resource
                                            being referenced
                                          type: string
                                        name:
                                          description: Name is the name of resource
                                            being referenced
                                          type: string
                                      required:
                                      - kind
                                      - name
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    dataSourceRef:
                                      description: 'dataSourceRef specifies the object
                                        from which to populate the volume with data,
                                        if a non-empty volume is desired. This may
                                        be any object from a non-empty API group (non
                                        core object) or a PersistentVolumeClaim object.
                                        When this field is specified, volume binding
                                        will only succeed if the type of the specified
                                        object matches some installed volume populator
                                        or dynamic provisioner. This field will replace
                                        the functionality of the dataSource field
                                        and as such if both fields are non-empty,
                                        they must have the same value. For backwards
                                        compatibility, when namespace isn''t specified
                                        in dataSourceRef, both fields (dataSource
                                        and dataSourceRef) will be set to the same
                                        value automatically if one of them is empty
                                        and the other is non-empty. When namespace
                                        is specified in dataSourceRef, dataSource
                                        isn''t set to the same value and must be empty.
                                        There are three important differences between
                                        dataSource and dataSourceRef: * While dataSource
                                        only allows two specific types of objects,
                                        dataSourceRef allows any non-core object,
                                        as well as PersistentVolumeClaim objects.
                                        * While dataSource ignores disallowed values
                                        (dropping them), dataSourceRef preserves all
                                        values, and generates an error if a disallowed
                                        value is specified. * While dataSource only
                                        allows local objects, dataSourceRef allows
                                        objects in any namespaces. (Beta) Using this
                                        field requires the AnyVolumeDataSource feature
                                        gate to be enabled. (Alpha) Using the namespace
                                        field of dataSourceRef requires the CrossNamespaceVolumeDataSource
                                        feature gate to be enabled.'
                                      properties:
                                        apiGroup:
                                          description: APIGroup is the group for the
                                            resource being referenced. If APIGroup
                                            is not specified, the specified Kind must
                                            be in the core API group. For any other
                                            third-party types, APIGroup is required.
                                          type: string
                                        kind:
                                          description: Kind is the type of resource
                                            being referenced
                                          type: string
                                        name:
                                          description: Name is the name of resource
                                            being referenced
                                          type: string
                                        namespace:
                                          description: Namespace is the namespace
                                            of resource being referenced Note that
                                            when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant
                                            object is required in the referent namespace
                                            to allow that namespace's owner to accept
                                            the reference. See the ReferenceGrant
                                            documentation for details. (Alpha) This
                                            field requires the CrossNamespaceVolumeDataSource
                                            feature gate to be enabled.
                                          type: string
                                      required:
                                      - kind
                                      - name
                                      type: object
                                    resources:
                                      description: 'resources represents the minimum
                                        resources the volume should have. If RecoverVolumeExpansionFailure
                                        feature is enabled users are allowed to specify
                                        resource requirements that are lower than
                                        previous value but must still be higher than
                                        capacity recorded in the status field of the
                                        claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                                      properties:
                                        claims:
                                          description: "Claims lists the names of
                                            resources, defined in spec.resourceClaims,
                                            that are used by this container. \n This
                                            is an alpha field and requires enabling
                                            the DynamicResourceAllocation feature
                                            gate. \n This field is immutable. It can
                                            only be set for containers."
                                          items:
                                            description: ResourceClaim references
                                              one entry in PodSpec.ResourceClaims.
                                            properties:
                                              name:
                                                description: Name must match the name
                                                  of one entry in pod.spec.resourceClaims
                                                  of the Pod where this field is used.
                                                  It makes that resource available
                                                  inside a container.
                                                type: string
                                            required:
                                            - name
                                            type: object
                                          type: array
                                          x-kubernetes-list-map-keys:
                                          - name
                                          x-kubernetes-list-type: map
                                        limits:
                                          additionalProperties:
                                            anyOf:
                                            - type: integer
                                            - type: string
                                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            x-kubernetes-int-or-string: true
                                          description: 'Limits describes the maximum
                                            amount of compute resources allowed. More
                                            info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                          type: object
                                        requests:
                                          additionalProperties:
                                            anyOf:
                                            - type: integer
                                            - type: string
                                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            x-kubernetes-int-or-string: true
                                          description: 'Requests describes the minimum
                                            amount of compute resources required.
                                            If Requests is omitted for a container,
                                            it defaults to Limits if that is explicitly
                                            specified, otherwise to an implementation-defined
                                            value. Requests cannot exceed Limits.
                                            More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                          type: object
                                      type: object
                                    selector:
                                      description: selector is a label query over
                                        volumes to consider for binding.
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list
                                            of label selector requirements. The requirements
                                            are ANDed.
                                          items:
                                            description: A label selector requirement
                                              is a selector that contains values,
                                              a key, and an operator that relates
                                              the key and values.
                                            properties:
                                              key:
                                                description: key is the label key
                                                  that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a
                                                  key's relationship to a set of values.
                                                  Valid operators are In, NotIn, Exists
                                                  and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of
                                                  string values. If the operator is
                                                  In or NotIn, the values array must
                                                  be non-empty. If the operator is
                                                  Exists or DoesNotExist, the values
                                                  array must be empty. This array
                                                  is replaced during a strategic merge
                                                  patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - key
                                            - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value}
                                            pairs. A single {key,value} in the matchLabels
                                            map is equivalent to an element of matchExpressions,
                                            whose key field is "key", the operator
                                            is "In", and the values array contains
                                            only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    storageClassName:
                                      description: 'storageClassName is the name of
                                        the StorageClass required by the claim. More
                                        info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                                      type: string
                                    volumeMode:
                                      description: volumeMode defines what type of
                                        volume is required by the claim. Value of
                                        Filesystem is implied when not included in
                                        claim spec.
                                      type: string
                                    volumeName:
                                      description: volumeName is the binding reference
                                        to the PersistentVolume backing this claim.
                                      type: string
                                  type: object
                              required:
                              - spec
                              type: object
                          type: object
                        fc:
                          description: fc represents a Fibre Channel resource that
                            is attached to a kubelet's host machine and then exposed
                            to the pod.
                          properties:
                            fsType:
                              description: 'fsType is the filesystem type to mount.
                                Must be a filesystem type supported by the host operating
                                system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred
                                to be "ext4" if unspecified. TODO: how do we prevent
                                errors in the filesystem from compromising the machine'
                              type: string
                            lun:
                              description: 'lun is Optional: FC target lun number'
                              format: int32
                              type: integer
                            readOnly:
                              description: 'readOnly is Optional: Defaults to false
                                (read/write). ReadOnly here will force the ReadOnly
                                setting in VolumeMounts.'
                              type: boolean
                            targetWWNs:
                              description: 'targetWWNs is Optional: FC target worldwide
                                names (WWNs)'
                              items:
                                type: string
                              type: array
                            wwids:
                              description: 'wwids Optional: FC volume world wide identifiers
                                (wwids) Either wwids or combination of targetWWNs
                                and lun must be set, but not both simultaneously.'
                              items:
                                type: string
                              type: array
                          type: object
                        flexVolume:
                          description: flexVolume represents a generic volume resource
                            that is provisioned/attached using an exec based plugin.
                          properties:
                            driver:
                              description: driver is the name of the driver to use
                                for this volume.
                              type: string
                            fsType:
                              description: fsType is the filesystem type to mount.
                                Must be a filesystem type supported by the host operating
                                system. Ex. "ext4", "xfs", "ntfs". The default filesystem
                                depends on FlexVolume script.
                              type: string
                            options:
                              additionalProperties:
                                type: string
                              description: 'options is Optional: this field holds
                                extra command options if any.'
                              type: object
                            readOnly:
                              description: 'readOnly is Optional: defaults to false
                                (read/write). ReadOnly here will force the ReadOnly
                                setting in VolumeMounts.'
                              type: boolean
                            secretRef:
                              description: 'secretRef is Optional: secretRef is reference
                                to the secret object containing sensitive information
                                to pass to the plugin scripts. This may be empty if
                                no secret object is specified. If the secret object
                                contains more than one secret, all secrets are passed
                                to the plugin scripts.'
                              properties:
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                              type: object
                              x-kubernetes-map-type: atomic
                          required:
                          - driver
                          type: object
                        flocker:
                          description: flocker represents a Flocker volume attached
                            to a kubelet's host machine. This depends on the Flocker
                            control service being running
                          properties:
                            datasetName:
                              description: datasetName is Name of the dataset stored
                                as metadata -> name on the dataset for Flocker should
                                be considered as deprecated
                              type: string
                            datasetUUID:
                              description: datasetUUID is the UUID of the dataset.
                                This is unique identifier of a Flocker dataset
                              type: string
                          type: object
                        gcePersistentDisk:
                          description: 'gcePersistentDisk represents a GCE Disk resource
                            that is attached to a kubelet''s host machine and then
                            exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                          properties:
                            fsType:
                              description: 'fsType is filesystem type of the volume
                                that you want to mount. Tip: Ensure that the filesystem
                                type is supported by the host operating system. Examples:
                                "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4"
                                if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                                TODO: how do we prevent errors in the filesystem from
                                compromising the machine'
                              type: string
                            partition:
                              description: 'partition is the partition in the volume
                                that you want to mount. If omitted, the default is
                                to mount by volume name. Examples: For volume /dev/sda1,
                                you specify the partition as "1". Similarly, the volume
                                partition for /dev/sda is "0" (or you can leave the
                                property empty). More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                              format: int32
                              type: integer
                            pdName:
                              description: 'pdName is unique name of the PD resource
                                in GCE. Used to identify the disk in GCE. More info:
                                https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                              type: string
                            readOnly:
                              description: 'readOnly here will force the ReadOnly
                                setting in VolumeMounts. Defaults to false. More info:
                                https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                              type: boolean
                          required:
                          - pdName
                          type: object
                        gitRepo:
                          description: 'gitRepo represents a git repository at a particular
                            revision. DEPRECATED: GitRepo is deprecated. To provision
                            a container with a git repo, mount an EmptyDir into an
                            InitContainer that clones the repo using git, then mount
                            the EmptyDir into the Pod''s container.'
                          properties:
                            directory:
                              description: directory is the target directory name.
                                Must not contain or start with '..'.  If '.' is supplied,
                                the volume directory will be the git repository.  Otherwise,
                                if specified, the volume will contain the git repository
                                in the subdirectory with the given name.
                              type: string
                            repository:
                              description: repository is the URL
                              type: string
                            revision:
                              description: revision is the commit hash for the specified
                                revision.
                              type: string
                          required:
                          - repository
                          type: object
                        glusterfs:
                          description: 'glusterfs represents a Glusterfs mount on
                            the host that shares a pod''s lifetime. More info: https://examples.k8s.io/volumes/glusterfs/README.md'
                          properties:
                            endpoints:
                              description: 'endpoints is the endpoint name that details
                                Glusterfs topology. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                              type: string
                            path:
                              description: 'path is the Glusterfs volume path. More
                                info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                              type: string
                            readOnly:
                              description: 'readOnly here will force the Glusterfs
                                volume to be mounted with read-only permissions. Defaults
                                to false. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                              type: boolean
                          required:
                          - endpoints
                          - path
                          type: object
                        hostPath:
                          description: 'hostPath represents a pre-existing file or
                            directory on the host machine that is directly exposed
                            to the container. This is generally used for system agents
                            or other privileged things that are allowed to see the
                            host machine. Most containers will NOT need this. More
                            info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
                            --- TODO(jonesdl) We need to restrict who can use host
                            directory mounts and who can/can not mount host directories
                            as read/write.'
                          properties:
                            path:
                              description: 'path of the directory on the host. If
                                the path is a symlink, it will follow the link to
                                the real path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                              type: string
                            type:
                              description: 'type for HostPath Volume Defaults to ""
                                More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                              type: string
                          required:
                          - path
                          type: object
                        iscsi:
                          description: 'iscsi represents an ISCSI Disk resource that
                            is attached to a kubelet''s host machine and then exposed
                            to the pod. More info: https://examples.k8s.io/volumes/iscsi/README.md'
                          properties:
                            chapAuthDiscovery:
                              description: chapAuthDiscovery defines whether support
                                iSCSI Discovery CHAP authentication
                              type: boolean
                            chapAuthSession:
                              description: chapAuthSession defines whether support
                                iSCSI Session CHAP authentication
                              type: boolean
                            fsType:
                              description: 'fsType is the filesystem type of the volume
                                that you want to mount. Tip: Ensure that the filesystem
                                type is supported by the host operating system. Examples:
                                "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4"
                                if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi
                                TODO: how do we prevent errors in the filesystem from
                                compromising the machine'
                              type: string
                            initiatorName:
                              description: initiatorName is the custom iSCSI Initiator
                                Name. If initiatorName is specified with iscsiInterface
                                simultaneously, new iSCSI interface <target portal>:<volume
                                name> will be created for the connection.
                              type: string
                            iqn:
                              description: iqn is the target iSCSI Qualified Name.
                              type: string
                            iscsiInterface:
                              description: iscsiInterface is the interface Name that
                                uses an iSCSI transport. Defaults to 'default' (tcp).
                              type: string
                            lun:
                              description: lun represents iSCSI Target Lun number.
                              format: int32
                              type: integer
                            portals:
                              description: portals is the iSCSI Target Portal List.
                                The portal is either an IP or ip_addr:port if the
                                port is other than default (typically TCP ports 860
                                and 3260).
                              items:
                                type: string
                              type: array
                            readOnly:
                              description: readOnly here will force the ReadOnly setting
                                in VolumeMounts. Defaults to false.
                              type: boolean
                            secretRef:
                              description: secretRef is the CHAP Secret for iSCSI
                                target and initiator authentication
                              properties:
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                              type: object
                              x-kubernetes-map-type: atomic
                            targetPortal:
                              description: targetPortal is iSCSI Target Portal. The
                                Portal is either an IP or ip_addr:port if the port
                                is other than default (typically TCP ports 860 and
                                3260).
                              type: string
                          required:
                          - iqn
                          - lun
                          - targetPortal
                          type: object
                        name:
                          description: 'name of the volume. Must be a DNS_LABEL and
                            unique within the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        nfs:
                          description: 'nfs represents an NFS mount on the host that
                            shares a pod''s lifetime More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                          properties:
                            path:
                              description: 'path that is exported by the NFS server.
                                More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                              type: string
                            readOnly:
                              description: 'readOnly here will force the NFS export
                                to be mounted with read-only permissions. Defaults
                                to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                              type: boolean
                            server:
                              description: 'server is the hostname or IP address of
                                the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                              type: string
                          required:
                          - path
                          - server
                          type: object
                        persistentVolumeClaim:
                          description: 'persistentVolumeClaimVolumeSource represents
                            a reference to a PersistentVolumeClaim in the same namespace.
                            More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                          properties:
                            claimName:
                              description: 'claimName is the name of a PersistentVolumeClaim
                                in the same namespace as the pod using this volume.
                                More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                              type: string
                            readOnly:
                              description: readOnly Will force the ReadOnly setting
                                in VolumeMounts. Default false.
                              type: boolean
                          required:
                          - claimName
                          type: object
                        photonPersistentDisk:
                          description: photonPersistentDisk represents a PhotonController
                            persistent disk attached and mounted on kubelets host
                            machine
                          properties:
                            fsType:
                              description: fsType is the filesystem type to mount.
                                Must be a filesystem type supported by the host operating
                                system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred
                                to be "ext4" if unspecified.
                              type: string
                            pdID:
                              description: pdID is the ID that identifies Photon Controller
                                persistent disk
                              type: string
                          required:
                          - pdID
                          type: object
                        portworxVolume:
                          description: portworxVolume represents a portworx volume
                            attached and mounted on kubelets host machine
                          properties:
                            fsType:
                              description: fSType represents the filesystem type to
                                mount Must be a filesystem type supported by the host
                                operating system. Ex. "ext4", "xfs". Implicitly inferred
                                to be "ext4" if unspecified.
                              type: string
                            readOnly:
                              description: readOnly defaults to false (read/write).
                                ReadOnly here will force the ReadOnly setting in VolumeMounts.
                              type: boolean
                            volumeID:
                              description: volumeID uniquely identifies a Portworx
                                volume
                              type: string
                          required:
                          - volumeID
                          type: object
                        projected:
                          description: projected items for all in one resources secrets,
                            configmaps, and downward API
                          properties:
                            defaultMode:
                              description: defaultMode are the mode bits used to set
                                permissions on created files by default. Must be an
                                octal value between 0000 and 0777 or a decimal value
                                between 0 and 511. YAML accepts both octal and decimal
                                values, JSON requires decimal values for mode bits.
                                Directories within the path are not affected by this
                                setting. This might be in conflict with other options
                                that affect the file mode, like fsGroup, and the result
                                can be other mode bits set.
                              format: int32
                              type: integer
                            sources:
                              description: sources is the list of volume projections
                              items:
                                description: Projection that may be projected along
                                  with other supported volume types
                                properties:
                                  configMap:
                                    description: configMap information about the configMap
                                      data to project
                                    properties:
                                      items:
                                        description: items if unspecified, each key-value
                                          pair in the Data field of the referenced
                                          ConfigMap will be projected into the volume
                                          as a file whose name is the key and content
                                          is the value. If specified, the listed keys
                                          will be projected into the specified paths,
                                          and unlisted keys will not be present. If
                                          a key is specified which is not present
                                          in the ConfigMap, the volume setup will
                                          error unless it is marked optional. Paths
                                          must be relative and may not contain the
                                          '..' path or start with '..'.
                                        items:
                                          description: Maps a string key to a path
                                            within a volume.
                                          properties:
                                            key:
                                              description: key is the key to project.
                                              type: string
                                            mode:
                                              description: 'mode is Optional: mode
                                                bits used to set permissions on this
                                                file. Must be an octal value between
                                                0000 and 0777 or a decimal value between
                                                0 and 511. YAML accepts both octal
                                                and decimal values, JSON requires
                                                decimal values for mode bits. If not
                                                specified, the volume defaultMode
                                                will be used. This might be in conflict
                                                with other options that affect the
                                                file mode, like fsGroup, and the result
                                                can be other mode bits set.'
                                              format: int32
                                              type: integer
                                            path:
                                              description: path is the relative path
                                                of the file to map the key to. May
                                                not be an absolute path. May not contain
                                                the path element '..'. May not start
                                                with the string '..'.
                                              type: string
                                          required:
                                          - key
                                          - path
                                          type: object
                                        type: array
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                        type: string
                                      optional:
                                        description: optional specify whether the
                                          ConfigMap or its keys must be defined
                                        type: boolean
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  downwardAPI:
                                    description: downwardAPI information about the
                                      downwardAPI data to project
                                    properties:
                                      items:
                                        description: Items is a list of DownwardAPIVolume
                                          file
                                        items:
                                          description: DownwardAPIVolumeFile represents
                                            information to create the file containing
                                            the pod field
                                          properties:
                                            fieldRef:
                                              description: 'Required: Selects a field
                                                of the pod: only annotations, labels,
                                                name and namespace are supported.'
                                              properties:
                                                apiVersion:
                                                  description: Version of the schema
                                                    the FieldPath is written in terms
                                                    of, defaults to "v1".
                                                  type: string
                                                fieldPath:
                                                  description: Path of the field to
                                                    select in the specified API version.
                                                  type: string
                                              required:
                                              - fieldPath
                                              type: object
                                              x-kubernetes-map-type: atomic
                                            mode:
                                              description: 'Optional: mode bits used
                                                to set permissions on this file, must
                                                be an octal value between 0000 and
                                                0777 or a decimal value between 0
                                                and 511. YAML accepts both octal and
                                                decimal values, JSON requires decimal
                                                values for mode bits. If not specified,
                                                the volume defaultMode will be used.
                                                This might be in conflict with other
                                                options that affect the file mode,
                                                like fsGroup, and the result can be
                                                other mode bits set.'
                                              format: int32
                                              type: integer
                                            path:
                                              description: 'Required: Path is  the
                                                relative path name of the file to
                                                be created. Must not be absolute or
                                                contain the ''..'' path. Must be utf-8
                                                encoded. The first item of the relative
                                                path must not start with ''..'''
                                              type: string
                                            resourceFieldRef:
                                              description: 'Selects a resource of
                                                the container: only resources limits
                                                and requests (limits.cpu, limits.memory,
                                                requests.cpu and requests.memory)
                                                are currently supported.'
                                              properties:
                                                containerName:
                                                  description: 'Container name: required
                                                    for volumes, optional for env
                                                    vars'
                                                  type: string
                                                divisor:
                                                  anyOf:
                                                  - type: integer
                                                  - type: string
                                                  description: Specifies the output
                                                    format of the exposed resources,
                                                    defaults to "1"
                                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                  x-kubernetes-int-or-string: true
                                                resource:
                                                  description: 'Required: resource
                                                    to select'
                                                  type: string
                                              required:
                                              - resource
                                              type: object
                                              x-kubernetes-map-type: atomic
                                          required:
                                          - path
                                          type: object
                                        type: array
                                    type: object
                                  secret:
                                    description: secret information about the secret
                                      data to project
                                    properties:
                                      items:
                                        description: items if unspecified, each key-value
                                          pair in the Data field of the referenced
                                          Secret will be projected into the volume
                                          as a file whose name is the key and content
                                          is the value. If specified, the listed keys
                                          will be projected into the specified paths,
                                          and unlisted keys will not be present. If
                                          a key is specified which is not present
                                          in the Secret, the volume setup will error
                                          unless it is marked optional. Paths must
                                          be relative and may not contain the '..'
                                          path or start with '..'.
                                        items:
                                          description: Maps a string key to a path
                                            within a volume.
                                          properties:
                                            key:
                                              description: key is the key to project.
                                              type: string
                                            mode:
                                              description: 'mode is Optional: mode
                                                bits used to set permissions on this
                                                file. Must be an octal value between
                                                0000 and 0777 or a decimal value between
                                                0 and 511. YAML accepts both octal
                                                and decimal values, JSON requires
                                                decimal values for mode bits. If not
                                                specified, the volume defaultMode
                                                will be used. This might be in conflict
                                                with other options that affect the
                                                file mode, like fsGroup, and the result
                                                can be other mode bits set.'
                                              format: int32
                                              type: integer
                                            path:
                                              description: path is the relative path
                                                of the file to map the key to. May
                                                not be an absolute path. May not contain
                                                the path element '..'. May not start
                                                with the string '..'.
                                              type: string
                                          required:
                                          - key
                                          - path
                                          type: object
                                        type: array
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                        type: string
                                      optional:
                                        description: optional field specify whether
                                          the Secret or its key must be defined
                                        type: boolean
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  serviceAccountToken:
                                    description: serviceAccountToken is information
                                      about the serviceAccountToken data to project
                                    properties:
                                      audience:
                                        description: audience is the intended audience
                                          of the token. A recipient of a token must
                                          identify itself with an identifier specified
                                          in the audience of the token, and otherwise
                                          should reject the token. The audience defaults
                                          to the identifier of the apiserver.
                                        type: string
                                      expirationSeconds:
                                        description: expirationSeconds is the requested
                                          duration of validity of the service account
                                          token. As the token approaches expiration,
                                          the kubelet volume plugin will proactively
                                          rotate the service account token. The kubelet
                                          will start trying to rotate the token if
                                          the token is older than 80 percent of its
                                          time to live or if the token is older than
                                          24 hours.Defaults to 1 hour and must be
                                          at least 10 minutes.
                                        format: int64
                                        type: integer
                                      path:
                                        description: path is the path relative to
                                          the mount point of the file to project the
                                          token into.
                                        type: string
                                    required:
                                    - path
                                    type: object
                                type: object
                              type: array
                          type: object
                        quobyte:
                          description: quobyte represents a Quobyte mount on the host
                            that shares a pod's lifetime
                          properties:
                            group:
                              description: group to map volume access to Default is
                                no group
                              type: string
                            readOnly:
                              description: readOnly here will force the Quobyte volume
                                to be mounted with read-only permissions. Defaults
                                to false.
                              type: boolean
                            registry:
                              description: registry represents a single or multiple
                                Quobyte Registry services specified as a string as
                                host:port pair (multiple entries are separated with
                                commas) which acts as the central registry for volumes
                              type: string
                            tenant:
                              description: tenant owning the given Quobyte volume
                                in the Backend Used with dynamically provisioned Quobyte
                                volumes, value is set by the plugin
                              type: string
                            user:
                              description: user to map volume access to Defaults to
                                serivceaccount user
                              type: string
                            volume:
                              description: volume is a string that references an already
                                created Quobyte volume by name.
                              type: string
                          required:
                          - registry
                          - volume
                          type: object
                        rbd:
                          description: 'rbd represents a Rados Block Device mount
                            on the host that shares a pod''s lifetime. More info:
                            https://examples.k8s.io/volumes/rbd/README.md'
                          properties:
                            fsType:
                              description: 'fsType is the filesystem type of the volume
                                that you want to mount. Tip: Ensure that the filesystem
                                type is supported by the host operating system. Examples:
                                "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4"
                                if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd
                                TODO: how do we prevent errors in the filesystem from
                                compromising the machine'
                              type: string
                            image:
                              description: 'image is the rados image name. More info:
                                https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                              type: string
                            keyring:
                              description: 'keyring is the path to key ring for RBDUser.
                                Default is /etc/ceph/keyring. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                              type: string
                            monitors:
                              description: 'monitors is a collection of Ceph monitors.
                                More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                              items:
                                type: string
                              type: array
                            pool:
                              description: 'pool is the rados pool name. Default is
                                rbd. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                              type: string
                            readOnly:
                              description: 'readOnly here will force the ReadOnly
                                setting in VolumeMounts. Defaults to false. More info:
                                https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                              type: boolean
                            secretRef:
                              description: 'secretRef is name of the authentication
                                secret for RBDUser. If provided overrides keyring.
                                Default is nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                              properties:
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                              type: object
                              x-kubernetes-map-type: atomic
                            user:
                              description: 'user is the rados user name. Default is
                                admin. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                              type: string
                          required:
                          - image
                          - monitors
                          type: object
                        scaleIO:
                          description: scaleIO represents a ScaleIO persistent volume
                            attached and mounted on Kubernetes nodes.
                          properties:
                            fsType:
                              description: fsType is the filesystem type to mount.
                                Must be a filesystem type supported by the host operating
                                system. Ex. "ext4", "xfs", "ntfs". Default is "xfs".
                              type: string
                            gateway:
                              description: gateway is the host address of the ScaleIO
                                API Gateway.
                              type: string
                            protectionDomain:
                              description: protectionDomain is the name of the ScaleIO
                                Protection Domain for the configured storage.
                              type: string
                            readOnly:
                              description: readOnly Defaults to false (read/write).
                                ReadOnly here will force the ReadOnly setting in VolumeMounts.
                              type: boolean
                            secretRef:
                              description: secretRef references to the secret for
                                ScaleIO user and other sensitive information. If this
                                is not provided, Login operation will fail.
                              properties:
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                              type: object
                              x-kubernetes-map-type: atomic
                            sslEnabled:
                              description: sslEnabled Flag enable/disable SSL communication
                                with Gateway, default false
                              type: boolean
                            storageMode:
                              description: storageMode indicates whether the storage
                                for a volume should be ThickProvisioned or ThinProvisioned.
                                Default is ThinProvisioned.
                              type: string
                            storagePool:
                              description: storagePool is the ScaleIO Storage Pool
                                associated with the protection domain.
                              type: string
                            system:
                              description: system is the name of the storage system
                                as configured in ScaleIO.
                              type: string
                            volumeName:
                              description: volumeName is the name of a volume already
                                created in the ScaleIO system that is associated with
                                this volume source.
                              type: string
                          required:
                          - gateway
                          - secretRef
                          - system
                          type: object
                        secret:
                          description: 'secret represents a secret that should populate
                            this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret'
                          properties:
                            defaultMode:
                              description: 'defaultMode is Optional: mode bits used
                                to set permissions on created files by default. Must
                                be an octal value between 0000 and 0777 or a decimal
                                value between 0 and 511. YAML accepts both octal and
                                decimal values, JSON requires decimal values for mode
                                bits. Defaults to 0644. Directories within the path
                                are not affected by this setting. This might be in
                                conflict with other options that affect the file mode,
                                like fsGroup, and the result can be other mode bits
                                set.'
                              format: int32
                              type: integer
                            items:
                              description: items If unspecified, each key-value pair
                                in the Data field of the referenced Secret will be
                                projected into the volume as a file whose name is
                                the key and content is the value. If specified, the
                                listed keys will be projected into the specified paths,
                                and unlisted keys will not be present. If a key is
                                specified which is not present in the Secret, the
                                volume setup will error unless it is marked optional.
                                Paths must be relative and may not contain the '..'
                                path or start with '..'.
                              items:
                                description: Maps a string key to a path within a
                                  volume.
                                properties:
                                  key:
                                    description: key is the key to project.
                                    type: string
                                  mode:
                                    description: 'mode is Optional: mode bits used
                                      to set permissions on this file. Must be an
                                      octal value between 0000 and 0777 or a decimal
                                      value between 0 and 511. YAML accepts both octal
                                      and decimal values, JSON requires decimal values
                                      for mode bits. If not specified, the volume
                                      defaultMode will be used. This might be in conflict
                                      with other options that affect the file mode,
                                      like fsGroup, and the result can be other mode
                                      bits set.'
                                    format: int32
                                    type: integer
                                  path:
                                    description: path is the relative path of the
                                      file to map the key to. May not be an absolute
                                      path. May not contain the path element '..'.
                                      May not start with the string '..'.
                                    type: string
                                required:
                                - key
                                - path
                                type: object
                              type: array
                            optional:
                              description: optional field specify whether the Secret
                                or its keys must be defined
                              type: boolean
                            secretName:
                              description: 'secretName is the name of the secret in
                                the pod''s namespace to use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret'
                              type: string
                          type: object
                        storageos:
                          description: storageOS represents a StorageOS volume attached
                            and mounted on Kubernetes nodes.
                          properties:
                            fsType:
                              description: fsType is the filesystem type to mount.
                                Must be a filesystem type supported by the host operating
                                system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred
                                to be "ext4" if unspecified.
                              type: string
                            readOnly:
                              description: readOnly defaults to false (read/write).
                                ReadOnly here will force the ReadOnly setting in VolumeMounts.
                              type: boolean
                            secretRef:
                              description: secretRef specifies the secret to use for
                                obtaining the StorageOS API credentials.  If not specified,
                                default values will be attempted.
                              properties:
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                              type: object
                              x-kubernetes-map-type: atomic
                            volumeName:
                              description: volumeName is the human-readable name of
                                the StorageOS volume.  Volume names are only unique
                                within a namespace.
                              type: string
                            volumeNamespace:
                              description: volumeNamespace specifies the scope of
                                the volume within StorageOS.  If no namespace is specified
                                then the Pod's namespace will be used.  This allows
                                the Kubernetes name scoping to be mirrored within
                                StorageOS for tighter integration. Set VolumeName
                                to any name to override the default behaviour. Set
                                to "default" if you are not using namespaces within
                                StorageOS. Namespaces that do not pre-exist within
                                StorageOS will be created.
                              type: string
                          type: object
                        vsphereVolume:
                          description: vsphereVolume represents a vSphere volume attached
                            and mounted on kubelets host machine
                          properties:
                            fsType:
                              description: fsType is filesystem type to mount. Must
                                be a filesystem type supported by the host operating
                                system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred
                                to be "ext4" if unspecified.
                              type: string
                            storagePolicyID:
                              description: storagePolicyID is the storage Policy Based
                                Management (SPBM) profile ID associated with the StoragePolicyName.
                              type: string
                            storagePolicyName:
                              description: storagePolicyName is the storage Policy
                                Based Management (SPBM) profile name.
                              type: string
                            volumePath:
                              description: volumePath is the path that identifies
                                vSphere volume vmdk
                              type: string
                          required:
                          - volumePath
                          type: object
                      required:
                      - name
                      type: object
                    type: array
                required:
                - containers
                type: object
                x-kubernetes-preserve-unknown-fields: true
              scripts:
                description: "Specifies groups of scripts, each provided via a ConfigMap,
                  to be mounted as volumes in the container. These scripts can be
                  executed during container startup or via specific actions. \n Each
                  script group is encapsulated in a ComponentTemplateSpec that includes:
                  \n - The ConfigMap containing the scripts. - The mount point where
                  the scripts will be mounted inside the container. \n This field
                  is immutable."
                items:
                  properties:
                    defaultMode:
                      description: "The operator attempts to set default file permissions
                        for scripts (0555) and configurations (0444). However, certain
                        database engines may require different file permissions. You
                        can specify the desired file permissions here. \n Must be
                        specified as an octal value between 0000 and 0777 (inclusive),
                        or as a decimal value between 0 and 511 (inclusive). YAML
                        supports both octal and decimal values for file permissions.
                        \n Please note that this setting only affects the permissions
                        of the files themselves. Directories within the specified
                        path are not impacted by this setting. It's important to be
                        aware that this setting might conflict with other options
                        that influence the file mode, such as fsGroup. In such cases,
                        the resulting file mode may have additional bits set. Refers
                        to documents of k8s.ConfigMapVolumeSource.defaultMode for
                        more information."
                      format: int32
                      type: integer
                    name:
                      description: Specifies the name of the configuration template.
                      maxLength: 63
                      pattern: ^[a-z0-9]([a-z0-9\.\-]*[a-z0-9])?$
                      type: string
                    namespace:
                      default: default
                      description: Specifies the namespace of the referenced configuration
                        template ConfigMap object. An empty namespace is equivalent
                        to the "default" namespace.
                      maxLength: 63
                      pattern: ^[a-z0-9]([a-z0-9\-]*[a-z0-9])?$
                      type: string
                    templateRef:
                      description: Specifies the name of the referenced configuration
                        template ConfigMap object.
                      maxLength: 63
                      pattern: ^[a-z0-9]([a-z0-9\.\-]*[a-z0-9])?$
                      type: string
                    volumeName:
                      description: Refers to the volume name of PodTemplate. The configuration
                        file produced through the configuration template will be mounted
                        to the corresponding volume. Must be a DNS_LABEL name. The
                        volume name must be defined in podSpec.containers[*].volumeMounts.
                      maxLength: 63
                      pattern: ^[a-z]([a-z0-9\-]*[a-z0-9])?$
                      type: string
                  required:
                  - name
                  - templateRef
                  - volumeName
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - name
                x-kubernetes-list-type: map
              serviceKind:
                description: "Defines the type of well-known service protocol that
                  the Component provides. It specifies the standard or widely recognized
                  protocol used by the Component to offer its Services. \n The `serviceKind`
                  field allows users to quickly identify the type of Service provided
                  by the Component based on common protocols or service types. This
                  information helps in understanding the compatibility, interoperability,
                  and usage of the Component within a system. \n Some examples of
                  well-known service protocols include: \n - \"MySQL\": Indicates
                  that the Component provides a MySQL database service. - \"PostgreSQL\":
                  Indicates that the Component offers a PostgreSQL database service.
                  - \"Redis\": Signifies that the Component functions as a Redis key-value
                  store. - \"ETCD\": Denotes that the Component serves as an ETCD
                  distributed key-value store. \n The `serviceKind` value is case-insensitive,
                  allowing for flexibility in specifying the protocol name. \n When
                  specifying the `serviceKind`, consider the following guidelines:
                  \n - Use well-established and widely recognized protocol names or
                  service types. - Ensure that the `serviceKind` accurately represents
                  the primary service type offered by the Component. - If the Component
                  provides multiple services, choose the most prominent or commonly
                  used protocol. - Limit the `serviceKind` to a maximum of 32 characters
                  for conciseness and readability. \n Note: The `serviceKind` field
                  is optional and can be left empty if the Component does not fit
                  into a well-known service category or if the protocol is not widely
                  recognized. It is primarily used to convey information about the
                  Component's service type to users and facilitate discovery and integration.
                  \n The `serviceKind` field is immutable and cannot be updated."
                maxLength: 32
                type: string
              serviceRefDeclarations:
                description: "Lists external service dependencies of the Component,
                  including services from other Clusters or outside the K8s environment.
                  \n This field is immutable."
                items:
                  description: "ServiceRefDeclaration represents a reference to a
                    service that can be either provided by a KubeBlocks Cluster or
                    an external service. It acts as a placeholder for the actual service
                    reference, which is determined later when a Cluster is created.
                    \n The purpose of ServiceRefDeclaration is to declare a service
                    dependency without specifying the concrete details of the service.
                    It allows for flexibility and abstraction in defining service
                    references within a Component. By using ServiceRefDeclaration,
                    you can define service dependencies in a declarative manner, enabling
                    loose coupling and easier management of service references across
                    different components and clusters. \n Upon Cluster creation, the
                    ServiceRefDeclaration is bound to an actual service through the
                    ServiceRef field, effectively resolving and connecting to the
                    specified service."
                  properties:
                    name:
                      description: Specifies the name of the ServiceRefDeclaration.
                      type: string
                    optional:
                      description: "Specifies whether the service reference can be
                        optional. \n For an optional service-ref, the component can
                        still be created even if the service-ref is not provided."
                      type: boolean
                    serviceRefDeclarationSpecs:
                      description: "Defines a list of constraints and requirements
                        for services that can be bound to this ServiceRefDeclaration
                        upon Cluster creation. Each ServiceRefDeclarationSpec defines
                        a ServiceKind and ServiceVersion, outlining the acceptable
                        service types and versions that are compatible. \n This flexibility
                        allows a ServiceRefDeclaration to be fulfilled by any one
                        of the provided specs. For example, if it requires an OLTP
                        database, specs for both MySQL and PostgreSQL are listed,
                        either MySQL or PostgreSQL services can be used when binding."
                      items:
                        properties:
                          serviceKind:
                            description: Specifies the type or nature of the service.
                              This should be a well-known application cluster type,
                              such as {mysql, redis, mongodb}. The field is case-insensitive
                              and supports abbreviations for some well-known databases.
                              For instance, both `zk` and `zookeeper` are considered
                              as a ZooKeeper cluster, while `pg`, `postgres`, `postgresql`
                              are all recognized as a PostgreSQL cluster.
                            type: string
                          serviceVersion:
                            description: Defines the service version of the service
                              reference. This is a regular expression that matches
                              a version number pattern. For instance, `^8.0.8$`, `8.0.\d{1,2}$`,
                              `^[v\-]*?(\d{1,2}\.){0,3}\d{1,2}$` are all valid patterns.
                            type: string
                        required:
                        - serviceKind
                        - serviceVersion
                        type: object
                      type: array
                  required:
                  - name
                  - serviceRefDeclarationSpecs
                  type: object
                type: array
              serviceVersion:
                description: "Specifies the version of the Service provided by the
                  Component. It follows the syntax and semantics of the \"Semantic
                  Versioning\" specification (http://semver.org/). \n The Semantic
                  Versioning specification defines a version number format of X.Y.Z
                  (MAJOR.MINOR.PATCH), where: \n - X represents the major version
                  and indicates incompatible API changes. - Y represents the minor
                  version and indicates added functionality in a backward-compatible
                  manner. - Z represents the patch version and indicates backward-compatible
                  bug fixes. \n Additional labels for pre-release and build metadata
                  are available as extensions to the X.Y.Z format: \n - Use pre-release
                  labels (e.g., -alpha, -beta) for versions that are not yet stable
                  or ready for production use. - Use build metadata (e.g., +build.1)
                  for additional version information if needed. \n Examples of valid
                  ServiceVersion values: \n - \"1.0.0\" - \"2.3.1\" - \"3.0.0-alpha.1\"
                  - \"4.5.2+build.1\" \n The `serviceVersion` field is immutable and
                  cannot be updated."
                maxLength: 32
                type: string
              services:
                description: "Defines additional Services to expose the Component's
                  endpoints. \n A default headless Service, named `{cluster.name}-{component.name}-headless`,
                  is automatically created for internal Cluster communication. \n
                  This field enables customization of additional Services to expose
                  the Component's endpoints to other Components within the same or
                  different Clusters, and to external applications. Each Service entry
                  in this list can include properties such as ports, type, and selectors.
                  \n - For intra-Cluster access, Components can reference Services
                  using variables declared in `componentDefinition.spec.vars[*].valueFrom.serviceVarRef`.
                  - For inter-Cluster access, reference Services use variables declared
                  in `componentDefinition.spec.vars[*].valueFrom.serviceRefVarRef`,
                  and bind Services at Cluster creation time with `clusterComponentSpec.ServiceRef[*].clusterServiceSelector`.
                  \n This field is immutable."
                items:
                  description: "ComponentService defines a service that would be exposed
                    as an inter-component service within a Cluster. A Service defined
                    in the ComponentService is expected to be accessed by other Components
                    within the same Cluster. \n When a Component needs to use a ComponentService
                    provided by another Component within the same Cluster, it can
                    declare a variable in the `componentDefinition.spec.vars` section
                    and bind it to the specific exposed address of the ComponentService
                    using the `serviceVarRef` field."
                  properties:
                    annotations:
                      additionalProperties:
                        type: string
                      description: 'If ServiceType is LoadBalancer, cloud provider
                        related parameters can be put here More info: https://kubernetes.io/docs/concepts/services-networking/service/#loadbalancer.'
                      type: object
                    disableAutoProvision:
                      description: "Indicates whether the automatic provisioning of
                        the service should be disabled. \n If set to true, the service
                        will not be automatically created at the component provisioning.
                        Instead, you can enable the creation of this service by specifying
                        it explicitly in the cluster API."
                      type: boolean
                    name:
                      description: Name defines the name of the service. otherwise,
                        it indicates the name of the service. Others can refer to
                        this service by its name. (e.g., connection credential) Cannot
                        be updated.
                      maxLength: 25
                      type: string
                    podService:
                      default: false
                      description: "Indicates whether to create a corresponding Service
                        for each Pod of the selected Component. When set to true,
                        a set of Services will be automatically generated for each
                        Pod, and the `roleSelector` field will be ignored. \n The
                        names of the generated Services will follow the same suffix
                        naming pattern: `$(serviceName)-$(podOrdinal)`. The total
                        number of generated Services will be equal to the number of
                        replicas specified for the Component. \n Example usage: \n
                        ```yaml name: my-service serviceName: my-service podService:
                        true disableAutoProvision: true spec: type: NodePort ports:
                        - name: http port: 80 targetPort: 8080 ``` \n In this example,
                        if the Component has 3 replicas, three Services will be generated:
                        - my-service-0: Points to the first Pod (podOrdinal: 0) -
                        my-service-1: Points to the second Pod (podOrdinal: 1) - my-service-2:
                        Points to the third Pod (podOrdinal: 2) \n Each generated
                        Service will have the specified spec configuration and will
                        target its respective Pod. \n This feature is useful when
                        you need to expose each Pod of a Component individually, allowing
                        external access to specific instances of the Component."
                      type: boolean
                    roleSelector:
                      description: "Extends the above `serviceSpec.selector` by allowing
                        you to specify defined role as selector for the service. When
                        `roleSelector` is set, it adds a label selector \"kubeblocks.io/role:
                        {roleSelector}\" to the `serviceSpec.selector`. Example usage:
                        \n roleSelector: \"leader\" \n In this example, setting `roleSelector`
                        to \"leader\" will add a label selector \"kubeblocks.io/role:
                        leader\" to the `serviceSpec.selector`. This means that the
                        service will select and route traffic to Pods with the label
                        \"kubeblocks.io/role\" set to \"leader\". \n Note that if
                        `podService` sets to true, RoleSelector will be ignored. The
                        `podService` flag takes precedence over `roleSelector` and
                        generates a service for each Pod."
                      type: string
                    serviceName:
                      description: "ServiceName defines the name of the underlying
                        service object. If not specified, the default service name
                        with different patterns will be used: \n - CLUSTER_NAME: for
                        cluster-level services - CLUSTER_NAME-COMPONENT_NAME: for
                        component-level services \n Only one default service name
                        is allowed. Cannot be updated."
                      maxLength: 25
                      pattern: ^[a-z]([a-z0-9\-]*[a-z0-9])?$
                      type: string
                    spec:
                      description: Spec defines the behavior of a service. https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
                      properties:
                        allocateLoadBalancerNodePorts:
                          description: allocateLoadBalancerNodePorts defines if NodePorts
                            will be automatically allocated for services with type
                            LoadBalancer.  Default is "true". It may be set to "false"
                            if the cluster load-balancer does not rely on NodePorts.  If
                            the caller requests specific NodePorts (by specifying
                            a value), those requests will be respected, regardless
                            of this field. This field may only be set for services
                            with type LoadBalancer and will be cleared if the type
                            is changed to any other type.
                          type: boolean
                        clusterIP:
                          description: 'clusterIP is the IP address of the service
                            and is usually assigned randomly. If an address is specified
                            manually, is in-range (as per system configuration), and
                            is not in use, it will be allocated to the service; otherwise
                            creation of the service will fail. This field may not
                            be changed through updates unless the type field is also
                            being changed to ExternalName (which requires this field
                            to be blank) or the type field is being changed from ExternalName
                            (in which case this field may optionally be specified,
                            as describe above).  Valid values are "None", empty string
                            (""), or a valid IP address. Setting this to "None" makes
                            a "headless service" (no virtual IP), which is useful
                            when direct endpoint connections are preferred and proxying
                            is not required.  Only applies to types ClusterIP, NodePort,
                            and LoadBalancer. If this field is specified when creating
                            a Service of type ExternalName, creation will fail. This
                            field will be wiped when updating a Service to type ExternalName.
                            More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies'
                          type: string
                        clusterIPs:
                          description: "ClusterIPs is a list of IP addresses assigned
                            to this service, and are usually assigned randomly.  If
                            an address is specified manually, is in-range (as per
                            system configuration), and is not in use, it will be allocated
                            to the service; otherwise creation of the service will
                            fail. This field may not be changed through updates unless
                            the type field is also being changed to ExternalName (which
                            requires this field to be empty) or the type field is
                            being changed from ExternalName (in which case this field
                            may optionally be specified, as describe above).  Valid
                            values are \"None\", empty string (\"\"), or a valid IP
                            address.  Setting this to \"None\" makes a \"headless
                            service\" (no virtual IP), which is useful when direct
                            endpoint connections are preferred and proxying is not
                            required.  Only applies to types ClusterIP, NodePort,
                            and LoadBalancer. If this field is specified when creating
                            a Service of type ExternalName, creation will fail. This
                            field will be wiped when updating a Service to type ExternalName.
                            \ If this field is not specified, it will be initialized
                            from the clusterIP field.  If this field is specified,
                            clients must ensure that clusterIPs[0] and clusterIP have
                            the same value. \n This field may hold a maximum of two
                            entries (dual-stack IPs, in either order). These IPs must
                            correspond to the values of the ipFamilies field. Both
                            clusterIPs and ipFamilies are governed by the ipFamilyPolicy
                            field. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies"
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                        externalIPs:
                          description: externalIPs is a list of IP addresses for which
                            nodes in the cluster will also accept traffic for this
                            service.  These IPs are not managed by Kubernetes.  The
                            user is responsible for ensuring that traffic arrives
                            at a node with this IP.  A common example is external
                            load-balancers that are not part of the Kubernetes system.
                          items:
                            type: string
                          type: array
                        externalName:
                          description: externalName is the external reference that
                            discovery mechanisms will return as an alias for this
                            service (e.g. a DNS CNAME record). No proxying will be
                            involved.  Must be a lowercase RFC-1123 hostname (https://tools.ietf.org/html/rfc1123)
                            and requires `type` to be "ExternalName".
                          type: string
                        externalTrafficPolicy:
                          description: externalTrafficPolicy describes how nodes distribute
                            service traffic they receive on one of the Service's "externally-facing"
                            addresses (NodePorts, ExternalIPs, and LoadBalancer IPs).
                            If set to "Local", the proxy will configure the service
                            in a way that assumes that external load balancers will
                            take care of balancing the service traffic between nodes,
                            and so each node will deliver traffic only to the node-local
                            endpoints of the service, without masquerading the client
                            source IP. (Traffic mistakenly sent to a node with no
                            endpoints will be dropped.) The default value, "Cluster",
                            uses the standard behavior of routing to all endpoints
                            evenly (possibly modified by topology and other features).
                            Note that traffic sent to an External IP or LoadBalancer
                            IP from within the cluster will always get "Cluster" semantics,
                            but clients sending to a NodePort from within the cluster
                            may need to take traffic policy into account when picking
                            a node.
                          type: string
                        healthCheckNodePort:
                          description: healthCheckNodePort specifies the healthcheck
                            nodePort for the service. This only applies when type
                            is set to LoadBalancer and externalTrafficPolicy is set
                            to Local. If a value is specified, is in-range, and is
                            not in use, it will be used.  If not specified, a value
                            will be automatically allocated.  External systems (e.g.
                            load-balancers) can use this port to determine if a given
                            node holds endpoints for this service or not.  If this
                            field is specified when creating a Service which does
                            not need it, creation will fail. This field will be wiped
                            when updating a Service to no longer need it (e.g. changing
                            type). This field cannot be updated once set.
                          format: int32
                          type: integer
                        internalTrafficPolicy:
                          description: InternalTrafficPolicy describes how nodes distribute
                            service traffic they receive on the ClusterIP. If set
                            to "Local", the proxy will assume that pods only want
                            to talk to endpoints of the service on the same node as
                            the pod, dropping the traffic if there are no local endpoints.
                            The default value, "Cluster", uses the standard behavior
                            of routing to all endpoints evenly (possibly modified
                            by topology and other features).
                          type: string
                        ipFamilies:
                          description: "IPFamilies is a list of IP families (e.g.
                            IPv4, IPv6) assigned to this service. This field is usually
                            assigned automatically based on cluster configuration
                            and the ipFamilyPolicy field. If this field is specified
                            manually, the requested family is available in the cluster,
                            and ipFamilyPolicy allows it, it will be used; otherwise
                            creation of the service will fail. This field is conditionally
                            mutable: it allows for adding or removing a secondary
                            IP family, but it does not allow changing the primary
                            IP family of the Service. Valid values are \"IPv4\" and
                            \"IPv6\".  This field only applies to Services of types
                            ClusterIP, NodePort, and LoadBalancer, and does apply
                            to \"headless\" services. This field will be wiped when
                            updating a Service to type ExternalName. \n This field
                            may hold a maximum of two entries (dual-stack families,
                            in either order).  These families must correspond to the
                            values of the clusterIPs field, if specified. Both clusterIPs
                            and ipFamilies are governed by the ipFamilyPolicy field."
                          items:
                            description: IPFamily represents the IP Family (IPv4 or
                              IPv6). This type is used to express the family of an
                              IP expressed by a type (e.g. service.spec.ipFamilies).
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                        ipFamilyPolicy:
                          description: IPFamilyPolicy represents the dual-stack-ness
                            requested or required by this Service. If there is no
                            value provided, then this field will be set to SingleStack.
                            Services can be "SingleStack" (a single IP family), "PreferDualStack"
                            (two IP families on dual-stack configured clusters or
                            a single IP family on single-stack clusters), or "RequireDualStack"
                            (two IP families on dual-stack configured clusters, otherwise
                            fail). The ipFamilies and clusterIPs fields depend on
                            the value of this field. This field will be wiped when
                            updating a service to type ExternalName.
                          type: string
                        loadBalancerClass:
                          description: loadBalancerClass is the class of the load
                            balancer implementation this Service belongs to. If specified,
                            the value of this field must be a label-style identifier,
                            with an optional prefix, e.g. "internal-vip" or "example.com/internal-vip".
                            Unprefixed names are reserved for end-users. This field
                            can only be set when the Service type is 'LoadBalancer'.
                            If not set, the default load balancer implementation is
                            used, today this is typically done through the cloud provider
                            integration, but should apply for any default implementation.
                            If set, it is assumed that a load balancer implementation
                            is watching for Services with a matching class. Any default
                            load balancer implementation (e.g. cloud providers) should
                            ignore Services that set this field. This field can only
                            be set when creating or updating a Service to type 'LoadBalancer'.
                            Once set, it can not be changed. This field will be wiped
                            when a service is updated to a non 'LoadBalancer' type.
                          type: string
                        loadBalancerIP:
                          description: 'Only applies to Service Type: LoadBalancer.
                            This feature depends on whether the underlying cloud-provider
                            supports specifying the loadBalancerIP when a load balancer
                            is created. This field will be ignored if the cloud-provider
                            does not support the feature. Deprecated: This field was
                            under-specified and its meaning varies across implementations.
                            Using it is non-portable and it may not support dual-stack.
                            Users are encouraged to use implementation-specific annotations
                            when available.'
                          type: string
                        loadBalancerSourceRanges:
                          description: 'If specified and supported by the platform,
                            this will restrict traffic through the cloud-provider
                            load-balancer will be restricted to the specified client
                            IPs. This field will be ignored if the cloud-provider
                            does not support the feature." More info: https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/'
                          items:
                            type: string
                          type: array
                        ports:
                          description: 'The list of ports that are exposed by this
                            service. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies'
                          items:
                            description: ServicePort contains information on service's
                              port.
                            properties:
                              appProtocol:
                                description: "The application protocol for this port.
                                  This is used as a hint for implementations to offer
                                  richer behavior for protocols that they understand.
                                  This field follows standard Kubernetes label syntax.
                                  Valid values are either: \n * Un-prefixed protocol
                                  names - reserved for IANA standard service names
                                  (as per RFC-6335 and https://www.iana.org/assignments/service-names).
                                  \n * Kubernetes-defined prefixed names: * 'kubernetes.io/h2c'
                                  - HTTP/2 over cleartext as described in https://www.rfc-editor.org/rfc/rfc7540
                                  * 'kubernetes.io/ws'  - WebSocket over cleartext
                                  as described in https://www.rfc-editor.org/rfc/rfc6455
                                  * 'kubernetes.io/wss' - WebSocket over TLS as described
                                  in https://www.rfc-editor.org/rfc/rfc6455 \n * Other
                                  protocols should use implementation-defined prefixed
                                  names such as mycompany.com/my-custom-protocol."
                                type: string
                              name:
                                description: The name of this port within the service.
                                  This must be a DNS_LABEL. All ports within a ServiceSpec
                                  must have unique names. When considering the endpoints
                                  for a Service, this must match the 'name' field
                                  in the EndpointPort. Optional if only one ServicePort
                                  is defined on this service.
                                type: string
                              nodePort:
                                description: 'The port on each node on which this
                                  service is exposed when type is NodePort or LoadBalancer.  Usually
                                  assigned by the system. If a value is specified,
                                  in-range, and not in use it will be used, otherwise
                                  the operation will fail.  If not specified, a port
                                  will be allocated if this Service requires one.  If
                                  this field is specified when creating a Service
                                  which does not need it, creation will fail. This
                                  field will be wiped when updating a Service to no
                                  longer need it (e.g. changing type from NodePort
                                  to ClusterIP). More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport'
                                format: int32
                                type: integer
                              port:
                                description: The port that will be exposed by this
                                  service.
                                format: int32
                                type: integer
                              protocol:
                                default: TCP
                                description: The IP protocol for this port. Supports
                                  "TCP", "UDP", and "SCTP". Default is TCP.
                                type: string
                              targetPort:
                                anyOf:
                                - type: integer
                                - type: string
                                description: 'Number or name of the port to access
                                  on the pods targeted by the service. Number must
                                  be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                  If this is a string, it will be looked up as a named
                                  port in the target Pod''s container ports. If this
                                  is not specified, the value of the ''port'' field
                                  is used (an identity map). This field is ignored
                                  for services with clusterIP=None, and should be
                                  omitted or set equal to the ''port'' field. More
                                  info: https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service'
                                x-kubernetes-int-or-string: true
                            required:
                            - port
                            type: object
                          type: array
                          x-kubernetes-list-map-keys:
                          - port
                          - protocol
                          x-kubernetes-list-type: map
                        publishNotReadyAddresses:
                          description: publishNotReadyAddresses indicates that any
                            agent which deals with endpoints for this Service should
                            disregard any indications of ready/not-ready. The primary
                            use case for setting this field is for a StatefulSet's
                            Headless Service to propagate SRV DNS records for its
                            Pods for the purpose of peer discovery. The Kubernetes
                            controllers that generate Endpoints and EndpointSlice
                            resources for Services interpret this to mean that all
                            endpoints are considered "ready" even if the Pods themselves
                            are not. Agents which consume only Kubernetes generated
                            endpoints through the Endpoints or EndpointSlice resources
                            can safely assume this behavior.
                          type: boolean
                        selector:
                          additionalProperties:
                            type: string
                          description: 'Route service traffic to pods with label keys
                            and values matching this selector. If empty or not present,
                            the service is assumed to have an external process managing
                            its endpoints, which Kubernetes will not modify. Only
                            applies to types ClusterIP, NodePort, and LoadBalancer.
                            Ignored if type is ExternalName. More info: https://kubernetes.io/docs/concepts/services-networking/service/'
                          type: object
                          x-kubernetes-map-type: atomic
                        sessionAffinity:
                          description: 'Supports "ClientIP" and "None". Used to maintain
                            session affinity. Enable client IP based session affinity.
                            Must be ClientIP or None. Defaults to None. More info:
                            https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies'
                          type: string
                        sessionAffinityConfig:
                          description: sessionAffinityConfig contains the configurations
                            of session affinity.
                          properties:
                            clientIP:
                              description: clientIP contains the configurations of
                                Client IP based session affinity.
                              properties:
                                timeoutSeconds:
                                  description: timeoutSeconds specifies the seconds
                                    of ClientIP type session sticky time. The value
                                    must be >0 && <=86400(for 1 day) if ServiceAffinity
                                    == "ClientIP". Default value is 10800(for 3 hours).
                                  format: int32
                                  type: integer
                              type: object
                          type: object
                        type:
                          description: 'type determines how the Service is exposed.
                            Defaults to ClusterIP. Valid options are ExternalName,
                            ClusterIP, NodePort, and LoadBalancer. "ClusterIP" allocates
                            a cluster-internal IP address for load-balancing to endpoints.
                            Endpoints are determined by the selector or if that is
                            not specified, by manual construction of an Endpoints
                            object or EndpointSlice objects. If clusterIP is "None",
                            no virtual IP is allocated and the endpoints are published
                            as a set of endpoints rather than a virtual IP. "NodePort"
                            builds on ClusterIP and allocates a port on every node
                            which routes to the same endpoints as the clusterIP. "LoadBalancer"
                            builds on NodePort and creates an external load-balancer
                            (if supported in the current cloud) which routes to the
                            same endpoints as the clusterIP. "ExternalName" aliases
                            this service to the specified externalName. Several other
                            fields do not apply to ExternalName services. More info:
                            https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types'
                          type: string
                      type: object
                  required:
                  - name
                  type: object
                type: array
              systemAccounts:
                description: "An array of `SystemAccount` objects that define the
                  system accounts needed for the management operations of the Component.
                  \n Each `SystemAccount` includes: \n - Account name. - The SQL statement
                  template: Used to create the system account. - Password Source:
                  Either generated based on certain rules or retrieved from a Secret.
                  \n Use cases for system accounts typically involve tasks like system
                  initialization, backups, monitoring, health checks, replication,
                  and other system-level operations. \n System accounts are distinct
                  from user accounts, although both are database accounts. \n - **System
                  Accounts**: Created during Cluster setup by the KubeBlocks operator,
                  these accounts have higher privileges for system management and
                  are fully managed through a declarative API by the operator. - **User
                  Accounts**: Managed by users or administrator. User account permissions
                  should follow the principle of least privilege, granting only the
                  necessary access rights to complete their required tasks. \n This
                  field is immutable."
                items:
                  properties:
                    initAccount:
                      default: false
                      description: "Indicates if this account is a system initialization
                        account (e.g., MySQL root). \n This field is immutable once
                        set."
                      type: boolean
                    name:
                      description: "Specifies the unique identifier for the account.
                        This name is used by other entities to reference the account.
                        \n This field is immutable once set."
                      type: string
                    passwordGenerationPolicy:
                      description: "Specifies the policy for generating the account's
                        password. \n This field is immutable once set."
                      properties:
                        length:
                          default: 16
                          description: The length of the password.
                          format: int32
                          maximum: 32
                          minimum: 8
                          type: integer
                        letterCase:
                          default: MixedCases
                          description: The case of the letters in the password.
                          enum:
                          - LowerCases
                          - UpperCases
                          - MixedCases
                          type: string
                        numDigits:
                          default: 4
                          description: The number of digits in the password.
                          format: int32
                          maximum: 8
                          minimum: 0
                          type: integer
                        numSymbols:
                          default: 0
                          description: The number of symbols in the password.
                          format: int32
                          maximum: 8
                          minimum: 0
                          type: integer
                        seed:
                          description: Seed to generate the account's password. Cannot
                            be updated.
                          type: string
                      type: object
                    secretRef:
                      description: "Refers to the secret from which data will be copied
                        to create the new account. \n This field is immutable once
                        set."
                      properties:
                        name:
                          description: The unique identifier of the secret.
                          type: string
                        namespace:
                          description: The namespace where the secret is located.
                          type: string
                      required:
                      - name
                      - namespace
                      type: object
                    statement:
                      description: "Defines the statement used to create the account
                        with the necessary privileges. \n This field is immutable
                        once set."
                      type: string
                  required:
                  - name
                  type: object
                type: array
              updateStrategy:
                default: Serial
                description: "Specifies the concurrency strategy for updating multiple
                  instances of the Component. Available strategies: \n - `Serial`:
                  Updates replicas one at a time, ensuring minimal downtime by waiting
                  for each replica to become ready before updating the next. - `Parallel`:
                  Updates all replicas simultaneously, optimizing for speed but potentially
                  reducing availability during the update. - `BestEffortParallel`:
                  Updates replicas concurrently with a limit on simultaneous updates
                  to ensure a minimum number of operational replicas for maintaining
                  quorum. For example, in a 5-replica component, updating a maximum
                  of 2 replicas simultaneously keeps at least 3 operational for quorum.
                  \n This field is immutable and defaults to 'Serial'."
                enum:
                - Serial
                - BestEffortParallel
                - Parallel
                type: string
              vars:
                description: "Defines variables which are determined after Cluster
                  instantiation and reflect dynamic or runtime attributes of instantiated
                  Clusters. These variables serve as placeholders for setting environment
                  variables in Pods and Actions, or for rendering configuration and
                  script templates before actual values are finalized. \n These variables
                  are placed in front of the environment variables declared in the
                  Pod if used as environment variables. \n Variable values can be
                  sourced from: \n - ConfigMap: Select and extract a value from a
                  specific key within a ConfigMap. - Secret: Select and extract a
                  value from a specific key within a Secret. - HostNetwork: Retrieves
                  values (including ports) from host-network resources. - Service:
                  Retrieves values (including address, port, NodePort) from a selected
                  Service. Intended to obtain the address of a ComponentService within
                  the same Cluster. - Credential: Retrieves account name and password
                  from a SystemAccount variable. - ServiceRef: Retrieves address,
                  port, account name and password from a selected ServiceRefDeclaration.
                  Designed to obtain the address bound to a ServiceRef, such as a
                  ClusterService or ComponentService of another cluster or an external
                  service. - Component: Retrieves values from a selected Component,
                  including replicas and instance name list. \n This field is immutable."
                items:
                  description: EnvVar represents a variable present in the env of
                    Pod/Action or the template of config/script.
                  properties:
                    expression:
                      description: "A Go template expression that will be applied
                        to the resolved value of the var. \n The expression will only
                        be evaluated if the var is successfully resolved to a non-credential
                        value. \n The resolved value can be accessed by its name within
                        the expression, system vars and other user-defined non-credential
                        vars can be used within the expression in the same way. Notice
                        that, when accessing vars by its name, you should replace
                        all the \"-\" in the name with \"_\", because of that \"-\"
                        is not a valid identifier in Go. \n All expressions are evaluated
                        in the order the vars are defined. If a var depends on any
                        vars that also have expressions defined, be careful about
                        the evaluation order as it may use intermediate values. \n
                        The result of evaluation will be used as the final value of
                        the var. If the expression fails to evaluate, the resolving
                        of var will also be considered failed."
                      type: string
                    name:
                      description: Name of the variable. Must be a C_IDENTIFIER.
                      type: string
                    value:
                      description: "Variable references `$(VAR_NAME)` are expanded
                        using the previously defined variables in the current context.
                        \n If a variable cannot be resolved, the reference in the
                        input string will be unchanged. Double `$$` are reduced to
                        a single `$`, which allows for escaping the `$(VAR_NAME)`
                        syntax: i.e. \n - `$$(VAR_NAME)` will produce the string literal
                        `$(VAR_NAME)`. \n Escaped references will never be expanded,
                        regardless of whether the variable exists or not. Defaults
                        to \"\"."
                      type: string
                    valueFrom:
                      description: Source for the variable's value. Cannot be used
                        if value is not empty.
                      properties:
                        componentVarRef:
                          description: Selects a defined var of a Component.
                          properties:
                            compDef:
                              description: CompDef specifies the definition used by
                                the component that the referent object resident in.
                                If not specified, the component itself will be used.
                              type: string
                            componentName:
                              description: Reference to the name of the Component
                                object.
                              enum:
                              - Required
                              - Optional
                              type: string
                            instanceNames:
                              description: 'Reference to the instanceName list of
                                the component. and the value will be presented in
                                the following format: instanceName1,instanceName2,...'
                              enum:
                              - Required
                              - Optional
                              type: string
                            multipleClusterObjectOption:
                              description: This option defines the behavior when multiple
                                component objects match the specified @CompDef. If
                                not provided, an error will be raised when handling
                                multiple matches.
                              properties:
                                combinedOption:
                                  description: Define the options for handling combined
                                    variables. Valid only when the strategy is set
                                    to "combined".
                                  properties:
                                    flattenFormat:
                                      description: 'The flatten format, default is:
                                        $(comp-name-1):value,$(comp-name-2):value.'
                                      properties:
                                        delimiter:
                                          default: ','
                                          description: Pair delimiter.
                                          type: string
                                        keyValueDelimiter:
                                          default: ':'
                                          description: Key-value delimiter.
                                          type: string
                                      required:
                                      - delimiter
                                      - keyValueDelimiter
                                      type: object
                                    newVarSuffix:
                                      description: 'If set, the existing variable
                                        will be kept, and a new variable will be defined
                                        with the specified suffix in pattern: $(var.name)_$(suffix).
                                        The new variable will be auto-created and
                                        placed behind the existing one. If not set,
                                        the existing variable will be reused with
                                        the value format defined below.'
                                      type: string
                                    valueFormat:
                                      default: Flatten
                                      description: The format of the value that the
                                        operator will use to compose values from multiple
                                        components.
                                      type: string
                                  type: object
                                strategy:
                                  description: Define the strategy for handling multiple
                                    cluster objects.
                                  enum:
                                  - individual
                                  - combined
                                  type: string
                              required:
                              - strategy
                              type: object
                            name:
                              description: Name of the referent object.
                              type: string
                            optional:
                              description: Specify whether the object must be defined.
                              type: boolean
                            podFQDNs:
                              description: 'Reference to the pod FQDN list of the
                                component. The value will be presented in the following
                                format: FQDN1,FQDN2,...'
                              enum:
                              - Required
                              - Optional
                              type: string
                            replicas:
                              description: Reference to the replicas of the component.
                              enum:
                              - Required
                              - Optional
                              type: string
                          type: object
                        configMapKeyRef:
                          description: Selects a key of a ConfigMap.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the ConfigMap or its key
                                must be defined
                              type: boolean
                          required:
                          - key
                          type: object
                          x-kubernetes-map-type: atomic
                        credentialVarRef:
                          description: Selects a defined var of a Credential (SystemAccount).
                          properties:
                            compDef:
                              description: CompDef specifies the definition used by
                                the component that the referent object resident in.
                                If not specified, the component itself will be used.
                              type: string
                            multipleClusterObjectOption:
                              description: This option defines the behavior when multiple
                                component objects match the specified @CompDef. If
                                not provided, an error will be raised when handling
                                multiple matches.
                              properties:
                                combinedOption:
                                  description: Define the options for handling combined
                                    variables. Valid only when the strategy is set
                                    to "combined".
                                  properties:
                                    flattenFormat:
                                      description: 'The flatten format, default is:
                                        $(comp-name-1):value,$(comp-name-2):value.'
                                      properties:
                                        delimiter:
                                          default: ','
                                          description: Pair delimiter.
                                          type: string
                                        keyValueDelimiter:
                                          default: ':'
                                          description: Key-value delimiter.
                                          type: string
                                      required:
                                      - delimiter
                                      - keyValueDelimiter
                                      type: object
                                    newVarSuffix:
                                      description: 'If set, the existing variable
                                        will be kept, and a new variable will be defined
                                        with the specified suffix in pattern: $(var.name)_$(suffix).
                                        The new variable will be auto-created and
                                        placed behind the existing one. If not set,
                                        the existing variable will be reused with
                                        the value format defined below.'
                                      type: string
                                    valueFormat:
                                      default: Flatten
                                      description: The format of the value that the
                                        operator will use to compose values from multiple
                                        components.
                                      type: string
                                  type: object
                                strategy:
                                  description: Define the strategy for handling multiple
                                    cluster objects.
                                  enum:
                                  - individual
                                  - combined
                                  type: string
                              required:
                              - strategy
                              type: object
                            name:
                              description: Name of the referent object.
                              type: string
                            optional:
                              description: Specify whether the object must be defined.
                              type: boolean
                            password:
                              description: VarOption defines whether a variable is
                                required or optional.
                              enum:
                              - Required
                              - Optional
                              type: string
                            username:
                              description: VarOption defines whether a variable is
                                required or optional.
                              enum:
                              - Required
                              - Optional
                              type: string
                          type: object
                        hostNetworkVarRef:
                          description: Selects a defined var of host-network resources.
                          properties:
                            compDef:
                              description: CompDef specifies the definition used by
                                the component that the referent object resident in.
                                If not specified, the component itself will be used.
                              type: string
                            container:
                              description: ContainerVars defines the vars that can
                                be referenced from a Container.
                              properties:
                                name:
                                  description: The name of the container.
                                  type: string
                                port:
                                  description: Container port to reference.
                                  properties:
                                    name:
                                      type: string
                                    option:
                                      description: VarOption defines whether a variable
                                        is required or optional.
                                      enum:
                                      - Required
                                      - Optional
                                      type: string
                                  type: object
                              required:
                              - name
                              type: object
                            multipleClusterObjectOption:
                              description: This option defines the behavior when multiple
                                component objects match the specified @CompDef. If
                                not provided, an error will be raised when handling
                                multiple matches.
                              properties:
                                combinedOption:
                                  description: Define the options for handling combined
                                    variables. Valid only when the strategy is set
                                    to "combined".
                                  properties:
                                    flattenFormat:
                                      description: 'The flatten format, default is:
                                        $(comp-name-1):value,$(comp-name-2):value.'
                                      properties:
                                        delimiter:
                                          default: ','
                                          description: Pair delimiter.
                                          type: string
                                        keyValueDelimiter:
                                          default: ':'
                                          description: Key-value delimiter.
                                          type: string
                                      required:
                                      - delimiter
                                      - keyValueDelimiter
                                      type: object
                                    newVarSuffix:
                                      description: 'If set, the existing variable
                                        will be kept, and a new variable will be defined
                                        with the specified suffix in pattern: $(var.name)_$(suffix).
                                        The new variable will be auto-created and
                                        placed behind the existing one. If not set,
                                        the existing variable will be reused with
                                        the value format defined below.'
                                      type: string
                                    valueFormat:
                                      default: Flatten
                                      description: The format of the value that the
                                        operator will use to compose values from multiple
                                        components.
                                      type: string
                                  type: object
                                strategy:
                                  description: Define the strategy for handling multiple
                                    cluster objects.
                                  enum:
                                  - individual
                                  - combined
                                  type: string
                              required:
                              - strategy
                              type: object
                            name:
                              description: Name of the referent object.
                              type: string
                            optional:
                              description: Specify whether the object must be defined.
                              type: boolean
                          type: object
                        secretKeyRef:
                          description: Selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                          x-kubernetes-map-type: atomic
                        serviceRefVarRef:
                          description: Selects a defined var of a ServiceRef.
                          properties:
                            compDef:
                              description: CompDef specifies the definition used by
                                the component that the referent object resident in.
                                If not specified, the component itself will be used.
                              type: string
                            endpoint:
                              description: VarOption defines whether a variable is
                                required or optional.
                              enum:
                              - Required
                              - Optional
                              type: string
                            host:
                              description: VarOption defines whether a variable is
                                required or optional.
                              enum:
                              - Required
                              - Optional
                              type: string
                            multipleClusterObjectOption:
                              description: This option defines the behavior when multiple
                                component objects match the specified @CompDef. If
                                not provided, an error will be raised when handling
                                multiple matches.
                              properties:
                                combinedOption:
                                  description: Define the options for handling combined
                                    variables. Valid only when the strategy is set
                                    to "combined".
                                  properties:
                                    flattenFormat:
                                      description: 'The flatten format, default is:
                                        $(comp-name-1):value,$(comp-name-2):value.'
                                      properties:
                                        delimiter:
                                          default: ','
                                          description: Pair delimiter.
                                          type: string
                                        keyValueDelimiter:
                                          default: ':'
                                          description: Key-value delimiter.
                                          type: string
                                      required:
                                      - delimiter
                                      - keyValueDelimiter
                                      type: object
                                    newVarSuffix:
                                      description: 'If set, the existing variable
                                        will be kept, and a new variable will be defined
                                        with the specified suffix in pattern: $(var.name)_$(suffix).
                                        The new variable will be auto-created and
                                        placed behind the existing one. If not set,
                                        the existing variable will be reused with
                                        the value format defined below.'
                                      type: string
                                    valueFormat:
                                      default: Flatten
                                      description: The format of the value that the
                                        operator will use to compose values from multiple
                                        components.
                                      type: string
                                  type: object
                                strategy:
                                  description: Define the strategy for handling multiple
                                    cluster objects.
                                  enum:
                                  - individual
                                  - combined
                                  type: string
                              required:
                              - strategy
                              type: object
                            name:
                              description: Name of the referent object.
                              type: string
                            optional:
                              description: Specify whether the object must be defined.
                              type: boolean
                            password:
                              description: VarOption defines whether a variable is
                                required or optional.
                              enum:
                              - Required
                              - Optional
                              type: string
                            port:
                              description: VarOption defines whether a variable is
                                required or optional.
                              enum:
                              - Required
                              - Optional
                              type: string
                            username:
                              description: VarOption defines whether a variable is
                                required or optional.
                              enum:
                              - Required
                              - Optional
                              type: string
                          type: object
                        serviceVarRef:
                          description: Selects a defined var of a Service.
                          properties:
                            compDef:
                              description: CompDef specifies the definition used by
                                the component that the referent object resident in.
                                If not specified, the component itself will be used.
                              type: string
                            host:
                              description: VarOption defines whether a variable is
                                required or optional.
                              enum:
                              - Required
                              - Optional
                              type: string
                            loadBalancer:
                              description: "LoadBalancer represents the LoadBalancer
                                ingress point of the service. \n If multiple ingress
                                points are available, the first one will be used automatically,
                                choosing between IP and Hostname."
                              enum:
                              - Required
                              - Optional
                              type: string
                            multipleClusterObjectOption:
                              description: This option defines the behavior when multiple
                                component objects match the specified @CompDef. If
                                not provided, an error will be raised when handling
                                multiple matches.
                              properties:
                                combinedOption:
                                  description: Define the options for handling combined
                                    variables. Valid only when the strategy is set
                                    to "combined".
                                  properties:
                                    flattenFormat:
                                      description: 'The flatten format, default is:
                                        $(comp-name-1):value,$(comp-name-2):value.'
                                      properties:
                                        delimiter:
                                          default: ','
                                          description: Pair delimiter.
                                          type: string
                                        keyValueDelimiter:
                                          default: ':'
                                          description: Key-value delimiter.
                                          type: string
                                      required:
                                      - delimiter
                                      - keyValueDelimiter
                                      type: object
                                    newVarSuffix:
                                      description: 'If set, the existing variable
                                        will be kept, and a new variable will be defined
                                        with the specified suffix in pattern: $(var.name)_$(suffix).
                                        The new variable will be auto-created and
                                        placed behind the existing one. If not set,
                                        the existing variable will be reused with
                                        the value format defined below.'
                                      type: string
                                    valueFormat:
                                      default: Flatten
                                      description: The format of the value that the
                                        operator will use to compose values from multiple
                                        components.
                                      type: string
                                  type: object
                                strategy:
                                  description: Define the strategy for handling multiple
                                    cluster objects.
                                  enum:
                                  - individual
                                  - combined
                                  type: string
                              required:
                              - strategy
                              type: object
                            name:
                              description: Name of the referent object.
                              type: string
                            optional:
                              description: Specify whether the object must be defined.
                              type: boolean
                            port:
                              description: "Port references a port or node-port defined
                                in the service. \n If the referenced service is a
                                pod-service, there will be multiple service objects
                                matched, and the value will be presented in the following
                                format: service1.name:port1,service2.name:port2..."
                              properties:
                                name:
                                  type: string
                                option:
                                  description: VarOption defines whether a variable
                                    is required or optional.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                              type: object
                          type: object
                      type: object
                  required:
                  - name
                  type: object
                type: array
              volumes:
                description: "Defines the volumes used by the Component and some static
                  attributes of the volumes. After defining the volumes here, user
                  can reference them in the `cluster.spec.componentSpecs[*].volumeClaimTemplates`
                  field to configure dynamic properties such as volume capacity and
                  storage class. \n This field allows you to specify the following:
                  \n - Snapshot behavior: Determines whether a snapshot of the volume
                  should be taken when performing a snapshot backup of the Component.
                  - Disk high watermark: Sets the high watermark for the volume's
                  disk usage. When the disk usage reaches the specified threshold,
                  it triggers an alert or action. \n By configuring these volume behaviors,
                  you can control how the volumes are managed and monitored within
                  the Component. \n This field is immutable."
                items:
                  properties:
                    highWatermark:
                      default: 0
                      description: "Sets the critical threshold for volume space utilization
                        as a percentage (0-100). \n Exceeding this percentage triggers
                        the system to switch the volume to read-only mode as specified
                        in `componentDefinition.spec.lifecycleActions.readOnly`. This
                        precaution helps prevent space depletion while maintaining
                        read-only access. If the space utilization later falls below
                        this threshold, the system reverts the volume to read-write
                        mode as defined in `componentDefinition.spec.lifecycleActions.readWrite`,
                        restoring full functionality. \n Note: This field cannot be
                        updated."
                      maximum: 100
                      minimum: 0
                      type: integer
                    name:
                      description: 'Specifies the name of the volume. It must be a
                        DNS_LABEL and unique within the pod. More info can be found
                        at: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        Note: This field cannot be updated.'
                      type: string
                    needSnapshot:
                      default: false
                      description: "Specifies whether the creation of a snapshot of
                        this volume is necessary when performing a backup of the Component.
                        \n Note: This field cannot be updated."
                      type: boolean
                  required:
                  - name
                  type: object
                type: array
            required:
            - runtime
            type: object
          status:
            description: ComponentDefinitionStatus defines the observed state of ComponentDefinition.
            properties:
              message:
                description: Provides additional information about the current phase.
                type: string
              observedGeneration:
                description: Refers to the most recent generation that has been observed
                  for the ComponentDefinition.
                format: int64
                type: integer
              phase:
                description: Represents the current status of the ComponentDefinition.
                  Valid values include ``, `Available`, and `Unavailable`. When the
                  status is `Available`, the ComponentDefinition is ready and can
                  be utilized by related objects.
                enum:
                - Available
                - Unavailable
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
