apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  labels:
    app.kubernetes.io/name: kubeblocks
  name: shardingdefinitions.apps.kubeblocks.io
spec:
  group: apps.kubeblocks.io
  names:
    categories:
    - kubeblocks
    kind: ShardingDefinition
    listKind: ShardingDefinitionList
    plural: shardingdefinitions
    shortNames:
    - sdd
    singular: shardingdefinition
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - description: template
      jsonPath: .spec.template.compDef
      name: TEMPLATE
      type: string
    - description: status phase
      jsonPath: .status.phase
      name: STATUS
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1
    schema:
      openAPIV3Schema:
        description: ShardingDefinition is the Schema for the shardingdefinitions
          API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ShardingDefinitionSpec defines the desired state of ShardingDefinition
            properties:
              lifecycleActions:
                description: |-
                  Defines a set of hooks and procedures that customize the behavior of a sharding throughout its lifecycle.


                  This field is immutable.
                properties:
                  postProvision:
                    description: |-
                      Specifies the hook to be executed after a sharding's creation.


                      By setting `postProvision.preCondition`, you can determine the specific lifecycle stage at which
                      the action should trigger, available conditions for sharding include: `Immediately`, `ComponentReady`,
                      and `ClusterReady`. For sharding, the `ComponentReady` condition means all components of the sharding are ready.


                      With `ComponentReady` being the default.


                      The PostProvision Action is intended to run only once.


                      Note: This field is immutable once it has been set.
                    properties:
                      exec:
                        description: |-
                          Defines the command to run.


                          This field cannot be updated.
                        properties:
                          args:
                            description: Args represents the arguments that are passed
                              to the `command` for execution.
                            items:
                              type: string
                            type: array
                          command:
                            description: |-
                              Specifies the command to be executed inside the container.
                              The working directory for this command is the container's root directory('/').
                              Commands are executed directly without a shell environment, meaning shell-specific syntax ('|', etc.) is not supported.
                              If the shell is required, it must be explicitly invoked in the command.


                              A successful execution is indicated by an exit status of 0; any non-zero status signifies a failure.
                            items:
                              type: string
                            type: array
                          container:
                            description: |-
                              Specifies the name of the container within the same pod whose resources will be shared with the action.
                              This allows the action to utilize the specified container's resources without executing within it.


                              The name must match one of the containers defined in `componentDefinition.spec.runtime`.


                              The resources that can be shared are included:


                              - volume mounts


                              This field cannot be updated.
                            type: string
                          env:
                            description: |-
                              Represents a list of environment variables that will be injected into the container.
                              These variables enable the container to adapt its behavior based on the environment it's running in.


                              This field cannot be updated.
                            items:
                              description: EnvVar represents an environment variable
                                present in a Container.
                              properties:
                                name:
                                  description: Name of the environment variable. Must
                                    be a C_IDENTIFIER.
                                  type: string
                                value:
                                  description: |-
                                    Variable references $(VAR_NAME) are expanded
                                    using the previously defined environment variables in the container and
                                    any service environment variables. If a variable cannot be resolved,
                                    the reference in the input string will be unchanged. Double $$ are reduced
                                    to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                                    "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                                    Escaped references will never be expanded, regardless of whether the variable
                                    exists or not.
                                    Defaults to "".
                                  type: string
                                valueFrom:
                                  description: Source for the environment variable's
                                    value. Cannot be used if value is not empty.
                                  properties:
                                    configMapKeyRef:
                                      description: Selects a key of a ConfigMap.
                                      properties:
                                        key:
                                          description: The key to select.
                                          type: string
                                        name:
                                          description: |-
                                            Name of the referent.
                                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion, kind, uid?
                                          type: string
                                        optional:
                                          description: Specify whether the ConfigMap
                                            or its key must be defined
                                          type: boolean
                                      required:
                                      - key
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    fieldRef:
                                      description: |-
                                        Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
                                        spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                                      properties:
                                        apiVersion:
                                          description: Version of the schema the FieldPath
                                            is written in terms of, defaults to "v1".
                                          type: string
                                        fieldPath:
                                          description: Path of the field to select
                                            in the specified API version.
                                          type: string
                                      required:
                                      - fieldPath
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    resourceFieldRef:
                                      description: |-
                                        Selects a resource of the container: only resources limits and requests
                                        (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                                      properties:
                                        containerName:
                                          description: 'Container name: required for
                                            volumes, optional for env vars'
                                          type: string
                                        divisor:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: Specifies the output format
                                            of the exposed resources, defaults to
                                            "1"
                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          x-kubernetes-int-or-string: true
                                        resource:
                                          description: 'Required: resource to select'
                                          type: string
                                      required:
                                      - resource
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    secretKeyRef:
                                      description: Selects a key of a secret in the
                                        pod's namespace
                                      properties:
                                        key:
                                          description: The key of the secret to select
                                            from.  Must be a valid secret key.
                                          type: string
                                        name:
                                          description: |-
                                            Name of the referent.
                                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion, kind, uid?
                                          type: string
                                        optional:
                                          description: Specify whether the Secret
                                            or its key must be defined
                                          type: boolean
                                      required:
                                      - key
                                      type: object
                                      x-kubernetes-map-type: atomic
                                  type: object
                              required:
                              - name
                              type: object
                            type: array
                          image:
                            description: |-
                              Specifies the container image to be used for running the Action.


                              When specified, a dedicated container will be created using this image to execute the Action.
                              All actions with same image will share the same container.


                              This field cannot be updated.
                            type: string
                          matchingKey:
                            description: |-
                              Used in conjunction with the `targetPodSelector` field to refine the selection of target pod(s) for Action execution.
                              The impact of this field depends on the `targetPodSelector` value:


                              - When `targetPodSelector` is set to `Any` or `All`, this field will be ignored.
                              - When `targetPodSelector` is set to `Role`, only those replicas whose role matches the `matchingKey`
                                will be selected for the Action.


                              This field cannot be updated.
                            type: string
                          targetPodSelector:
                            description: |-
                              Defines the criteria used to select the target Pod(s) for executing the Action.
                              This is useful when there is no default target replica identified.
                              It allows for precise control over which Pod(s) the Action should run in.


                              If not specified, the Action will be executed in the pod where the Action is triggered, such as the pod
                              to be removed or added; or a random pod if the Action is triggered at the component level, such as
                              post-provision or pre-terminate of the component.


                              This field cannot be updated.
                            enum:
                            - Any
                            - All
                            - Role
                            - Ordinal
                            type: string
                        type: object
                      preCondition:
                        description: |-
                          Specifies the state that the cluster must reach before the Action is executed.
                          Currently, this is only applicable to the `postProvision` action.


                          The conditions are as follows:


                          - `Immediately`: Executed right after the Component object is created.
                            The readiness of the Component and its resources is not guaranteed at this stage.
                          - `RuntimeReady`: The Action is triggered after the Component object has been created and all associated
                            runtime resources (e.g. Pods) are in a ready state.
                          - `ComponentReady`: The Action is triggered after the Component itself is in a ready state.
                            This process does not affect the readiness state of the Component or the Cluster.
                          - `ClusterReady`: The Action is executed after the Cluster is in a ready state.
                            This execution does not alter the Component or the Cluster's state of readiness.


                          This field cannot be updated.
                        type: string
                      retryPolicy:
                        description: |-
                          Defines the strategy to be taken when retrying the Action after a failure.


                          It specifies the conditions under which the Action should be retried and the limits to apply,
                          such as the maximum number of retries and backoff strategy.


                          This field cannot be updated.
                        properties:
                          maxRetries:
                            default: 0
                            description: |-
                              Defines the maximum number of retry attempts that should be made for a given Action.
                              This value is set to 0 by default, indicating that no retries will be made.
                            type: integer
                          retryInterval:
                            default: 0
                            description: |-
                              Indicates the duration of time to wait between each retry attempt.
                              This value is set to 0 by default, indicating that there will be no delay between retry attempts.
                            format: int64
                            type: integer
                        type: object
                      timeoutSeconds:
                        default: 0
                        description: |-
                          Specifies the maximum duration in seconds that the Action is allowed to run.


                          If the Action does not complete within this time frame, it will be terminated.


                          This field cannot be updated.
                        format: int32
                        type: integer
                    type: object
                  preTerminate:
                    description: |-
                      Specifies the hook to be executed prior to terminating a sharding.


                      The PreTerminate Action is intended to run only once.


                      This action is executed immediately when a terminate operation for the sharding is initiated.
                      The actual termination and cleanup of the sharding and its associated resources will not proceed
                      until the PreTerminate action has completed successfully.


                      Note: This field is immutable once it has been set.
                    properties:
                      exec:
                        description: |-
                          Defines the command to run.


                          This field cannot be updated.
                        properties:
                          args:
                            description: Args represents the arguments that are passed
                              to the `command` for execution.
                            items:
                              type: string
                            type: array
                          command:
                            description: |-
                              Specifies the command to be executed inside the container.
                              The working directory for this command is the container's root directory('/').
                              Commands are executed directly without a shell environment, meaning shell-specific syntax ('|', etc.) is not supported.
                              If the shell is required, it must be explicitly invoked in the command.


                              A successful execution is indicated by an exit status of 0; any non-zero status signifies a failure.
                            items:
                              type: string
                            type: array
                          container:
                            description: |-
                              Specifies the name of the container within the same pod whose resources will be shared with the action.
                              This allows the action to utilize the specified container's resources without executing within it.


                              The name must match one of the containers defined in `componentDefinition.spec.runtime`.


                              The resources that can be shared are included:


                              - volume mounts


                              This field cannot be updated.
                            type: string
                          env:
                            description: |-
                              Represents a list of environment variables that will be injected into the container.
                              These variables enable the container to adapt its behavior based on the environment it's running in.


                              This field cannot be updated.
                            items:
                              description: EnvVar represents an environment variable
                                present in a Container.
                              properties:
                                name:
                                  description: Name of the environment variable. Must
                                    be a C_IDENTIFIER.
                                  type: string
                                value:
                                  description: |-
                                    Variable references $(VAR_NAME) are expanded
                                    using the previously defined environment variables in the container and
                                    any service environment variables. If a variable cannot be resolved,
                                    the reference in the input string will be unchanged. Double $$ are reduced
                                    to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                                    "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                                    Escaped references will never be expanded, regardless of whether the variable
                                    exists or not.
                                    Defaults to "".
                                  type: string
                                valueFrom:
                                  description: Source for the environment variable's
                                    value. Cannot be used if value is not empty.
                                  properties:
                                    configMapKeyRef:
                                      description: Selects a key of a ConfigMap.
                                      properties:
                                        key:
                                          description: The key to select.
                                          type: string
                                        name:
                                          description: |-
                                            Name of the referent.
                                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion, kind, uid?
                                          type: string
                                        optional:
                                          description: Specify whether the ConfigMap
                                            or its key must be defined
                                          type: boolean
                                      required:
                                      - key
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    fieldRef:
                                      description: |-
                                        Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
                                        spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                                      properties:
                                        apiVersion:
                                          description: Version of the schema the FieldPath
                                            is written in terms of, defaults to "v1".
                                          type: string
                                        fieldPath:
                                          description: Path of the field to select
                                            in the specified API version.
                                          type: string
                                      required:
                                      - fieldPath
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    resourceFieldRef:
                                      description: |-
                                        Selects a resource of the container: only resources limits and requests
                                        (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                                      properties:
                                        containerName:
                                          description: 'Container name: required for
                                            volumes, optional for env vars'
                                          type: string
                                        divisor:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: Specifies the output format
                                            of the exposed resources, defaults to
                                            "1"
                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          x-kubernetes-int-or-string: true
                                        resource:
                                          description: 'Required: resource to select'
                                          type: string
                                      required:
                                      - resource
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    secretKeyRef:
                                      description: Selects a key of a secret in the
                                        pod's namespace
                                      properties:
                                        key:
                                          description: The key of the secret to select
                                            from.  Must be a valid secret key.
                                          type: string
                                        name:
                                          description: |-
                                            Name of the referent.
                                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion, kind, uid?
                                          type: string
                                        optional:
                                          description: Specify whether the Secret
                                            or its key must be defined
                                          type: boolean
                                      required:
                                      - key
                                      type: object
                                      x-kubernetes-map-type: atomic
                                  type: object
                              required:
                              - name
                              type: object
                            type: array
                          image:
                            description: |-
                              Specifies the container image to be used for running the Action.


                              When specified, a dedicated container will be created using this image to execute the Action.
                              All actions with same image will share the same container.


                              This field cannot be updated.
                            type: string
                          matchingKey:
                            description: |-
                              Used in conjunction with the `targetPodSelector` field to refine the selection of target pod(s) for Action execution.
                              The impact of this field depends on the `targetPodSelector` value:


                              - When `targetPodSelector` is set to `Any` or `All`, this field will be ignored.
                              - When `targetPodSelector` is set to `Role`, only those replicas whose role matches the `matchingKey`
                                will be selected for the Action.


                              This field cannot be updated.
                            type: string
                          targetPodSelector:
                            description: |-
                              Defines the criteria used to select the target Pod(s) for executing the Action.
                              This is useful when there is no default target replica identified.
                              It allows for precise control over which Pod(s) the Action should run in.


                              If not specified, the Action will be executed in the pod where the Action is triggered, such as the pod
                              to be removed or added; or a random pod if the Action is triggered at the component level, such as
                              post-provision or pre-terminate of the component.


                              This field cannot be updated.
                            enum:
                            - Any
                            - All
                            - Role
                            - Ordinal
                            type: string
                        type: object
                      preCondition:
                        description: |-
                          Specifies the state that the cluster must reach before the Action is executed.
                          Currently, this is only applicable to the `postProvision` action.


                          The conditions are as follows:


                          - `Immediately`: Executed right after the Component object is created.
                            The readiness of the Component and its resources is not guaranteed at this stage.
                          - `RuntimeReady`: The Action is triggered after the Component object has been created and all associated
                            runtime resources (e.g. Pods) are in a ready state.
                          - `ComponentReady`: The Action is triggered after the Component itself is in a ready state.
                            This process does not affect the readiness state of the Component or the Cluster.
                          - `ClusterReady`: The Action is executed after the Cluster is in a ready state.
                            This execution does not alter the Component or the Cluster's state of readiness.


                          This field cannot be updated.
                        type: string
                      retryPolicy:
                        description: |-
                          Defines the strategy to be taken when retrying the Action after a failure.


                          It specifies the conditions under which the Action should be retried and the limits to apply,
                          such as the maximum number of retries and backoff strategy.


                          This field cannot be updated.
                        properties:
                          maxRetries:
                            default: 0
                            description: |-
                              Defines the maximum number of retry attempts that should be made for a given Action.
                              This value is set to 0 by default, indicating that no retries will be made.
                            type: integer
                          retryInterval:
                            default: 0
                            description: |-
                              Indicates the duration of time to wait between each retry attempt.
                              This value is set to 0 by default, indicating that there will be no delay between retry attempts.
                            format: int64
                            type: integer
                        type: object
                      timeoutSeconds:
                        default: 0
                        description: |-
                          Specifies the maximum duration in seconds that the Action is allowed to run.


                          If the Action does not complete within this time frame, it will be terminated.


                          This field cannot be updated.
                        format: int32
                        type: integer
                    type: object
                  shardProvision:
                    description: |-
                      Specifies the hook to be executed after a shard's creation.


                      Note: This field is immutable once it has been set.
                    properties:
                      exec:
                        description: |-
                          Defines the command to run.


                          This field cannot be updated.
                        properties:
                          args:
                            description: Args represents the arguments that are passed
                              to the `command` for execution.
                            items:
                              type: string
                            type: array
                          command:
                            description: |-
                              Specifies the command to be executed inside the container.
                              The working directory for this command is the container's root directory('/').
                              Commands are executed directly without a shell environment, meaning shell-specific syntax ('|', etc.) is not supported.
                              If the shell is required, it must be explicitly invoked in the command.


                              A successful execution is indicated by an exit status of 0; any non-zero status signifies a failure.
                            items:
                              type: string
                            type: array
                          container:
                            description: |-
                              Specifies the name of the container within the same pod whose resources will be shared with the action.
                              This allows the action to utilize the specified container's resources without executing within it.


                              The name must match one of the containers defined in `componentDefinition.spec.runtime`.


                              The resources that can be shared are included:


                              - volume mounts


                              This field cannot be updated.
                            type: string
                          env:
                            description: |-
                              Represents a list of environment variables that will be injected into the container.
                              These variables enable the container to adapt its behavior based on the environment it's running in.


                              This field cannot be updated.
                            items:
                              description: EnvVar represents an environment variable
                                present in a Container.
                              properties:
                                name:
                                  description: Name of the environment variable. Must
                                    be a C_IDENTIFIER.
                                  type: string
                                value:
                                  description: |-
                                    Variable references $(VAR_NAME) are expanded
                                    using the previously defined environment variables in the container and
                                    any service environment variables. If a variable cannot be resolved,
                                    the reference in the input string will be unchanged. Double $$ are reduced
                                    to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                                    "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                                    Escaped references will never be expanded, regardless of whether the variable
                                    exists or not.
                                    Defaults to "".
                                  type: string
                                valueFrom:
                                  description: Source for the environment variable's
                                    value. Cannot be used if value is not empty.
                                  properties:
                                    configMapKeyRef:
                                      description: Selects a key of a ConfigMap.
                                      properties:
                                        key:
                                          description: The key to select.
                                          type: string
                                        name:
                                          description: |-
                                            Name of the referent.
                                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion, kind, uid?
                                          type: string
                                        optional:
                                          description: Specify whether the ConfigMap
                                            or its key must be defined
                                          type: boolean
                                      required:
                                      - key
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    fieldRef:
                                      description: |-
                                        Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
                                        spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                                      properties:
                                        apiVersion:
                                          description: Version of the schema the FieldPath
                                            is written in terms of, defaults to "v1".
                                          type: string
                                        fieldPath:
                                          description: Path of the field to select
                                            in the specified API version.
                                          type: string
                                      required:
                                      - fieldPath
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    resourceFieldRef:
                                      description: |-
                                        Selects a resource of the container: only resources limits and requests
                                        (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                                      properties:
                                        containerName:
                                          description: 'Container name: required for
                                            volumes, optional for env vars'
                                          type: string
                                        divisor:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: Specifies the output format
                                            of the exposed resources, defaults to
                                            "1"
                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          x-kubernetes-int-or-string: true
                                        resource:
                                          description: 'Required: resource to select'
                                          type: string
                                      required:
                                      - resource
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    secretKeyRef:
                                      description: Selects a key of a secret in the
                                        pod's namespace
                                      properties:
                                        key:
                                          description: The key of the secret to select
                                            from.  Must be a valid secret key.
                                          type: string
                                        name:
                                          description: |-
                                            Name of the referent.
                                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion, kind, uid?
                                          type: string
                                        optional:
                                          description: Specify whether the Secret
                                            or its key must be defined
                                          type: boolean
                                      required:
                                      - key
                                      type: object
                                      x-kubernetes-map-type: atomic
                                  type: object
                              required:
                              - name
                              type: object
                            type: array
                          image:
                            description: |-
                              Specifies the container image to be used for running the Action.


                              When specified, a dedicated container will be created using this image to execute the Action.
                              All actions with same image will share the same container.


                              This field cannot be updated.
                            type: string
                          matchingKey:
                            description: |-
                              Used in conjunction with the `targetPodSelector` field to refine the selection of target pod(s) for Action execution.
                              The impact of this field depends on the `targetPodSelector` value:


                              - When `targetPodSelector` is set to `Any` or `All`, this field will be ignored.
                              - When `targetPodSelector` is set to `Role`, only those replicas whose role matches the `matchingKey`
                                will be selected for the Action.


                              This field cannot be updated.
                            type: string
                          targetPodSelector:
                            description: |-
                              Defines the criteria used to select the target Pod(s) for executing the Action.
                              This is useful when there is no default target replica identified.
                              It allows for precise control over which Pod(s) the Action should run in.


                              If not specified, the Action will be executed in the pod where the Action is triggered, such as the pod
                              to be removed or added; or a random pod if the Action is triggered at the component level, such as
                              post-provision or pre-terminate of the component.


                              This field cannot be updated.
                            enum:
                            - Any
                            - All
                            - Role
                            - Ordinal
                            type: string
                        type: object
                      preCondition:
                        description: |-
                          Specifies the state that the cluster must reach before the Action is executed.
                          Currently, this is only applicable to the `postProvision` action.


                          The conditions are as follows:


                          - `Immediately`: Executed right after the Component object is created.
                            The readiness of the Component and its resources is not guaranteed at this stage.
                          - `RuntimeReady`: The Action is triggered after the Component object has been created and all associated
                            runtime resources (e.g. Pods) are in a ready state.
                          - `ComponentReady`: The Action is triggered after the Component itself is in a ready state.
                            This process does not affect the readiness state of the Component or the Cluster.
                          - `ClusterReady`: The Action is executed after the Cluster is in a ready state.
                            This execution does not alter the Component or the Cluster's state of readiness.


                          This field cannot be updated.
                        type: string
                      retryPolicy:
                        description: |-
                          Defines the strategy to be taken when retrying the Action after a failure.


                          It specifies the conditions under which the Action should be retried and the limits to apply,
                          such as the maximum number of retries and backoff strategy.


                          This field cannot be updated.
                        properties:
                          maxRetries:
                            default: 0
                            description: |-
                              Defines the maximum number of retry attempts that should be made for a given Action.
                              This value is set to 0 by default, indicating that no retries will be made.
                            type: integer
                          retryInterval:
                            default: 0
                            description: |-
                              Indicates the duration of time to wait between each retry attempt.
                              This value is set to 0 by default, indicating that there will be no delay between retry attempts.
                            format: int64
                            type: integer
                        type: object
                      timeoutSeconds:
                        default: 0
                        description: |-
                          Specifies the maximum duration in seconds that the Action is allowed to run.


                          If the Action does not complete within this time frame, it will be terminated.


                          This field cannot be updated.
                        format: int32
                        type: integer
                    type: object
                  shardTerminate:
                    description: |-
                      Specifies the hook to be executed prior to terminating a shard.


                      Note: This field is immutable once it has been set.
                    properties:
                      exec:
                        description: |-
                          Defines the command to run.


                          This field cannot be updated.
                        properties:
                          args:
                            description: Args represents the arguments that are passed
                              to the `command` for execution.
                            items:
                              type: string
                            type: array
                          command:
                            description: |-
                              Specifies the command to be executed inside the container.
                              The working directory for this command is the container's root directory('/').
                              Commands are executed directly without a shell environment, meaning shell-specific syntax ('|', etc.) is not supported.
                              If the shell is required, it must be explicitly invoked in the command.


                              A successful execution is indicated by an exit status of 0; any non-zero status signifies a failure.
                            items:
                              type: string
                            type: array
                          container:
                            description: |-
                              Specifies the name of the container within the same pod whose resources will be shared with the action.
                              This allows the action to utilize the specified container's resources without executing within it.


                              The name must match one of the containers defined in `componentDefinition.spec.runtime`.


                              The resources that can be shared are included:


                              - volume mounts


                              This field cannot be updated.
                            type: string
                          env:
                            description: |-
                              Represents a list of environment variables that will be injected into the container.
                              These variables enable the container to adapt its behavior based on the environment it's running in.


                              This field cannot be updated.
                            items:
                              description: EnvVar represents an environment variable
                                present in a Container.
                              properties:
                                name:
                                  description: Name of the environment variable. Must
                                    be a C_IDENTIFIER.
                                  type: string
                                value:
                                  description: |-
                                    Variable references $(VAR_NAME) are expanded
                                    using the previously defined environment variables in the container and
                                    any service environment variables. If a variable cannot be resolved,
                                    the reference in the input string will be unchanged. Double $$ are reduced
                                    to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                                    "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                                    Escaped references will never be expanded, regardless of whether the variable
                                    exists or not.
                                    Defaults to "".
                                  type: string
                                valueFrom:
                                  description: Source for the environment variable's
                                    value. Cannot be used if value is not empty.
                                  properties:
                                    configMapKeyRef:
                                      description: Selects a key of a ConfigMap.
                                      properties:
                                        key:
                                          description: The key to select.
                                          type: string
                                        name:
                                          description: |-
                                            Name of the referent.
                                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion, kind, uid?
                                          type: string
                                        optional:
                                          description: Specify whether the ConfigMap
                                            or its key must be defined
                                          type: boolean
                                      required:
                                      - key
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    fieldRef:
                                      description: |-
                                        Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
                                        spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                                      properties:
                                        apiVersion:
                                          description: Version of the schema the FieldPath
                                            is written in terms of, defaults to "v1".
                                          type: string
                                        fieldPath:
                                          description: Path of the field to select
                                            in the specified API version.
                                          type: string
                                      required:
                                      - fieldPath
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    resourceFieldRef:
                                      description: |-
                                        Selects a resource of the container: only resources limits and requests
                                        (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                                      properties:
                                        containerName:
                                          description: 'Container name: required for
                                            volumes, optional for env vars'
                                          type: string
                                        divisor:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: Specifies the output format
                                            of the exposed resources, defaults to
                                            "1"
                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          x-kubernetes-int-or-string: true
                                        resource:
                                          description: 'Required: resource to select'
                                          type: string
                                      required:
                                      - resource
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    secretKeyRef:
                                      description: Selects a key of a secret in the
                                        pod's namespace
                                      properties:
                                        key:
                                          description: The key of the secret to select
                                            from.  Must be a valid secret key.
                                          type: string
                                        name:
                                          description: |-
                                            Name of the referent.
                                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion, kind, uid?
                                          type: string
                                        optional:
                                          description: Specify whether the Secret
                                            or its key must be defined
                                          type: boolean
                                      required:
                                      - key
                                      type: object
                                      x-kubernetes-map-type: atomic
                                  type: object
                              required:
                              - name
                              type: object
                            type: array
                          image:
                            description: |-
                              Specifies the container image to be used for running the Action.


                              When specified, a dedicated container will be created using this image to execute the Action.
                              All actions with same image will share the same container.


                              This field cannot be updated.
                            type: string
                          matchingKey:
                            description: |-
                              Used in conjunction with the `targetPodSelector` field to refine the selection of target pod(s) for Action execution.
                              The impact of this field depends on the `targetPodSelector` value:


                              - When `targetPodSelector` is set to `Any` or `All`, this field will be ignored.
                              - When `targetPodSelector` is set to `Role`, only those replicas whose role matches the `matchingKey`
                                will be selected for the Action.


                              This field cannot be updated.
                            type: string
                          targetPodSelector:
                            description: |-
                              Defines the criteria used to select the target Pod(s) for executing the Action.
                              This is useful when there is no default target replica identified.
                              It allows for precise control over which Pod(s) the Action should run in.


                              If not specified, the Action will be executed in the pod where the Action is triggered, such as the pod
                              to be removed or added; or a random pod if the Action is triggered at the component level, such as
                              post-provision or pre-terminate of the component.


                              This field cannot be updated.
                            enum:
                            - Any
                            - All
                            - Role
                            - Ordinal
                            type: string
                        type: object
                      preCondition:
                        description: |-
                          Specifies the state that the cluster must reach before the Action is executed.
                          Currently, this is only applicable to the `postProvision` action.


                          The conditions are as follows:


                          - `Immediately`: Executed right after the Component object is created.
                            The readiness of the Component and its resources is not guaranteed at this stage.
                          - `RuntimeReady`: The Action is triggered after the Component object has been created and all associated
                            runtime resources (e.g. Pods) are in a ready state.
                          - `ComponentReady`: The Action is triggered after the Component itself is in a ready state.
                            This process does not affect the readiness state of the Component or the Cluster.
                          - `ClusterReady`: The Action is executed after the Cluster is in a ready state.
                            This execution does not alter the Component or the Cluster's state of readiness.


                          This field cannot be updated.
                        type: string
                      retryPolicy:
                        description: |-
                          Defines the strategy to be taken when retrying the Action after a failure.


                          It specifies the conditions under which the Action should be retried and the limits to apply,
                          such as the maximum number of retries and backoff strategy.


                          This field cannot be updated.
                        properties:
                          maxRetries:
                            default: 0
                            description: |-
                              Defines the maximum number of retry attempts that should be made for a given Action.
                              This value is set to 0 by default, indicating that no retries will be made.
                            type: integer
                          retryInterval:
                            default: 0
                            description: |-
                              Indicates the duration of time to wait between each retry attempt.
                              This value is set to 0 by default, indicating that there will be no delay between retry attempts.
                            format: int64
                            type: integer
                        type: object
                      timeoutSeconds:
                        default: 0
                        description: |-
                          Specifies the maximum duration in seconds that the Action is allowed to run.


                          If the Action does not complete within this time frame, it will be terminated.


                          This field cannot be updated.
                        format: int32
                        type: integer
                    type: object
                type: object
              provisionStrategy:
                default: Serial
                description: |-
                  Specifies the strategy for provisioning shards of the sharding. Only `Serial` and `Parallel` are supported.


                  This field is immutable.
                enum:
                - Serial
                - BestEffortParallel
                - Parallel
                type: string
              shardsLimit:
                description: |-
                  Defines the upper limit of the number of shards supported by the sharding.


                  This field is immutable.
                properties:
                  maxShards:
                    description: The maximum limit of replicas.
                    format: int32
                    type: integer
                  minShards:
                    description: The minimum limit of shards.
                    format: int32
                    type: integer
                required:
                - maxShards
                - minShards
                type: object
                x-kubernetes-validations:
                - message: the minimum and maximum limit of shards should be in the
                    range of [0, 2048]
                  rule: self.minShards >= 0 && self.maxShards <= 2048
                - message: the minimum shards limit should be no greater than the
                    maximum
                  rule: self.minShards <= self.maxShards
              systemAccounts:
                description: |-
                  Defines the system accounts for the sharding.


                  This field is immutable.
                items:
                  properties:
                    name:
                      description: |-
                        The name of the system account defined in the sharding template.


                        This field is immutable once set.
                      type: string
                    shared:
                      description: Specifies whether the account is shared across
                        all shards in the sharding.
                      type: boolean
                  required:
                  - name
                  type: object
                type: array
              template:
                description: This field is immutable.
                properties:
                  compDef:
                    description: |-
                      The component definition(s) that the sharding is based on.


                      The component definition can be specified using one of the following:


                      - the full name
                      - the regular expression pattern ('^' will be added to the beginning of the pattern automatically)


                      This field is immutable.
                    type: string
                required:
                - compDef
                type: object
              updateStrategy:
                default: Serial
                description: |-
                  Specifies the strategy for updating shards of the sharding. Only `Serial` and `Parallel` are supported.


                  This field is immutable.
                enum:
                - Serial
                - BestEffortParallel
                - Parallel
                type: string
            required:
            - template
            type: object
          status:
            description: ShardingDefinitionStatus defines the observed state of ShardingDefinition
            properties:
              message:
                description: Provides additional information about the current phase.
                type: string
              observedGeneration:
                description: Refers to the most recent generation that has been observed
                  for the ShardingDefinition.
                format: int64
                type: integer
              phase:
                description: |-
                  Represents the current status of the ShardingDefinition. Valid values include ``, `Available`, and `Unavailable`.
                  When the status is `Available`, the ShardingDefinition is ready and can be utilized by related objects.
                enum:
                - Available
                - Unavailable
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
