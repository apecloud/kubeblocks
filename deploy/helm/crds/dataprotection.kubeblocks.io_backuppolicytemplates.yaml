---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.0
  creationTimestamp: null
  name: backuppolicytemplates.dataprotection.kubeblocks.io
spec:
  group: dataprotection.kubeblocks.io
  names:
    categories:
    - kubeblocks
    kind: BackupPolicyTemplate
    listKind: BackupPolicyTemplateList
    plural: backuppolicytemplates
    singular: backuppolicytemplate
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: BackupPolicyTemplate is the Schema for the BackupPolicyTemplates
          API (defined by provider)
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: BackupPolicyTemplateSpec defines the desired state of BackupPolicyTemplate
            properties:
              backupStatusUpdates:
                description: define how to update metadata for backup status.
                items:
                  properties:
                    containerName:
                      description: which container name that kubectl can execute.
                      type: string
                    path:
                      description: 'specify the json path of backup object for patch.
                        example: manifests.backupLog -- means patch the backup jon
                        path of status.manifests.backupLog.'
                      type: string
                    script:
                      description: the shell Script commands to collect backup status
                        metadata. The script must exist in the container of ContainerName
                        and the output format must be set to JSON. Note that outputting
                        to stderr may cause the result format to not be in JSON.
                      type: string
                    updateStage:
                      description: 'when to update the backup status, pre: before
                        backup, post: after backup'
                      enum:
                      - pre
                      - post
                      type: string
                  type: object
                type: array
              backupToolName:
                description: which backup tool to perform database backup, only support
                  one tool.
                pattern: ^[a-z0-9]([a-z0-9\.\-]*[a-z0-9])?$
                type: string
              credentialKeyword:
                description: CredentialKeyword determines backupTool connection credential
                  keyword in secret. the backupTool gets the credentials according
                  to the user and password keyword defined by secret
                properties:
                  passwordKeyword:
                    default: password
                    description: PasswordKeyword the map keyword of the password in
                      the connection credential secret
                    type: string
                  userKeyword:
                    default: username
                    description: UserKeyword the map keyword of the user in the connection
                      credential secret
                    type: string
                type: object
              hooks:
                description: execute hook commands for backup.
                properties:
                  containerName:
                    description: which container can exec command
                    type: string
                  image:
                    description: exec command with image
                    type: string
                  postCommands:
                    description: post backup to perform commands
                    items:
                      type: string
                    type: array
                  preCommands:
                    description: pre backup to perform commands
                    items:
                      type: string
                    type: array
                type: object
              onFailAttempted:
                description: limit count of backup stop retries on fail. if unset,
                  retry unlimit attempted.
                format: int32
                type: integer
              pointInTimeRecovery:
                description: PointInTimeRecovery determines scripts and configurations
                  of the recovery point in time.
                properties:
                  config:
                    additionalProperties:
                      type: string
                    type: object
                  scripts:
                    properties:
                      args:
                        description: 'Arguments to the entrypoint. The container image''s
                          CMD is used if this is not provided. Variable references
                          $(VAR_NAME) are expanded using the container''s environment.
                          If a variable cannot be resolved, the reference in the input
                          string will be unchanged. Double $$ are reduced to a single
                          $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                          "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                          Escaped references will never be expanded, regardless of
                          whether the variable exists or not. Cannot be updated. More
                          info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                        items:
                          type: string
                        type: array
                      command:
                        description: 'Entrypoint array. Not executed within a shell.
                          The container image''s ENTRYPOINT is used if this is not
                          provided. Variable references $(VAR_NAME) are expanded using
                          the container''s environment. If a variable cannot be resolved,
                          the reference in the input string will be unchanged. Double
                          $$ are reduced to a single $, which allows for escaping
                          the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce
                          the string literal "$(VAR_NAME)". Escaped references will
                          never be expanded, regardless of whether the variable exists
                          or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                        items:
                          type: string
                        type: array
                      image:
                        description: 'Container image name. More info: https://kubernetes.io/docs/concepts/containers/images
                          This field is optional to allow higher level config management
                          to default or override container images in workload controllers
                          like Deployments and StatefulSets.'
                        type: string
                      name:
                        default: script
                        description: Name of the container specified.
                        type: string
                    type: object
                  timeFormat:
                    description: time format
                    type: string
                type: object
              schedule:
                description: The schedule in Cron format, see https://en.wikipedia.org/wiki/Cron.
                type: string
              ttl:
                description: TTL is a time.Duration-parseable string describing how
                  long the Backup should be retained for.
                type: string
            required:
            - backupToolName
            type: object
          status:
            description: BackupPolicyTemplateStatus defines the observed state of
              BackupPolicyTemplate
            properties:
              failureReason:
                type: string
              phase:
                description: BackupPolicyTemplatePhase defines phases for BackupPolicyTemplate
                  CR.
                enum:
                - New
                - Available
                - InProgress
                - Failed
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
