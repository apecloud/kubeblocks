---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.0
  creationTimestamp: null
  name: addons.extensions.kubeblocks.io
spec:
  group: extensions.kubeblocks.io
  names:
    categories:
    - kubeblocks
    kind: Addon
    listKind: AddonList
    plural: addons
    singular: addon
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - description: addon types
      jsonPath: .spec.type
      name: TYPE
      type: string
    - description: status phase
      jsonPath: .status.phase
      name: STATUS
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Addon is the Schema for the addons API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AddonSpec defines the desired state of Addon
            properties:
              cliPlugins:
                description: Plugin installation spec.
                items:
                  properties:
                    description:
                      description: The description of the plugin.
                      type: string
                    indexRepository:
                      description: The index repository of the plugin.
                      type: string
                    name:
                      description: Name of the plugin.
                      type: string
                  required:
                  - indexRepository
                  - name
                  type: object
                type: array
              defaultInstallValues:
                description: Default installation parameters.
                items:
                  properties:
                    enabled:
                      description: enabled can be set if there are no specific installation
                        attributes to be set.
                      type: boolean
                    extras:
                      description: Install spec. for extra items.
                      items:
                        properties:
                          name:
                            description: Name of the item.
                            type: string
                          persistentVolumeEnabled:
                            description: Persistent Volume Enabled value.
                            type: boolean
                          replicas:
                            description: Replicas value.
                            format: int32
                            type: integer
                          resources:
                            description: Resource requirements.
                            properties:
                              limits:
                                additionalProperties:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: 'Limits describes the maximum amount
                                  of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                type: object
                              requests:
                                additionalProperties:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: 'Requests describes the minimum amount
                                  of compute resources required. If Requests is omitted
                                  for a container, it defaults to Limits if that is
                                  explicitly specified, otherwise to an implementation-defined
                                  value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                type: object
                            type: object
                          storageClass:
                            description: Storage class name.
                            type: string
                          tolerations:
                            description: Tolerations JSON array string value.
                            type: string
                        required:
                        - name
                        type: object
                      type: array
                      x-kubernetes-list-map-keys:
                      - name
                      x-kubernetes-list-type: map
                    persistentVolumeEnabled:
                      description: Persistent Volume Enabled value.
                      type: boolean
                    replicas:
                      description: Replicas value.
                      format: int32
                      type: integer
                    resources:
                      description: Resource requirements.
                      properties:
                        limits:
                          additionalProperties:
                            anyOf:
                            - type: integer
                            - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: 'Limits describes the maximum amount of compute
                            resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                            - type: integer
                            - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: 'Requests describes the minimum amount of compute
                            resources required. If Requests is omitted for a container,
                            it defaults to Limits if that is explicitly specified,
                            otherwise to an implementation-defined value. More info:
                            https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                          type: object
                      type: object
                    selectors:
                      description: Addon default install parameters selectors. If
                        multiple selectors are provided that all selectors must evaluate
                        to true.
                      items:
                        properties:
                          key:
                            description: The selector key, valid values are KubeVersion,
                              KubeGitVersion. "KubeVersion" the semver expression
                              of Kubernetes versions, i.e., v1.24. "KubeGitVersion"
                              may contain distro. info., i.e., v1.24.4+eks.
                            enum:
                            - KubeGitVersion
                            - KubeVersion
                            type: string
                          operator:
                            description: "Represents a key's relationship to a set
                              of values. Valid operators are Contains, NotIn, DoesNotContain,
                              MatchRegex, and DoesNoteMatchRegex. \n Possible enum
                              values: `\"Contains\"` line contains string `\"DoesNotContain\"`
                              line does not contain string `\"MatchRegex\"` line contains
                              a match to the regular expression `\"DoesNotMatchRegex\"`
                              line does not contain a match to the regular expression"
                            enum:
                            - Contains
                            - DoesNotContain
                            - MatchRegex
                            - DoesNotMatchRegex
                            type: string
                          values:
                            description: An array of string values. Server as "OR"
                              expression to the operator.
                            items:
                              type: string
                            type: array
                        required:
                        - key
                        - operator
                        type: object
                      type: array
                    storageClass:
                      description: Storage class name.
                      type: string
                    tolerations:
                      description: Tolerations JSON array string value.
                      type: string
                  type: object
                minItems: 1
                type: array
              description:
                description: Addon description.
                type: string
              helm:
                description: Helm installation spec., it's only being processed if
                  type=helm.
                properties:
                  chartLocationURL:
                    description: A Helm Chart location URL.
                    type: string
                  installOptions:
                    additionalProperties:
                      type: string
                    description: installOptions defines Helm release install options.
                    type: object
                  installValues:
                    description: HelmInstallValues defines Helm release install set
                      values.
                    properties:
                      configMapRefs:
                        description: Selects a key of a ConfigMap item list, the value
                          of ConfigMap can be a JSON or YAML string content, use key
                          name with ".json" or ".yaml" or ".yml" extension name to
                          specify content type.
                        items:
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Object name of the referent.
                              type: string
                          required:
                          - key
                          - name
                          type: object
                        type: array
                      secretRefs:
                        description: Selects a key of a Secrets item list, the value
                          of Secrets can be a JSON or YAML string content, use key
                          name with ".json" or ".yaml" or ".yml" extension name to
                          specify content type.
                        items:
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Object name of the referent.
                              type: string
                          required:
                          - key
                          - name
                          type: object
                        type: array
                      setJSONValues:
                        description: Helm install set JSON values, can specify multiple
                          or separate values with commas(key1=jsonval1,key2=jsonval2).
                        items:
                          type: string
                        type: array
                      setValues:
                        description: Helm install set values, can specify multiple
                          or separate values with commas(key1=val1,key2=val2).
                        items:
                          type: string
                        type: array
                      urls:
                        items:
                          type: string
                        type: array
                    type: object
                  valuesMapping:
                    description: valuesMapping defines addon normalized resources
                      parameters mapped to Helm values' keys.
                    properties:
                      extras:
                        description: Helm value mapping items for extra items.
                        items:
                          properties:
                            jsonMap:
                              description: 'jsonMap define the "key" mapping values,
                                valid keys are tolerations. Enum values explained:
                                `"tolerations"` sets toleration mapping key'
                              properties:
                                tolerations:
                                  description: tolerations sets toleration mapping
                                    key.
                                  type: string
                              type: object
                            name:
                              description: Name of the item.
                              type: string
                            resources:
                              description: resources sets resources related mapping
                                keys.
                              properties:
                                cpu:
                                  description: cpu sets CPU requests and limits mapping
                                    keys.
                                  properties:
                                    limits:
                                      description: Limits value mapping key.
                                      type: string
                                    requests:
                                      description: Requests value mapping key.
                                      type: string
                                  type: object
                                memory:
                                  description: memory sets Memory requests and limits
                                    mapping keys.
                                  properties:
                                    limits:
                                      description: Limits value mapping key.
                                      type: string
                                    requests:
                                      description: Requests value mapping key.
                                      type: string
                                  type: object
                                storage:
                                  description: storage sets storage size value mapping
                                    key.
                                  type: string
                              type: object
                            valueMap:
                              description: 'valueMap define the "key" mapping values,
                                valid keys are replicaCount, persistentVolumeEnabled,
                                and storageClass. Enum values explained: `"replicaCount"`
                                sets replicaCount value mapping key `"persistentVolumeEnabled"`
                                sets persistent volume enabled mapping key `"storageClass"`
                                sets storageClass mapping key'
                              properties:
                                persistentVolumeEnabled:
                                  description: persistentVolumeEnabled persistent
                                    volume enabled mapping key.
                                  type: string
                                replicaCount:
                                  description: replicaCount sets replicaCount value
                                    mapping key.
                                  type: string
                                storageClass:
                                  description: storageClass sets storageClass mapping
                                    key.
                                  type: string
                              type: object
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      jsonMap:
                        description: 'jsonMap define the "key" mapping values, valid
                          keys are tolerations. Enum values explained: `"tolerations"`
                          sets toleration mapping key'
                        properties:
                          tolerations:
                            description: tolerations sets toleration mapping key.
                            type: string
                        type: object
                      resources:
                        description: resources sets resources related mapping keys.
                        properties:
                          cpu:
                            description: cpu sets CPU requests and limits mapping
                              keys.
                            properties:
                              limits:
                                description: Limits value mapping key.
                                type: string
                              requests:
                                description: Requests value mapping key.
                                type: string
                            type: object
                          memory:
                            description: memory sets Memory requests and limits mapping
                              keys.
                            properties:
                              limits:
                                description: Limits value mapping key.
                                type: string
                              requests:
                                description: Requests value mapping key.
                                type: string
                            type: object
                          storage:
                            description: storage sets storage size value mapping key.
                            type: string
                        type: object
                      valueMap:
                        description: 'valueMap define the "key" mapping values, valid
                          keys are replicaCount, persistentVolumeEnabled, and storageClass.
                          Enum values explained: `"replicaCount"` sets replicaCount
                          value mapping key `"persistentVolumeEnabled"` sets persistent
                          volume enabled mapping key `"storageClass"` sets storageClass
                          mapping key'
                        properties:
                          persistentVolumeEnabled:
                            description: persistentVolumeEnabled persistent volume
                              enabled mapping key.
                            type: string
                          replicaCount:
                            description: replicaCount sets replicaCount value mapping
                              key.
                            type: string
                          storageClass:
                            description: storageClass sets storageClass mapping key.
                            type: string
                        type: object
                    type: object
                required:
                - chartLocationURL
                type: object
              install:
                description: Installation parameters.
                properties:
                  enabled:
                    description: enabled can be set if there are no specific installation
                      attributes to be set.
                    type: boolean
                  extras:
                    description: Install spec. for extra items.
                    items:
                      properties:
                        name:
                          description: Name of the item.
                          type: string
                        persistentVolumeEnabled:
                          description: Persistent Volume Enabled value.
                          type: boolean
                        replicas:
                          description: Replicas value.
                          format: int32
                          type: integer
                        resources:
                          description: Resource requirements.
                          properties:
                            limits:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: 'Limits describes the maximum amount of
                                compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                              type: object
                            requests:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: 'Requests describes the minimum amount
                                of compute resources required. If Requests is omitted
                                for a container, it defaults to Limits if that is
                                explicitly specified, otherwise to an implementation-defined
                                value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                              type: object
                          type: object
                        storageClass:
                          description: Storage class name.
                          type: string
                        tolerations:
                          description: Tolerations JSON array string value.
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                    x-kubernetes-list-map-keys:
                    - name
                    x-kubernetes-list-type: map
                  persistentVolumeEnabled:
                    description: Persistent Volume Enabled value.
                    type: boolean
                  replicas:
                    description: Replicas value.
                    format: int32
                    type: integer
                  resources:
                    description: Resource requirements.
                    properties:
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                    type: object
                  storageClass:
                    description: Storage class name.
                    type: string
                  tolerations:
                    description: Tolerations JSON array string value.
                    type: string
                type: object
              installable:
                description: Addon installable spec., provide selector and auto-install
                  settings.
                properties:
                  autoInstall:
                    default: false
                    description: autoInstall defines an addon should auto installed
                    type: boolean
                  selectors:
                    description: Addon installable selectors. If multiple selectors
                      are provided that all selectors must evaluate to true.
                    items:
                      properties:
                        key:
                          description: The selector key, valid values are KubeVersion,
                            KubeGitVersion. "KubeVersion" the semver expression of
                            Kubernetes versions, i.e., v1.24. "KubeGitVersion" may
                            contain distro. info., i.e., v1.24.4+eks.
                          enum:
                          - KubeGitVersion
                          - KubeVersion
                          type: string
                        operator:
                          description: "Represents a key's relationship to a set of
                            values. Valid operators are Contains, NotIn, DoesNotContain,
                            MatchRegex, and DoesNoteMatchRegex. \n Possible enum values:
                            `\"Contains\"` line contains string `\"DoesNotContain\"`
                            line does not contain string `\"MatchRegex\"` line contains
                            a match to the regular expression `\"DoesNotMatchRegex\"`
                            line does not contain a match to the regular expression"
                          enum:
                          - Contains
                          - DoesNotContain
                          - MatchRegex
                          - DoesNotMatchRegex
                          type: string
                        values:
                          description: An array of string values. Server as "OR" expression
                            to the operator.
                          items:
                            type: string
                          type: array
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                required:
                - autoInstall
                type: object
              type:
                description: Addon type, valid value is helm.
                enum:
                - Helm
                type: string
            required:
            - defaultInstallValues
            - type
            type: object
            x-kubernetes-validations:
            - message: spec.helm is required when spec.type is Helm, and forbidden
                otherwise
              rule: 'has(self.type) && self.type == ''Helm'' ?  has(self.helm) : !has(self.helm)'
          status:
            description: AddonStatus defines the observed state of Addon
            properties:
              conditions:
                description: Describe current state of Addon API installation conditions.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: observedGeneration is the most recent generation observed
                  for this Addon. It corresponds to the Addon's generation, which
                  is updated on mutation by the API Server.
                format: int64
                type: integer
              phase:
                description: Addon installation phases. Valid values are Disabled,
                  Enabled, Failed, Enabling, Disabling.
                enum:
                - Disabled
                - Enabled
                - Failed
                - Enabling
                - Disabling
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
