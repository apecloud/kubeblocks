apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  labels:
    app.kubernetes.io/name: kubeblocks
  name: componentparameters.parameters.kubeblocks.io
spec:
  group: parameters.kubeblocks.io
  names:
    categories:
    - kubeblocks
    kind: ComponentParameter
    listKind: ComponentParameterList
    plural: componentparameters
    singular: componentparameter
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: cluster name
      jsonPath: .spec.clusterName
      name: CLUSTER
      type: string
    - description: component name
      jsonPath: .spec.componentName
      name: COMPONENT
      type: string
    - description: config status phase.
      jsonPath: .status.phase
      name: STATUS
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ComponentParameter is the Schema for the componentparameters
          API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ComponentParameterSpec defines the desired state of ComponentConfiguration
            properties:
              clusterName:
                description: Specifies the name of the Cluster that this configuration
                  is associated with.
                type: string
                x-kubernetes-validations:
                - message: forbidden to update spec.clusterRef
                  rule: self == oldSelf
              componentName:
                description: Represents the name of the Component that this configuration
                  pertains to.
                type: string
                x-kubernetes-validations:
                - message: forbidden to update spec.clusterRef
                  rule: self == oldSelf
              configItemDetails:
                description: |-
                  ConfigItemDetails is an array of ConfigTemplateItemDetail objects.


                  Each ConfigTemplateItemDetail corresponds to a configuration template,
                  which is a ConfigMap that contains multiple configuration files.
                  Each configuration file is stored as a key-value pair within the ConfigMap.


                  The ConfigTemplateItemDetail includes information such as:


                  - The configuration template (a ConfigMap)
                  - The corresponding ConfigConstraint (constraints and validation rules for the configuration)
                  - Volume mounts (for mounting the configuration files)
                items:
                  description: ConfigTemplateItemDetail corresponds to settings of
                    a configuration template (a ConfigMap).
                  properties:
                    configFileParams:
                      additionalProperties:
                        properties:
                          content:
                            description: |-
                              Holds the configuration keys and values. This field is a workaround for issues found in kubebuilder and code-generator.
                              Refer to https://github.com/kubernetes-sigs/kubebuilder/issues/528 and https://github.com/kubernetes/code-generator/issues/50 for more details.


                              Represents the content of the configuration file.
                            type: string
                          parameters:
                            additionalProperties:
                              type: string
                            description: Represents the updated parameters for a single
                              configuration file.
                            type: object
                        type: object
                      description: |-
                        Specifies the user-defined configuration parameters.


                        When provided, the parameter values in `configFileParams` override the default configuration parameters.
                        This allows users to override the default configuration according to their specific needs.
                      type: object
                    configSpec:
                      description: |-
                        Specifies the name of the configuration template (a ConfigMap), ConfigConstraint, and other miscellaneous options.


                        The configuration template is a ConfigMap that contains multiple configuration files.
                        Each configuration file is stored as a key-value pair within the ConfigMap.


                        ConfigConstraint allows defining constraints and validation rules for configuration parameters.
                        It ensures that the configuration adheres to certain requirements and limitations.
                      properties:
                        defaultMode:
                          description: |-
                            The operator attempts to set default file permissions for scripts (0555) and configurations (0444).
                            However, certain database engines may require different file permissions.
                            You can specify the desired file permissions here.


                            Must be specified as an octal value between 0000 and 0777 (inclusive),
                            or as a decimal value between 0 and 511 (inclusive).
                            YAML supports both octal and decimal values for file permissions.


                            Please note that this setting only affects the permissions of the files themselves.
                            Directories within the specified path are not impacted by this setting.
                            It's important to be aware that this setting might conflict with other options
                            that influence the file mode, such as fsGroup.
                            In such cases, the resulting file mode may have additional bits set.
                            Refers to documents of k8s.ConfigMapVolumeSource.defaultMode for more information.
                          format: int32
                          type: integer
                        name:
                          description: Specifies the name of the configuration template.
                          maxLength: 63
                          pattern: ^[a-z0-9]([a-z0-9\.\-]*[a-z0-9])?$
                          type: string
                        namespace:
                          default: default
                          description: |-
                            Specifies the namespace of the referenced configuration template ConfigMap object.
                            An empty namespace is equivalent to the "default" namespace.
                          maxLength: 63
                          pattern: ^[a-z0-9]([a-z0-9\-]*[a-z0-9])?$
                          type: string
                        templateRef:
                          description: Specifies the name of the referenced configuration
                            template ConfigMap object.
                          maxLength: 63
                          pattern: ^[a-z0-9]([a-z0-9\.\-]*[a-z0-9])?$
                          type: string
                        volumeName:
                          description: |-
                            Refers to the volume name of PodTemplate. The configuration file produced through the configuration
                            template will be mounted to the corresponding volume. Must be a DNS_LABEL name.
                            The volume name must be defined in podSpec.containers[*].volumeMounts.
                          maxLength: 63
                          pattern: ^[a-z]([a-z0-9\-]*[a-z0-9])?$
                          type: string
                      required:
                      - name
                      type: object
                    name:
                      description: |-
                        Defines the unique identifier of the configuration template.


                        It must be a string of maximum 63 characters, and can only include lowercase alphanumeric characters,
                        hyphens, and periods.
                        The name must start and end with an alphanumeric character.
                      maxLength: 63
                      pattern: ^[a-z0-9]([a-z0-9\.\-]*[a-z0-9])?$
                      type: string
                    payload:
                      description: |-
                        External controllers can trigger a configuration rerender by modifying this field.


                        Note: Currently, the `payload` field is opaque and its content is not interpreted by the system.
                        Modifying this field will cause a rerender, regardless of the specific content of this field.
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    userConfigTemplates:
                      description: |-
                        Specifies the user-defined configuration template.


                        When provided, the `importTemplateRef` overrides the default configuration template
                        specified in `configSpec.templateRef`.
                        This allows users to customize the configuration template according to their specific requirements.
                      properties:
                        namespace:
                          default: default
                          description: |-
                            Specifies the namespace of the referenced configuration template ConfigMap object.
                            An empty namespace is equivalent to the "default" namespace.
                          pattern: ^[a-z0-9]([a-z0-9\-]*[a-z0-9])?$
                          type: string
                        policy:
                          default: none
                          description: Defines the strategy for merging externally
                            imported templates into component templates.
                          enum:
                          - patch
                          - replace
                          - none
                          type: string
                        templateRef:
                          description: Specifies the name of the referenced configuration
                            template ConfigMap object.
                          pattern: ^[a-z0-9]([a-z0-9\.\-]*[a-z0-9])?$
                          type: string
                      required:
                      - templateRef
                      type: object
                  required:
                  - name
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - name
                x-kubernetes-list-type: map
            required:
            - componentName
            type: object
          status:
            description: ComponentParameterStatus defines the observed state of ComponentConfiguration
            properties:
              conditions:
                description: Provides detailed status information for opsRequest.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              configurationStatus:
                description: Provides the status of each component undergoing reconfiguration.
                items:
                  properties:
                    lastDoneRevision:
                      description: Represents the last completed revision of the configuration
                        item. This field is optional.
                      type: string
                    message:
                      description: Provides a description of any abnormal status.
                        This field is optional.
                      type: string
                    name:
                      description: |-
                        Specifies the name of the configuration template. It is a required field and must be a string of maximum 63 characters.
                        The name should only contain lowercase alphanumeric characters, hyphens, or periods. It should start and end with an alphanumeric character.
                      maxLength: 63
                      pattern: ^[a-z0-9]([a-z0-9\.\-]*[a-z0-9])?$
                      type: string
                    phase:
                      description: |-
                        Indicates the current status of the configuration item.


                        Possible values include "Creating", "Init", "Running", "Pending", "Merged", "MergeFailed", "FailedAndPause",
                        "Upgrading", "Deleting", "FailedAndRetry", "Finished".
                      enum:
                      - Creating
                      - Init
                      - Running
                      - Pending
                      - Merged
                      - MergeFailed
                      - FailedAndPause
                      - Upgrading
                      - Deleting
                      - FailedAndRetry
                      - Finished
                      type: string
                    reconcileDetail:
                      description: Provides detailed information about the execution
                        of the configuration change. This field is optional.
                      properties:
                        currentRevision:
                          description: Represents the current revision of the configuration
                            item.
                          type: string
                        errMessage:
                          description: Represents the error message generated when
                            the execution of configuration changes fails.
                          type: string
                        execResult:
                          description: Represents the outcome of the most recent execution.
                          type: string
                        expectedCount:
                          default: -1
                          description: Represents the total number of pods that require
                            execution of configuration changes.
                          format: int32
                          type: integer
                        policy:
                          description: Represents the policy applied during the most
                            recent execution.
                          type: string
                        succeedCount:
                          default: -1
                          description: Represents the number of pods where configuration
                            changes were successfully applied.
                          format: int32
                          type: integer
                      type: object
                    updateRevision:
                      description: Represents the updated revision of the configuration
                        item. This field is optional.
                      type: string
                  required:
                  - name
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - name
                x-kubernetes-list-type: map
              message:
                description: Provides a description of any abnormal status.
                type: string
              observedGeneration:
                description: |-
                  Represents the latest generation observed for this
                  ClusterDefinition. It corresponds to the ConfigConstraint's generation, which is
                  updated by the API Server.
                format: int64
                type: integer
              phase:
                description: |-
                  Indicates the current status of the configuration item.


                  Possible values include "Creating", "Init", "Running", "Pending", "Merged", "MergeFailed", "FailedAndPause",
                  "Upgrading", "Deleting", "FailedAndRetry", "Finished".
                enum:
                - Creating
                - Init
                - Running
                - Pending
                - Merged
                - MergeFailed
                - FailedAndPause
                - Upgrading
                - Deleting
                - FailedAndRetry
                - Finished
                type: string
            required:
            - configurationStatus
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
