apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.1
  labels:
    app.kubernetes.io/name: kubeblocks
  name: storageproviders.storage.kubeblocks.io
spec:
  group: storage.kubeblocks.io
  names:
    categories:
    - kubeblocks
    kind: StorageProvider
    listKind: StorageProviderList
    plural: storageproviders
    singular: storageprovider
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: STATUS
      type: string
    - jsonPath: .spec.csiDriverName
      name: CSIDRIVER
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: "StorageProvider comprises specifications that provide guidance
          on accessing remote storage. Currently the supported access methods are
          via a dedicated CSI driver or the `datasafed` tool. In case of CSI driver,
          the specification expounds on provisioning PVCs for that driver. As for
          the `datasafed` tool, the specification provides insights on generating
          the necessary configuration file. \n Deprecated since v0.9, moving to dataprotection.kubeblocks.io
          API group, will be removed in v0.11."
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: StorageProviderSpec defines the desired state of `StorageProvider`.
            properties:
              csiDriverName:
                description: Specifies the name of the CSI driver used to access remote
                  storage. This field can be empty, it indicates that the storage
                  is not accessible via CSI.
                type: string
              csiDriverSecretTemplate:
                description: A Go template that used to render and generate `k8s.io/api/core/v1.Secret`
                  resources for a specific CSI driver. For example, `accessKey` and
                  `secretKey` needed by CSI-S3 are stored in this `Secret` resource.
                type: string
              datasafedConfigTemplate:
                description: A Go template used to render and generate `k8s.io/api/core/v1.Secret`.
                  This `Secret` involves the configuration details required by the
                  `datasafed` tool to access remote storage. For example, the `Secret`
                  should contain `endpoint`, `bucket`, 'region', 'accessKey', 'secretKey',
                  or something else for S3 storage. This field can be empty, it means
                  this kind of storage is not accessible via the `datasafed` tool.
                type: string
              parametersSchema:
                description: Describes the parameters required for storage. The parameters
                  defined here can be referenced in the above templates, and `kbcli`
                  uses this definition for dynamic command-line parameter parsing.
                properties:
                  credentialFields:
                    description: Defines which parameters are credential fields, which
                      need to be handled specifically. For instance, these should
                      be stored in a `Secret` instead of a `ConfigMap`.
                    items:
                      type: string
                    type: array
                  openAPIV3Schema:
                    description: Defines the parameters in OpenAPI V3.
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                type: object
              persistentVolumeClaimTemplate:
                description: A Go template that renders and generates `k8s.io/api/core/v1.PersistentVolumeClaim`
                  resources. This PVC can reference the `StorageClass` created from
                  `storageClassTemplate`, allowing Pods to access remote storage by
                  mounting the PVC.
                type: string
              storageClassTemplate:
                description: A Go template utilized to render and generate `kubernetes.storage.k8s.io.v1.StorageClass`
                  resources. The `StorageClass' created by this template is aimed
                  at using the CSI driver.
                type: string
            type: object
          status:
            description: StorageProviderStatus defines the observed state of `StorageProvider`.
            properties:
              conditions:
                description: Describes the current state of the `StorageProvider`.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              phase:
                description: The phase of the `StorageProvider`. Valid phases are
                  `NotReady` and `Ready`.
                enum:
                - NotReady
                - Ready
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
