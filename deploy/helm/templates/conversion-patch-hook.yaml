{{- if .Values.webhooks.conversionEnabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Release.Name }}-crd-patch
  labels:
    {{- include "kubeblocks.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": post-install
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded"
spec:
  ttlSecondsAfterFinished: 0
  backoffLimit: 2
  template:
    metadata:
      name: {{ .Release.Name }}-crd-patch
      labels:
        {{- include "kubeblocks.labels" . | nindent 8 }}
    spec:
      {{- with .Values.image.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "kubeblocks.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      restartPolicy: Never
      containers:
        - name: post-install-job
          image: "{{ .Values.image.registry | default "docker.io" }}/{{ .Values.image.tools.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - sh
            - -c
            - |
              set -e
              # 1. check the already installed KubeBlocks
              deployments=$(kubectl get deployments -A -l app.kubernetes.io/name=kubeblocks --no-headers)
              OLD_IFS=$IFS
              IFS=$'\n'
              for line in $deployments; do
                namespace=$(echo "$line" | awk '{print $1}')
                name=$(echo "$line" | awk '{print $2}')
                old_kb_json=$(kubectl get deployment ${name} -n ${namespace} -o json)
                version=$(echo ${old_kb_json} | jq '.metadata.labels["app.kubernetes.io/version"]' | tr -d '"')
                replicas=$(echo ${old_kb_json} | jq '.spec.replicas')
                if echo "$version" | grep -q '^0\.9'; then
                    echo "TODO: add it when released 0.9.2"
                    # patch_num=$(echo $version | awk -F. '{print $3}' | awk -F- '{print $1}')
                    # if [  "$version" != "0.9.2" ] && [ $patch_num -le 2 ]; then
                    #    echo "ERROR: the installed KubeBlocks version must greater and equal to 0.9.2"
                    #    exit 1
                    # fi
                elif echo "$version" | grep -q '^0\.'; then
                    echo "ERROR: can not upgrade KubeBlocks from $version to {{ .Chart.AppVersion }}"
                    exit 1
                fi
                if [ $replicas -ne 0 ]; then
                    echo "ERROR: You must stop the existing ${namespace}/${name} version (${version}) before installing version 1.0."
                    exit 1
                fi
              done
              IFS=$OLD_IFS
              # 2. patch crds
              patch_crd_cmd="kubectl patch crd --patch-file=/opt/conversion_webhook_patch.json"
              ${patch_crd_cmd} "clusterdefinitions.apps.kubeblocks.io"
              ${patch_crd_cmd} "clusters.apps.kubeblocks.io"
              ${patch_crd_cmd} "componentdefinitions.apps.kubeblocks.io"
              ${patch_crd_cmd} "components.apps.kubeblocks.io"
              ${patch_crd_cmd} "componentversions.apps.kubeblocks.io"
              ${patch_crd_cmd} "instancesets.workloads.kubeblocks.io"
              ${patch_crd_cmd} "servicedescriptors.apps.kubeblocks.io"
              # TODO: add it with new cc api
              # ${patch_crd_cmd} "configconstraints.apps.kubeblocks.io"
              ${patch_crd_cmd} "configurations.apps.kubeblocks.io"
              
              # 3. start KubeBlocks
              kubectl patch deployment {{ include "kubeblocks.fullname" . }} -n {{ .Release.Namespace }} -p '{"spec":{"replicas":{{ .Values.replicaCount }}}}'
              kubectl patch deployment {{ include "kubeblocks.fullname" . }}-dataprotection -n {{ .Release.Namespace }} -p '{"spec":{"replicas":{{ .Values.replicaCount }}}}'
          volumeMounts:
            - mountPath: /opt
              name: crd-multi-version-conversion
      {{- with .Values.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: crd-multi-version-conversion
          configMap:
            name: {{ include "kubeblocks.fullname" . }}.{{ .Release.Namespace }}.crd.conversion.webhook
{{- end }}