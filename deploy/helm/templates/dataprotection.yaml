{{- $dataProtectionImageRegistry := include "kubeblocks.imageRegistry" . }}
{{- if .Values.dataProtection.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "kubeblocks.fullname" . }}-dataprotection
  labels:
    {{- include "kubeblocks.labels" . | nindent 4 }}
    app.kubernetes.io/component: "dataprotection"
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "kubeblocks.selectorLabels" . | nindent 6 }}
      {{- with .Values.dataProtection.extraLabels }}
        {{- toYaml . | nindent 6 }}
      {{- end }}
  {{- if .Values.updateStrategy }}
  strategy:
    {{ toYaml .Values.updateStrategy | nindent 4 | trim }}
  {{- end }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "kubeblocks.selectorLabels" . | nindent 8 }}
        {{- with .Values.dataProtection.extraLabels }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      priorityClassName: {{ template "kubeblocks.priorityClassName" . }}
      {{- with .Values.dataProtection.image.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "kubeblocks.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers: # only download tools image to local
        - name: tools
          image: "{{ .Values.image.registry | default "docker.io" }}/{{ .Values.image.tools.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          command:
            - /bin/true
      containers:
        - name: dataprotection
          args:
            - "--health-probe-bind-address=:8081"
            - "--metrics-bind-address=:8080"
            - "--leader-elect"
            - "--leader-elect-id=abd03fda"
            - "--zap-devel={{- default "false" .Values.loggerSettings.developmentMode }}"
            - "--zap-time-encoding={{- default "iso8601" .Values.loggerSettings.timeEncoding }}"
            {{- with .Values.loggerSettings.level }}
            - "--zap-log-level={{ . }}"
            {{- end }}
            {{- with .Values.loggerSettings.encoder }}
            - "--zap-encoder={{ . }}"
            {{- end }}
            {{- with .Values.managedNamespaces }}
            - "--managed-namespaces={{ . }}"
            {{- end }}
            {{- if .Values.multiCluster.kubeConfig }}
            - "--multi-cluster-kubeconfig={{ .Values.multiCluster.mountPath }}/kubeconfig"
            {{- end }}
            {{- if .Values.multiCluster.contexts }}
            - "--multi-cluster-contexts={{ .Values.multiCluster.contexts }}"
            {{- end }}
            {{- if .Values.multiCluster.contextsDisabled }}
            - "--multi-cluster-contexts-disabled={{ .Values.multiCluster.contextsDisabled }}"
            {{- end }}
            {{- if .Values.userAgent }}
            - "--user-agent={{ .Values.userAgent }}"
            {{- end }}
          env:
            - name: CM_NAMESPACE
              value: {{ .Release.Namespace }}
            {{- with .Values.dataProtection.affinity }}
            - name: CM_AFFINITY
              value: {{ toJson . | quote }}
            {{- end }}
            {{- with .Values.nodeSelector }}
            - name: CM_NODE_SELECTOR
              value: {{ toJson . | quote }}
            {{- end }}
            {{- with .Values.dataProtection.tolerations }}
            - name: CM_TOLERATIONS
              value: {{ toJson . | quote }}
            {{- end }}
            - name: KUBEBLOCKS_IMAGE_PULL_POLICY
              value: {{ .Values.dataProtection.image.pullPolicy }}
            - name: KUBEBLOCKS_TOOLS_IMAGE
              value: "{{ .Values.image.registry | default "docker.io" }}/{{ .Values.image.tools.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
            - name: KUBEBLOCKS_SERVICEACCOUNT_NAME
              value: {{ include "kubeblocks.serviceAccountName" . }}
            {{- if .Capabilities.APIVersions.Has "snapshot.storage.k8s.io/v1" }}
            - name: VOLUMESNAPSHOT_API_BETA
              value: "false"
            {{- else if .Capabilities.APIVersions.Has "snapshot.storage.k8s.io/v1beta1" }}
            - name: VOLUMESNAPSHOT_API_BETA
              value: "true"
            {{- end }}
            {{- if .Values.admissionWebhooks.enabled }}
            - name: ENABLE_WEBHOOKS
              value: "true"
            {{- end }}
            {{- if .Values.dataProtection.reconcileWorkers }}
            - name: DATAPROTECTION_RECONCILE_WORKERS
              value: {{ .Values.dataProtection.reconcileWorkers | quote }}
            {{- end }}
            {{- if .Values.client.qps }}
            - name: CLIENT_QPS
              value: {{ .Values.client.qps | quote }}
            {{- end }}
            {{- if .Values.client.burst }}
            - name: CLIENT_BURST
              value: {{ .Values.client.burst | quote }}
            {{- end }}
            - name: DP_ENCRYPTION_KEY
              valueFrom:
                secretKeyRef:
                  {{- include "dataprotection.encryptionKeySecretKeyRef" . | nindent 18 }}
            - name: DATASAFED_IMAGE
              value: "{{ .Values.dataProtection.image.registry | default $dataProtectionImageRegistry }}/{{ .Values.dataProtection.image.datasafed.repository }}:{{ .Values.dataProtection.image.datasafed.tag | default "latest" }}"
            - name: GC_FREQUENCY_SECONDS
              value: "{{ .Values.dataProtection.gcFrequencySeconds }}"
            - name: WORKER_SERVICE_ACCOUNT_NAME
              value: {{ include "dataprotection.workerSAName" . }}
            - name: EXEC_WORKER_SERVICE_ACCOUNT_NAME
              value: {{ include "dataprotection.execWorkerSAName" . }}
            - name: WORKER_SERVICE_ACCOUNT_ANNOTATIONS
              value: {{ .Values.dataProtection.worker.serviceAccount.annotations | toJson | quote }}
            - name: WORKER_CLUSTER_ROLE_NAME
              value: {{ include "dataprotection.workerClusterRoleName" . }}
          {{- with .Values.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: "{{ .Values.dataProtection.image.registry | default $dataProtectionImageRegistry }}/{{ .Values.dataProtection.image.repository }}:{{ .Values.dataProtection.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.dataProtection.image.pullPolicy }}
          ports:
            - name: webhook-server
              containerPort: 9443
              protocol: TCP
            - name: health
              containerPort: 8081
              protocol: TCP
            - name: metrics
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: health
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /readyz
              port: health
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /etc/kubeblocks
              name: manager-config
            {{- if .Values.admissionWebhooks.enabled }}
            - mountPath: /tmp/k8s-webhook-server/serving-certs
              name: cert
              readOnly: true
            {{- end }}
            {{- if .Values.multiCluster.kubeConfig }}
            - mountPath: {{ .Values.multiCluster.mountPath }}
              name: multi-cluster-kubeconfig
              readOnly: true
            {{- end }}
      {{- if .Values.hostNetwork }}
      hostNetwork: {{ .Values.hostNetwork }}
      {{- end }}
      {{- if .Values.dnsPolicy }}
      dnsPolicy: {{ .Values.dnsPolicy }}
      {{- end }}
      {{- with .Values.dataProtection.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.dataProtection.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.dataProtection.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      terminationGracePeriodSeconds: 10
      volumes:
        - name: manager-config
          configMap:
            name: {{ include "kubeblocks.fullname" . }}-manager-config
        {{- if .Values.admissionWebhooks.enabled }}
        - name: cert
          secret:
            defaultMode: 420
            secretName: {{ include "kubeblocks.fullname" . }}.{{ .Release.Namespace }}.svc.tls-pair
        {{- end }}
        {{- if .Values.multiCluster.kubeConfig }}
        - name: multi-cluster-kubeconfig
          secret:
            secretName: {{ .Values.multiCluster.kubeConfig }}
            defaultMode: 420
        {{- end }}
{{- end }}
