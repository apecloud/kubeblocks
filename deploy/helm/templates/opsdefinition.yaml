---
apiVersion: apps.kubeblocks.io/v1alpha1
kind: OpsDefinition
metadata:
  name: switchover
spec:
  preConditions:
    {{- .Files.Get "opsdefinitions/switchover-preconditions" | nindent 4 }}
  podInfoExtractors:
    - name: availablePod
      podSelector:
        multiPodSelectionPolicy: Any
      env:
        - name: TARGET_POD_IP
          valueFrom:
            envRef:
              envName: KB_POD_IP
        - name: LORRY_HTTP_PORT
          valueFrom:
            envRef:
              envName: LORRY_HTTP_PORT
  parametersSchema:
    openAPIV3Schema:
      properties:
        primary:
          description: "old primary instance name(pod Name)."
          type: string
        candidate:
          description: |
            candidate instance name(pod Name). if candidate is not empty, will promote it to primary. 
            otherwise promote a randomly selected pod to primary.
          type: string
      type: object
  actions:
    - name: switchover
      failurePolicy: Fail
      parameters:
        - primary
        - candidate
      workload:
        podInfoExtractorName: availablePod
        type: Job
        backoffLimit: 0
        podSpec:
          containers:
            - name: switchover
              image: {{ .Values.image.registry | default "docker.io" }}/{{ .Values.image.tools.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}
              imagePullPolicy: IfNotPresent
              command:
                - sh
                - -c
                - |
                  set -e
                  # do switchover
                  url="http://${TARGET_POD_IP}:${LORRY_HTTP_PORT}/v1.0/switchover" 
                  params="{\"parameters\": {\"primary\":\"${primary}\",\"candidate\":\"${candidate}\"}}"
                  echo "curl ${url}, parameters: ${params}"
                  res=`curl -s -X POST -H 'Content-Type: application/json' "${url}" -d "${params}"`
                  echo "curl result: ${res}"
                  
                  # check if switchover successfully.
                  echo "INFO: start to check if switchover successfully, timeout is 60s"
                  executedUnix=$(date +%s)
                  while true; do
                    sleep 5
                    if [ ! -z ${candidate} ]; then
                       # if candidate specified, only check it
                       role=$(kubectl get pod ${candidate} -ojson | jq -r '.metadata.labels["kubeblocks.io/role"]')
                       if [ "$role" == "primary" ] || [ "$role" == "leader" ] || [ "$role" == "master" ]; then
                          echo "INFO: switchover successfully, ${candidate} is ${role}"
                          exit 0
                       fi
                    else
                      # check if the candidate instance has been promote to primary
                      pods=$(kubectl get pod -l apps.kubeblocks.io/component-name=${KB_COMP_NAME},app.kubernetes.io/instance=${KB_CLUSTER_NAME} | awk 'NR > 1 {print $1}')
                      for podName in ${pods}; do
                         if [ "${podName}" != "${primary}" ];then
                           role=$(kubectl get pod ${podName} -ojson | jq -r '.metadata.labels["kubeblocks.io/role"]')
                           if [ "$role" == "primary" ] || [ "$role" == "leader" ] || [ "$role" == "master" ]; then
                              echo "INFO: switchover successfully, ${podName} is ${role}"
                              exit 0
                           fi
                         fi
                      done
                    fi
                    currentUnix=$(date +%s)
                    diff_time=$((${currentUnix}-${executedUnix}))
                    if [ ${diff_time} -ge 60 ]; then
                      echo "ERROR: switchover failed."
                      exit 1
                    fi
                  done