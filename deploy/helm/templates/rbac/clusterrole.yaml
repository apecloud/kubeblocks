apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ include "kubeblocks.fullname" . }}
  labels:
    {{- include "kubeblocks.labels" . | nindent 4 }}
aggregationRule:
  clusterRoleSelectors:
  - matchLabels:
      {{- include "kubeblocks.selectorLabels" . | nindent 6 }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ include "kubeblocks.fullname" . }}-manager-role
  labels:
    {{- include "kubeblocks.labels" . | nindent 4 }}
rules:
{{- $doInclude := false }}
{{- range $i, $line := .Files.Lines "config/rbac/role.yaml" }}
  {{- if eq $doInclude true }}
    {{- $line | nindent 2 }}
  {{- end }}
  {{- if eq $line "rules:" }}{{- $doInclude = true }}{{- end }}
{{- end }}
{{- if .Values.dataProtection.enabled }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ include "dataprotection.workerClusterRoleName" . }}
  labels:
    {{- include "kubeblocks.labels" . | nindent 4 }}
rules:
# need to run "kubectl patch backup" inside a worker pod to update the status
- apiGroups:
  - dataprotection.kubeblocks.io
  resources:
  - backups
  verbs:
  - create
  - get
  - patch
  - update
- apiGroups:
  - dataprotection.kubeblocks.io
  resources:
  - backups/status
  verbs:
  - get
  - patch
  - update
{{- end }}
{{- if .Values.crd.enabled }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ include "kubeblocks.fullname" . }}-helmhook-role
  labels:
    {{- include "kubeblocks.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": pre-upgrade
rules:
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - create
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - apps
    resources:
      - deployments
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
  - apiGroups:
      - apps
    resources:
      - deployments/status
    verbs:
      - get
{{- end }}
