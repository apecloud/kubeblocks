apiVersion: apps.kubeblocks.io/v1alpha1
kind: Cluster
metadata:
  name: {{ include "kblib.clusterName" . }}
  labels: {{ include "kblib.clusterLabels" . | nindent 4 }}
  annotations:
    "kubeblocks.io/extra-env": '{"KB_KAFKA_ENABLE_SASL":"{{ $.Values.saslEnable }}"}'
spec:
  clusterDefinitionRef: kafka # ref clusterdefinition.name
  clusterVersionRef: {{ .Values.version }}
  terminationPolicy: {{ .Values.extra.terminationPolicy }}
  {{- include "kblib.affinity" . | indent 2 }}
  componentSpecs:
    {{- if eq "combined" $.Values.mode }}
    - name: broker
      componentDefRef: kafka-server
      tls: {{ $.Values.tlsEnable }}
      {{- if $.Values.tlsEnable }}
      issuer:
        name: KubeBlocks
      {{- end }}
      replicas: {{ $.Values.replicas }}
      monitor: {{ $.Values.monitorEnable }}
      serviceAccountName: {{ include "kblib.serviceAccountName" . }}
      {{- include "kblib.componentResources" . | indent 6 }}
      {{- include "kblib.componentServices" . | indent 6 }}
      {{- if $.Values.storageEnable }}
      volumeClaimTemplates:
        - name: metadata 
          spec:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: {{ print $.Values.metaStorage "Gi" }}
        - name: data 
          spec:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: {{ print $.Values.dataStorage "Gi" }}
        - name: log 
          spec:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: {{ print $.Values.logStorage "Gi" }}
        {{- end }}
    {{- else }}
    - name: controller
      componentDefRef: controller
      tls: {{ $.Values.tlsEnable }}
      {{- if $.Values.tlsEnable }}
      issuer:
        name: KubeBlocks
      {{- end }}
      replicas: {{ $.Values.controllerReplicas }}
      monitor: {{ $.Values.monitorEnable }}
      serviceAccountName: {{ include "kblib.serviceAccountName" . }}
      {{- include "kblib.componentResources" . | indent 6 }}
      {{- if $.Values.storageEnable }}
      volumeClaimTemplates:
        - name: metadata 
          spec:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: {{ print $.Values.metaStorage "Gi" }}
        - name: log
          spec:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: {{ print $.Values.logStorage "Gi" }}
      {{- end }}
    - name: broker
      componentDefRef: kafka-broker
      tls: {{ $.Values.tlsEnable }}
      {{- if $.Values.tlsEnable }}
      issuer:
        name: KubeBlocks
      {{- end }}
      replicas: {{ $.Values.brokerReplicas }}
      monitor: {{ $.Values.monitorEnable }}
      serviceAccountName: {{ include "kblib.serviceAccountName" . }}
      {{- include "kblib.componentResources" . | indent 6 }}
      {{- include "kblib.componentServices" . | indent 6 }}
      {{- if $.Values.storageEnable }}
      volumeClaimTemplates:
        - name: data 
          spec:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: {{ print $.Values.metaStorage "Gi" }}
        - name: log
          spec:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: {{ print $.Values.logStorage "Gi" }}
        {{- end }}
      {{- end }}
    {{- if .Values.monitorEnable }}
    - name: metrics-exp
      componentDefRef: kafka-exporter
      replicas: {{ $.Values.monitorReplicas }}
      monitor: true
      {{- include "kblib.componentResources" . | nindent 6 }}
    {{- end }}