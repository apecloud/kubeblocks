apiVersion: apps.kubeblocks.io/v1alpha1
kind: ClusterDefinition
metadata:
  name: {{ include "kafka.name" . }}
  labels:
    {{- include "kafka.labels" . | nindent 4 }}
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  type: kafka
  connectionCredential:
    superusers: "User:admin"
    endpoint: "$(SVC_FQDN):$(SVC_PORT_kafka-ctrlr)"
    kraftClusterID: "$(UUID_STR_B64)" 
    sslCertPassword: "$(RANDOM_PASSWD)"

  componentDefs:
    # combined both controller(kraft) and broker. Ref: https://kafka.apache.org/documentation/#kraft_role
    - name: kafka-server
      description: |-
        Kafka servers that act as both brokers and controllers are referred to as "combined" servers. Combined servers
        are simpler to operate for small use cases like a development environment. The key disadvantage is that the
        controller will be less isolated from the rest of the system. For example, it is not possible to roll or scale
        the controllers separately from the brokers in combined mode. Combined mode is not recommended in critical
        deployment environments.
      workloadType: Stateful # Consensus
      characterType: kafka
      maxUnavailable: 49%
      probes:
      monitor:
        builtIn: false
        exporterConfig:
          scrapePath: /metrics
          scrapePort: 5556
      configSpecs:
        - name: kafka-configuration-tpl
          constraintRef: {{ include "kafka.name" . }}-cc
          templateRef: {{ include "kafka.name" . }}-configuration-tpl
          volumeName: kafka-config
          namespace: {{ .Release.Namespace }}
        - name: kafka-jmx-configuration-tpl
          templateRef: {{ include "kafka.name" . }}-jmx-configuration-tpl
          volumeName: jmx-config
          namespace: {{ .Release.Namespace }}
      scriptSpecs:
        - name: kafka-scripts-tpl
          templateRef: {{ include "kafka.name" . }}-scripts-tpl
          volumeName: scripts
          namespace: {{ .Release.Namespace }}
          defaultMode: 0755
        - name: kafka-scripts-tools-tpl
          templateRef: {{ include "kafka.name" . }}-scripts-tools-tpl
          volumeName: tools
          namespace: {{ .Release.Namespace }}
          defaultMode: 0755
      service:
        ports:
          - name: kafka-ctrlr
            targetPort: kafka-ctrlr
            port: 9093
          - name: kafka-client
            targetPort: kafka-client
            port: 9092
          - name: metrics
            targetPort: metrics
            port: 5556
      podSpec:
        securityContext:
          fsGroup: 1001
        containers:
          - name: kafka
            command:
              - /scripts/kafka-server-setup.sh
            env:
              - name: BITNAMI_DEBUG
                value: {{ .Values.debugEnabled | quote }}
              - name: MY_POD_IP
                value: "$(KB_PODIP)"
                # value: "$(KB_POD_IP)"
              - name: MY_POD_NAME
                value: "$(KB_POD_NAME)"
              - name: KAFKA_ENABLE_KRAFT
                value: "yes"
              - name: KAFKA_CFG_PROCESS_ROLES
                value: "broker,controller"
              - name: KAFKA_CFG_CONTROLLER_LISTENER_NAMES # required for KRaft
                value: "CONTROLLER"
              - name: KAFKA_CFG_INTER_BROKER_LISTENER_NAME
                value: "INTERNAL"
              - name: KAFKA_CFG_LISTENERS # required for KRaft
                value: "CONTROLLER://:9093,INTERNAL://:9094,CLIENT://:9092"
              - name: KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP
                value: "CONTROLLER:PLAINTEXT,INTERNAL:PLAINTEXT,CLIENT:PLAINTEXT"
              - name: KAFKA_CFG_ADVERTISED_LISTENERS
                value: "INTERNAL://$(KB_POD_NAME).$(KB_CLUSTER_COMP_NAME)-headless.$(KB_NAMESPACE).svc:9094,CLIENT://$(KB_CLUSTER_COMP_NAME):9092"
                # value: "INTERNAL://$(KB_POD_FQDN):9094,CLIENT://$(KB_POD_FQDN):9092"
              - name: KAFKA_CFG_INITIAL_BROKER_REGISTRATION_TIMEOUT_MS
                value: "240000"
              - name: ALLOW_PLAINTEXT_LISTENER
                value: "yes"
              - name: JMX_PORT
                value: "5555"
              - name: KAFKA_VOLUME_DIR
                value: "/bitnami/kafka"
              - name: KAFKA_CFG_METADATA_LOG_DIR
                value: "/bitnami/kafka/metadata"
              - name: KAFKA_LOG_DIR
                value: "/opt/bitnami/kafka/logs"
              - name: KAFKA_HEAP_OPTS
                #value: "-Xmx1024m -Xms1024m"
                value: "-XshowSettings:vm -XX:MaxRAMPercentage=100 -Ddepth=64"
              - name: SERVER_PROP_FILE
                value: /scripts/server.properties
              - name: KAFKA_CFG_SUPER_USERS
                valueFrom:
                  secretKeyRef:
                    name: $(CONN_CREDENTIAL_SECRET_NAME)
                    key: superusers
                    optional: false
              - name: KAFKA_KRAFT_CLUSTER_ID
                valueFrom:
                  secretKeyRef:
                    name: $(CONN_CREDENTIAL_SECRET_NAME)
                    key: kraftClusterID
                    optional: false
              - name: KB_KAFKA_ENABLE_SASL  # enable the SASL with plain mode
                value: "false"
              - name: KB_KAFKA_SASL_CONFIG_PATH  # specify the SASL jaas users
                value: /tools/server-jaas.properties
            ports:
              - name: kafka-client
                containerPort: 9092
              - name: kafka-ctrlr
                containerPort: 9093
              - name: kafka-internal
                containerPort: 9094
            livenessProbe:
              failureThreshold: 3
              initialDelaySeconds: 10
              periodSeconds: 10
              successThreshold: 1
              timeoutSeconds: 5
              tcpSocket:
                port: kafka-ctrlr
            startupProbe:
              failureThreshold: 6
              initialDelaySeconds: 5
              periodSeconds: 10
              successThreshold: 1
              timeoutSeconds: 5
              tcpSocket:
                port: kafka-ctrlr
            volumeMounts:
              - name: metadadata
                mountPath: /bitnami/kafka/metadata
              - name: data
                mountPath: /bitnami/kafka
              - name: logs
                mountPath: /opt/bitnami/kafka/logs
              - name: scripts
                mountPath: /scripts/kafka-server-setup.sh
                subPath: kafka-server-setup.sh
              - name: kafka-config
                mountPath: /scripts/server.properties
                subPath: server.properties
              - name: tools
                mountPath: /tools/client-ssl.properties
                subPath: client-ssl.properties
              - name: tools
                mountPath: /tools/server-jaas.properties
                subPath: server-jaas.properties

          - name: jmx-exporter
            command:
              - java
            args:
              - -XX:MaxRAMPercentage=100
              - -XshowSettings:vm
              - -jar
              - jmx_prometheus_httpserver.jar
              - "5556"
              - /etc/jmx-kafka/jmx-kafka-prometheus.yml
            ports:
              - name: metrics
                containerPort: 5556
            volumeMounts:
              - name: jmx-config
                mountPath: /etc/jmx-kafka

    # controller(kraft) Ref: https://kafka.apache.org/documentation/#kraft_role
    - name: kafka-kraft
      description: |-
        Kafka controller that act as controllers (kraft) only server.
      workloadType: Stateful # Consensus
      characterType: kafka
      maxUnavailable: 49%
      probes:
      monitor:
        builtIn: false
        exporterConfig:
          scrapePath: /metrics
          scrapePort: 5556
      configSpecs:
        - name: kafka-configuration-tpl
          constraintRef: {{ include "kafka.name" . }}-cc
          templateRef: {{ include "kafka.name" . }}-configuration-tpl
          volumeName: kafka-config
          namespace: {{ .Release.Namespace }}
        - name: kafka-jmx-configuration-tpl
          templateRef: {{ include "kafka.name" . }}-jmx-configuration-tpl
          volumeName: jmx-config
      scriptSpecs:
        - name: kafka-scripts-tpl
          templateRef: {{ include "kafka.name" . }}-scripts-tpl
          volumeName: scripts
          namespace: {{ .Release.Namespace }}
          defaultMode: 0755
      service:
        ports:
          - name: kafka-ctrlr
            targetPort: kafka-ctrlr
            port: 9093
          - name: metrics
            targetPort: metrics
            port: 5556
      podSpec:
        securityContext:
          fsGroup: 1001
        containers:
          - name: kafka
            command:
              - /scripts/kafka-server-setup.sh
            env:
              - name: BITNAMI_DEBUG
                value: {{ .Values.debugEnabled | quote }}
              - name: MY_POD_IP
                value: "$(KB_PODIP)"
                # value: "$(KB_POD_IP)"
              - name: MY_POD_NAME
                value: "$(KB_POD_NAME)"
              - name: KAFKA_ENABLE_KRAFT
                value: "yes"
              - name: KAFKA_CFG_PROCESS_ROLES
                value: "controller"
              - name: KAFKA_CFG_CONTROLLER_LISTENER_NAMES # required for KRaft
                value: "CONTROLLER"
              - name: KAFKA_CFG_LISTENERS # required for KRaft
                value: "CONTROLLER://:9093"
              - name: KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP
                value: "CONTROLLER:PLAINTEXT"
              - name: ALLOW_PLAINTEXT_LISTENER
                value: "yes"
              - name: JMX_PORT
                value: "5555"
              - name: KAFKA_VOLUME_DIR
                value: "/bitnami/kafka"
              - name: KAFKA_CFG_METADATA_LOG_DIR
                value: "/bitnami/kafka/metadata"
              - name: KAFKA_LOG_DIR
                value: "/opt/bitnami/kafka/logs"
              - name: KAFKA_HEAP_OPTS
                #value: "-Xmx1024m -Xms1024m"
                value: "-XshowSettings:vm -XX:MaxRAMPercentage=100 -Ddepth=64"
              - name: SERVER_PROP_FILE
                value: /scripts/server.properties
              - name: KAFKA_CFG_SUPER_USERS
                valueFrom:
                  secretKeyRef:
                    name: $(CONN_CREDENTIAL_SECRET_NAME)
                    key: superusers
                    optional: false
              - name: KAFKA_KRAFT_CLUSTER_ID
                valueFrom:
                  secretKeyRef:
                    name: $(CONN_CREDENTIAL_SECRET_NAME)
                    key: kraftClusterID
                    optional: false
            ports:
              - name: kafka-ctrlr
                containerPort: 9093
            livenessProbe:
              failureThreshold: 3
              initialDelaySeconds: 10
              periodSeconds: 10
              successThreshold: 1
              timeoutSeconds: 5
              tcpSocket:
                port: kafka-ctrlr
            startupProbe:
              failureThreshold: 6
              initialDelaySeconds: 5
              periodSeconds: 10
              successThreshold: 1
              timeoutSeconds: 5
              tcpSocket:
                port: kafka-ctrlr
            volumeMounts:
              - name: metadadata
                mountPath: /bitnami/kafka/metadata
              # - name: data
              #   mountPath: /bitnami/kafka
              - name: logs
                mountPath: /opt/bitnami/kafka/logs
              - name: kafka-config
                mountPath: /scripts/server.properties
                subPath: server.properties
              - name: scripts
                mountPath: /scripts/kafka-server-setup.sh
                subPath: kafka-server-setup.sh
              - name: scripts
                mountPath: /opt/bitnami/scripts/kafka-env.sh
                subPath: kafka-env.sh
          - name: jmx-exporter
            command:
              - java
            args:
              - -XX:MaxRAMPercentage=100
              - -XshowSettings:vm
              - -jar
              - jmx_prometheus_httpserver.jar
              - "5556"
              - /etc/jmx-kafka/jmx-kafka-prometheus.yml
            ports:
              - name: metrics
                containerPort: 5556
            volumeMounts:
              - name: jmx-config
                mountPath: /etc/jmx-kafka

    - name: kafka-broker
      description: |-
        Kafka broker.
      workloadType: Stateful
      characterType: kafka
      probes:
      monitor:
        builtIn: false
        exporterConfig:
          scrapePath: /metrics
          scrapePort: 5556
      configSpecs:
        - name: kafka-configuration-tpl
          constraintRef: {{ include "kafka.name" . }}-cc
          templateRef: {{ include "kafka.name" . }}-configuration-tpl
          volumeName: kafka-config
          namespace: {{ .Release.Namespace }}
        - name: kafka-jmx-configuration-tpl
          templateRef: {{ include "kafka.name" . }}-jmx-configuration-tpl
          volumeName: jmx-config
      scriptSpecs:
        - name: kafka-scripts-tpl
          templateRef: {{ include "kafka.name" . }}-scripts-tpl
          volumeName: scripts
          namespace: {{ .Release.Namespace }}
          defaultMode: 0755
        - name: kafka-scripts-tools-tpl
          templateRef: {{ include "kafka.name" . }}-scripts-tools-tpl
          volumeName: tools
          namespace: {{ .Release.Namespace }}
          defaultMode: 0755
      service:
        ports:
          - name: kafka-client
            targetPort: kafka-client
            port: 9092
          - name: metrics
            targetPort: metrics
            port: 5556
      podSpec:
        securityContext:
          fsGroup: 1001
        containers:
          - name: kafka
            command:
              - /scripts/kafka-server-setup.sh
            env:
              - name: BITNAMI_DEBUG
                value: {{ .Values.debugEnabled | quote }}
              - name: MY_POD_IP
                value: "$(KB_PODIP)"
                # value: "$(KB_POD_IP)"
              - name: MY_POD_NAME
                value: "$(KB_POD_NAME)"
              - name: KAFKA_ENABLE_KRAFT
                value: "yes"
              - name: KAFKA_CFG_PROCESS_ROLES
                value: "broker"
              - name: KAFKA_CFG_CONTROLLER_LISTENER_NAMES # required for KRaft
                value: "CONTROLLER"
              - name: KAFKA_CFG_INTER_BROKER_LISTENER_NAME
                value: "INTERNAL"
              - name: KAFKA_CFG_LISTENERS # required for KRaft
                value: "INTERNAL://:9094,CLIENT://:9092"
              - name: KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP
                value: "INTERNAL:PLAINTEXT,CLIENT:PLAINTEXT,CONTROLLER:PLAINTEXT"
              - name: KAFKA_CFG_ADVERTISED_LISTENERS
                value: "INTERNAL://$(KB_POD_NAME).$(KB_CLUSTER_COMP_NAME)-headless.$(KB_NAMESPACE).svc:9094,CLIENT://$(KB_CLUSTER_COMP_NAME):9092"
              - name: KAFKA_CFG_INITIAL_BROKER_REGISTRATION_TIMEOUT_MS
                value: "240000"
              - name: ALLOW_PLAINTEXT_LISTENER
                value: "yes"
              - name: JMX_PORT
                value: "5555"
              - name: KAFKA_VOLUME_DIR
                value: "/bitnami/kafka"
              - name: KAFKA_CFG_METADATA_LOG_DIR
                value: "/bitnami/kafka/metadata"
              - name: KAFKA_LOG_DIR
                value: "/opt/bitnami/kafka/logs"
              - name: KAFKA_HEAP_OPTS
                #value: "-Xmx1024m -Xms1024m"
                value: "-XshowSettings:vm -XX:MaxRAMPercentage=100 -Ddepth=64"
              - name: SERVER_PROP_FILE
                value: /scripts/server.properties
              - name: KAFKA_CFG_SUPER_USERS
                valueFrom:
                  secretKeyRef:
                    name: $(CONN_CREDENTIAL_SECRET_NAME)
                    key: superusers
                    optional: false
              - name: KAFKA_KRAFT_CLUSTER_ID
                valueFrom:
                  secretKeyRef:
                    name: $(CONN_CREDENTIAL_SECRET_NAME)
                    key: kraftClusterID
                    optional: false
              - name: KB_KAFKA_ENABLE_SASL  # enable the SASL with plain mode
                value: "true"
              - name: KB_KAFKA_SASL_CONFIG_PATH  # specify the SASL jaas users
                value: /tools/server-jaas.properties
              - name: BROKER_MIN_NODE_ID
                value: {{ .Values.kafkaBroker.minNodeId | quote }}
            ports:
              - name: kafka-client
                containerPort: 9092
              - name: kafka-internal
                containerPort: 9094
            livenessProbe:
              failureThreshold: 3
              initialDelaySeconds: 10
              periodSeconds: 10
              successThreshold: 1
              timeoutSeconds: 5
              tcpSocket:
                port: kafka-client
            startupProbe:
              failureThreshold: 6
              initialDelaySeconds: 5
              periodSeconds: 10
              successThreshold: 1
              timeoutSeconds: 5
              tcpSocket:
                port: kafka-client
            volumeMounts:
              - name: data
                mountPath: /bitnami/kafka
              - name: logs
                mountPath: /opt/bitnami/kafka/logs
              - name: scripts
                mountPath: /scripts/kafka-server-setup.sh
                subPath: kafka-server-setup.sh
              - name: kafka-config
                mountPath: /scripts/server.properties
                subPath: server.properties
              - name: tools
                mountPath: /tools/client-ssl.properties
                subPath: client-ssl.properties
              - name: tools
                mountPath: /tools/server-jaas.properties
                subPath: server-jaas.properties
          - name: jmx-exporter
            command:
              - java
            args:
              - -XX:MaxRAMPercentage=100
              - -XshowSettings:vm
              - -jar
              - jmx_prometheus_httpserver.jar
              - "5556"
              - /etc/jmx-kafka/jmx-kafka-prometheus.yml
            ports:
              - name: metrics
                containerPort: 5556
            volumeMounts:
              - name: jmx-config
                mountPath: /etc/jmx-kafka

    - name: kafka-exporter
      workloadType: Stateless
      scriptSpecs:
        - name: kafka-scripts-tpl
          templateRef: {{ include "kafka.name" . }}-scripts-tpl
          volumeName: scripts
          namespace: {{ .Release.Namespace }}
          defaultMode: 0755
      probes:
      monitor:
        builtIn: false
        exporterConfig:
          scrapePath: /metrics
          scrapePort: 9308
      service:
        ports:
          - name: metrics
            targetPort: metrics
            port: 9308
      podSpec:
        securityContext:
          fsGroup: 1001
        containers:
          - name: kafka-exporter
            command:
              - /scripts/setup.sh
            ports:
              - name: metrics
                containerPort: 9308
            volumeMounts:
              - name: scripts
                mountPath: /scripts/setup.sh
                subPath: kafka-exporter-setup.sh