---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.0
  creationTimestamp: null
  name: clusters.dbaas.kubeblocks.io
spec:
  group: dbaas.kubeblocks.io
  names:
    categories:
    - dbaas
    - all
    kind: Cluster
    listKind: ClusterList
    plural: clusters
    singular: cluster
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Cluster Application Version.
      jsonPath: .spec.appVersionRef
      name: APP-VERSION
      type: string
    - description: Cluster Status.
      jsonPath: .status.phase
      name: PHASE
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Cluster is the Schema for the clusters API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ClusterSpec defines the desired state of Cluster
            properties:
              affinity:
                description: Affinity describes affinities which specific by users
                properties:
                  nodeLabels:
                    additionalProperties:
                      type: string
                    description: NodeLabels describe constrain which nodes pod can
                      be scheduled on based on node labels
                    type: object
                  podAntiAffinity:
                    description: PodAntiAffinity defines pods of component anti-affnity
                      Defaults to Preferred Preferred means try spread pods by topologyKey
                      Required means must spread pods by topologyKey
                    enum:
                    - Preferred
                    - Required
                    type: string
                  topologyKeys:
                    description: TopologyKeys describe topologyKeys for `topologySpreadConstraint`
                      and `podAntiAffinity` in ClusterDefinition API
                    items:
                      type: string
                    type: array
                type: object
              appVersionRef:
                description: ref AppVersion
                type: string
              clusterDefinitionRef:
                description: ref ClusterDefinition, immutable
                type: string
              components:
                description: List of components you want to replace in ClusterDefinition
                  and AppVersion. It will replace the field in ClusterDefinition's
                  and AppVersion's component if type is matching
                items:
                  properties:
                    affinity:
                      description: Affinity describes affinities which specific by
                        users
                      properties:
                        nodeLabels:
                          additionalProperties:
                            type: string
                          description: NodeLabels describe constrain which nodes pod
                            can be scheduled on based on node labels
                          type: object
                        podAntiAffinity:
                          description: PodAntiAffinity defines pods of component anti-affnity
                            Defaults to Preferred Preferred means try spread pods
                            by topologyKey Required means must spread pods by topologyKey
                          enum:
                          - Preferred
                          - Required
                          type: string
                        topologyKeys:
                          description: TopologyKeys describe topologyKeys for `topologySpreadConstraint`
                            and `podAntiAffinity` in ClusterDefinition API
                          items:
                            type: string
                          type: array
                      type: object
                    monitor:
                      default: false
                      description: Monitor which is a switch to enable monitoring,
                        default is false DBaas provides an extension mechanism to
                        support component level monitoring, which will scrape metrics
                        auto or manually from servers in component and export metrics
                        to Time Series Database.
                      type: boolean
                    name:
                      maxLength: 12
                      type: string
                    replicas:
                      description: default value in ClusterDefinition
                      type: integer
                    resources:
                      description: Resources requests and limits of workload
                      properties:
                        limits:
                          additionalProperties:
                            anyOf:
                            - type: integer
                            - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: 'Limits describes the maximum amount of compute
                            resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                            - type: integer
                            - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: 'Requests describes the minimum amount of compute
                            resources required. If Requests is omitted for a container,
                            it defaults to Limits if that is explicitly specified,
                            otherwise to an implementation-defined value. More info:
                            https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                          type: object
                      type: object
                    serviceType:
                      default: ClusterIP
                      description: 'serviceType determines how the Service is exposed.
                        Valid options are ClusterIP, NodePort, and LoadBalancer. "ClusterIP"
                        allocates a cluster-internal IP address for load-balancing
                        to endpoints. Endpoints are determined by the selector or
                        if that is not specified, by manual construction of an Endpoints
                        object or EndpointSlice objects. If clusterIP is "None", no
                        virtual IP is allocated and the endpoints are published as
                        a set of endpoints rather than a virtual IP. "NodePort" builds
                        on ClusterIP and allocates a port on every node which routes
                        to the same endpoints as the clusterIP. "LoadBalancer" builds
                        on NodePort and creates an external load-balancer (if supported
                        in the current cloud) which routes to the same endpoints as
                        the clusterIP. More info: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types'
                      enum:
                      - ClusterIP
                      - NodePort
                      - LoadBalancer
                      type: string
                    type:
                      description: component name in ClusterDefinition
                      maxLength: 12
                      type: string
                    volumeClaimTemplates:
                      description: VolumeClaimTemplates information for statefulset.spec.volumeClaimTemplates
                      items:
                        properties:
                          name:
                            description: Ref AppVersion.spec.components.containers.volumeMounts.name
                            type: string
                          spec:
                            description: Spec defines the desired characteristics
                              of a volume requested by a pod author
                            properties:
                              accessModes:
                                description: 'accessModes contains the desired access
                                  modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                                items:
                                  type: string
                                type: array
                              dataSource:
                                description: 'dataSource field can be used to specify
                                  either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
                                  * An existing PVC (PersistentVolumeClaim) If the
                                  provisioner or an external controller can support
                                  the specified data source, it will create a new
                                  volume based on the contents of the specified data
                                  source. If the AnyVolumeDataSource feature gate
                                  is enabled, this field will always have the same
                                  contents as the DataSourceRef field.'
                                properties:
                                  apiGroup:
                                    description: APIGroup is the group for the resource
                                      being referenced. If APIGroup is not specified,
                                      the specified Kind must be in the core API group.
                                      For any other third-party types, APIGroup is
                                      required.
                                    type: string
                                  kind:
                                    description: Kind is the type of resource being
                                      referenced
                                    type: string
                                  name:
                                    description: Name is the name of resource being
                                      referenced
                                    type: string
                                required:
                                - kind
                                - name
                                type: object
                              dataSourceRef:
                                description: 'dataSourceRef specifies the object from
                                  which to populate the volume with data, if a non-empty
                                  volume is desired. This may be any local object
                                  from a non-empty API group (non core object) or
                                  a PersistentVolumeClaim object. When this field
                                  is specified, volume binding will only succeed if
                                  the type of the specified object matches some installed
                                  volume populator or dynamic provisioner. This field
                                  will replace the functionality of the DataSource
                                  field and as such if both fields are non-empty,
                                  they must have the same value. For backwards compatibility,
                                  both fields (DataSource and DataSourceRef) will
                                  be set to the same value automatically if one of
                                  them is empty and the other is non-empty. There
                                  are two important differences between DataSource
                                  and DataSourceRef: * While DataSource only allows
                                  two specific types of objects, DataSourceRef allows
                                  any non-core object, as well as PersistentVolumeClaim
                                  objects. * While DataSource ignores disallowed values
                                  (dropping them), DataSourceRef preserves all values,
                                  and generates an error if a disallowed value is
                                  specified. (Beta) Using this field requires the
                                  AnyVolumeDataSource feature gate to be enabled.'
                                properties:
                                  apiGroup:
                                    description: APIGroup is the group for the resource
                                      being referenced. If APIGroup is not specified,
                                      the specified Kind must be in the core API group.
                                      For any other third-party types, APIGroup is
                                      required.
                                    type: string
                                  kind:
                                    description: Kind is the type of resource being
                                      referenced
                                    type: string
                                  name:
                                    description: Name is the name of resource being
                                      referenced
                                    type: string
                                required:
                                - kind
                                - name
                                type: object
                              resources:
                                description: 'resources represents the minimum resources
                                  the volume should have. If RecoverVolumeExpansionFailure
                                  feature is enabled users are allowed to specify
                                  resource requirements that are lower than previous
                                  value but must still be higher than capacity recorded
                                  in the status field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                                properties:
                                  limits:
                                    additionalProperties:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    description: 'Limits describes the maximum amount
                                      of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                    type: object
                                  requests:
                                    additionalProperties:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    description: 'Requests describes the minimum amount
                                      of compute resources required. If Requests is
                                      omitted for a container, it defaults to Limits
                                      if that is explicitly specified, otherwise to
                                      an implementation-defined value. More info:
                                      https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                    type: object
                                type: object
                              selector:
                                description: selector is a label query over volumes
                                  to consider for binding.
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label
                                      selector requirements. The requirements are
                                      ANDed.
                                    items:
                                      description: A label selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the
                                            selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's
                                            relationship to a set of values. Valid
                                            operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string
                                            values. If the operator is In or NotIn,
                                            the values array must be non-empty. If
                                            the operator is Exists or DoesNotExist,
                                            the values array must be empty. This array
                                            is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value}
                                      pairs. A single {key,value} in the matchLabels
                                      map is equivalent to an element of matchExpressions,
                                      whose key field is "key", the operator is "In",
                                      and the values array contains only "value".
                                      The requirements are ANDed.
                                    type: object
                                type: object
                              storageClassName:
                                description: 'storageClassName is the name of the
                                  StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                                type: string
                              volumeMode:
                                description: volumeMode defines what type of volume
                                  is required by the claim. Value of Filesystem is
                                  implied when not included in claim spec.
                                type: string
                              volumeName:
                                description: volumeName is the binding reference to
                                  the PersistentVolume backing this claim.
                                type: string
                            type: object
                        required:
                        - name
                        type: object
                      type: array
                  required:
                  - monitor
                  - name
                  - type
                  type: object
                type: array
              terminationPolicy:
                default: Halt
                description: One of DoNotTerminate, Halt, Delete, WipeOut. Defaults
                  to Halt. DoNotTerminate means block delete operation. Halt means
                  delete resources such as sts,deploy,svc,pdb, but keep pvcs. Delete
                  is based on Halt and delete pvcs. WipeOut is based on Delete and
                  wipe out all snapshots and snapshot data from bucket.
                enum:
                - DoNotTerminate
                - Halt
                - Delete
                - WipeOut
                type: string
            required:
            - appVersionRef
            - clusterDefinitionRef
            type: object
          status:
            description: ClusterStatus defines the observed state of Cluster
            properties:
              clusterDefGeneration:
                description: ClusterDefinition generation number.
                format: int64
                type: integer
              clusterDefSyncStatus:
                description: ClusterDefinition sync. status.
                enum:
                - InSync
                - OutOfSync
                type: string
              components:
                additionalProperties:
                  description: ClusterStatusComponent record components status information
                  properties:
                    consensusSetStatus:
                      description: ConsensusSetStatus role and pod name mapping
                      properties:
                        followers:
                          description: Followers status
                          items:
                            properties:
                              accessMode:
                                default: ReadWrite
                                description: AccessMode, what service this pod provides
                                enum:
                                - None
                                - Readonly
                                - ReadWrite
                                type: string
                              name:
                                default: leader
                                description: Name role name
                                type: string
                              pod:
                                default: Unknown
                                description: Pod name
                                type: string
                            required:
                            - accessMode
                            - name
                            - pod
                            type: object
                          type: array
                        leader:
                          description: Leader status
                          properties:
                            accessMode:
                              default: ReadWrite
                              description: AccessMode, what service this pod provides
                              enum:
                              - None
                              - Readonly
                              - ReadWrite
                              type: string
                            name:
                              default: leader
                              description: Name role name
                              type: string
                            pod:
                              default: Unknown
                              description: Pod name
                              type: string
                          required:
                          - accessMode
                          - name
                          - pod
                          type: object
                        learner:
                          description: Learner status
                          properties:
                            accessMode:
                              default: ReadWrite
                              description: AccessMode, what service this pod provides
                              enum:
                              - None
                              - Readonly
                              - ReadWrite
                              type: string
                            name:
                              default: leader
                              description: Name role name
                              type: string
                            pod:
                              default: Unknown
                              description: Pod name
                              type: string
                          required:
                          - accessMode
                          - name
                          - pod
                          type: object
                      required:
                      - leader
                      type: object
                    message:
                      description: Message record the component details message in
                        current phase
                      type: string
                    phase:
                      description: Phase - in list of [Running, Failed, Creating,
                        Updating, Deleting, Deleted]
                      enum:
                      - Running
                      - Failed
                      - Creating
                      - Updating
                      - Deleting
                      - Deleted
                      type: string
                    type:
                      description: Type component type
                      type: string
                  type: object
                description: Components record the current status information of all
                  components of the cluster
                type: object
              message:
                description: Message cluster details message in current phase
                type: string
              observedGeneration:
                description: observedGeneration is the most recent generation observed
                  for this Cluster. It corresponds to the Cluster's generation, which
                  is updated on mutation by the API Server.
                format: int64
                type: integer
              operations:
                description: Operations declares which operations the cluster supports
                properties:
                  horizontalScalable:
                    description: HorizontalScalable which components of the cluster
                      support horizontalScaling, and the replicas range limit.
                    items:
                      properties:
                        max:
                          description: Max maximum of replicas when operation is horizontalScaling
                          type: integer
                        min:
                          description: Min minimum of replicas when operation is horizontalScaling,
                          type: integer
                        name:
                          description: Name component name
                          type: string
                        volumeClaimTemplateNames:
                          description: VolumeClaimTemplateNames which VolumeClaimTemplate
                            of the component support volumeExpansion
                          items:
                            type: string
                          type: array
                      type: object
                    type: array
                  restartable:
                    description: Restartable which components of the cluster support
                      restart.
                    items:
                      type: string
                    type: array
                  upgradable:
                    description: Upgradable whether the cluster supports upgrade.
                      if multiple appVersions existed, it is true
                    type: boolean
                  verticalScalable:
                    description: VerticalScalable which components of the cluster
                      support verticalScaling.
                    items:
                      type: string
                    type: array
                  volumeExpandable:
                    description: VolumeExpandable which components of the cluster
                      and its volumeClaimTemplates support volumeExpansion.
                    items:
                      properties:
                        max:
                          description: Max maximum of replicas when operation is horizontalScaling
                          type: integer
                        min:
                          description: Min minimum of replicas when operation is horizontalScaling,
                          type: integer
                        name:
                          description: Name component name
                          type: string
                        volumeClaimTemplateNames:
                          description: VolumeClaimTemplateNames which VolumeClaimTemplate
                            of the component support volumeExpansion
                          items:
                            type: string
                          type: array
                      type: object
                    type: array
                type: object
              phase:
                description: phase - in list of [Running, Failed, Creating, Updating,
                  Deleting, Deleted]
                enum:
                - Running
                - Failed
                - Creating
                - Updating
                - Deleting
                - Deleted
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
