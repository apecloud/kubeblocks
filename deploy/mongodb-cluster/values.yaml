## @param architecture define MongoDB cluster topology architecture ( `replicaset` or `sharding`)
architecture: replicaset

## @param terminationPolicy define Cluster termination policy. One of DoNotTerminate, Halt, Delete, WipeOut.
##
terminationPolicy: Halt

## Monitoring configurations
monitor:
  ## @param monitor.enabled if `true`, enable Cluster monitor capabilities
  ##
  enabled: false

## Service configurations
##
service:
  ## @param service.type MongoDB service type, valid options are ExternalName, ClusterIP, NodePort, and LoadBalancer.
  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  ##
  type: ClusterIP

clusterVersionOverride: ""
nameOverride: ""
fullnameOverride: ""


## @param tolerations define global Tolerations for the cluster all pod's assignment
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
##
tolerations: []


## @param topologySpreadConstraints Topology Spread Constraints for pod assignment spread across your cluster among failure-domains. Evaluated as a template
## Ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/#spread-constraints-for-pods
##
topologyKeys:
  - kubernetes.io/hostname


## @param affinity is affinity setting for MongoDB cluster pods assignment
##
affinity: {}

shard:
  - ## @param shard[*].replicas Number of MongoDB replicas per shard to deploy
    ##
    replicas: 3
    ## MongoDB workload pod resource requests and limits
    ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
    ## @param shard[*].resources.limits The resources limits for the init container
    ## @param shard[*].resources.requests The requested resources for the init container
    ##
    resources: { }
      # We usually recommend not to specify default resources and to leave this as a conscious
      # choice for the user. This also increases chances charts run on environments with little
      # resources, such as Minikube. If you do want to specify resources, uncomment the following
      # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
      # limits:
      #   cpu: 100m
      #   memory: 128Mi
      # requests:
    #   cpu: 100m
    #   memory: 128Mi
    ## Enable persistence using Persistent Volume Claims
    ## ref: https://kubernetes.io/docs/user-guide/persistent-volumes/
    ##
    persistence:
      ## @param shard[*].persistence.enabled Enable persistence using Persistent Volume Claims
      ##
      enabled: false
      ## `data` volume settings
      ##
      data:
        ## @param shard[*].persistence.data.storageClassName Storage class of backing PVC
        ## If defined, storageClassName: <storageClass>
        ## If set to "-", storageClassName: "", which disables dynamic provisioning
        ## If undefined (the default) or set to null, no storageClassName spec is
        ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
        ##   GKE, AWS & OpenStack)
        ##
        storageClassName:
        ## @param shard[*].persistence.size Size of data volume
        ##
        size: 10Gi
    ## @param shard[*].tolerations Tolerations for MongoDB pods assignment
    ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
    ##
    tolerations: [ ]

replicaset:
  ## @param replicaset.replicas Number of MongoDB replicas per replicaset to deploy
  ##
  replicas: 3
  ## MongoDB workload pod resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ## @param replicaset.resources.limits The resources limits for the init container
  ## @param replicaset.resources.requests The requested resources for the init container
  ##
  resources: { }
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi
  ## Enable persistence using Persistent Volume Claims
  ## ref: https://kubernetes.io/docs/user-guide/persistent-volumes/
  ##
  persistence:
    ## @param replicaset.persistence.enabled Enable persistence using Persistent Volume Claims
    ##
    enabled: true
    ## `data` volume settings
    ##
    data:
      ## @param replicaset.persistence.data.storageClassName Storage class of backing PVC
      ## If defined, storageClassName: <storageClass>
      ## If set to "-", storageClassName: "", which disables dynamic provisioning
      ## If undefined (the default) or set to null, no storageClassName spec is
      ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
      ##   GKE, AWS & OpenStack)
      ##
      storageClassName: 
      ## @param replicaset.persistence.size Size of data volume
      ##
      size: 20Gi
  ## @param replicaset.tolerations Tolerations for MongoDB pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: [ ]

configsvr:
  ## @param configsvr.replicas Number of MongoDB replicas per configsvr to deploy
  ##
  replicas: 3
  ## MongoDB workload pod resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ## @param configsvr.resources.limits The resources limits for the init container
  ## @param configsvr.resources.requests The requested resources for the init container
  ##
  resources: { }
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi
  ## Enable persistence using Persistent Volume Claims
  ## ref: https://kubernetes.io/docs/user-guide/persistent-volumes/
  ##
  persistence:
    ## @param configsvr.persistence.enabled Enable persistence using Persistent Volume Claims
    ##
    enabled: false
    ## `data` volume settings
    ##
    data:
      ## @param configsvr.persistence.data.storageClassName Storage class of backing PVC
      ## If defined, storageClassName: <storageClass>
      ## If set to "-", storageClassName: "", which disables dynamic provisioning
      ## If undefined (the default) or set to null, no storageClassName spec is
      ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
      ##   GKE, AWS & OpenStack)
      ##
      storageClassName:
      ## @param configsvr.persistence.size Size of data volume
      ##
      size: 10Gi
  ## @param configsvr.tolerations Tolerations for MongoDB pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: [ ]

mongos:
  - ## @param mongos[*].replicas Number of MongoDB replicas per mongos to deploy
    ##
    replicas: 1
    ## MongoDB workload pod resource requests and limits
    ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
    ## @param mongos[*].resources.limits The resources limits for the init container
    ## @param mongos[*].resources.requests The requested resources for the init container
    ##
    resources: { }
      # We usually recommend not to specify default resources and to leave this as a conscious
      # choice for the user. This also increases chances charts run on environments with little
      # resources, such as Minikube. If you do want to specify resources, uncomment the following
      # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
      # limits:
      #   cpu: 100m
      #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
    ## Enable persistence using Persistent Volume Claims
    ## ref: https://kubernetes.io/docs/user-guide/persistent-volumes/
    ##
    ## @param mongos[*].tolerations Tolerations for MongoDB pods assignment
    ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
    ##
    tolerations: [ ]

ingress:
  ## @param ingress.enabled Enable ingress record generation for MongoDB
  ##
  enabled: false
  ## @param ingress.pathType Ingress path type
  ##
  pathType: ImplementationSpecific
  ## @param ingress.apiVersion Force Ingress API version (automatically detected if not set)
  ##
  apiVersion: ""
  ## @param ingress.hostname Default host for the ingress record
  ##
  hostname: mongodb.local
  ## @param ingress.ingressClassName IngressClass that will be be used to implement the Ingress (Kubernetes 1.18+)
  ## This is supported in Kubernetes 1.18+ and required if you have more than one IngressClass marked as the default for your cluster .
  ## ref: https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/
  ##
  ingressClassName: ""
  ## @param ingress.path Default path for the ingress record
  ## NOTE: You may need to set this to '/*' in order to use this with ALB ingress controllers
  ##
  path: /
  ## @param ingress.annotations Additional annotations for the Ingress resource. To enable certificate auto generation, place here your cert-manager annotations.
  ## Use this parameter to set the required annotations for cert-manager, see
  ## ref: https://cert-manager.io/docs/usage/ingress/#supported-annotations
  ## e.g:
  ## annotations:
  ##   kubernetes.io/ingress.class: nginx
  ##   cert-manager.io/cluster-issuer: cluster-issuer-name
  ##
  annotations: {}
  ## @param ingress.tls Enable TLS configuration for the host defined at `ingress.hostname` parameter
  ## TLS certificates will be retrieved from a TLS secret with name: `{{- printf "%s-tls" .Values.ingress.hostname }}`
  ## You can:
  ##   - Use the `ingress.secrets` parameter to create this TLS secret
  ##   - Rely on cert-manager to create it by setting the corresponding annotations
  ##   - Rely on Helm to create self-signed certificates by setting `ingress.selfSigned=true`
  ##
  tls: false
  ## @param ingress.selfSigned Create a TLS secret for this ingress record using self-signed certificates generated by Helm
  ##
  selfSigned: false
  ## @param ingress.extraHosts An array with additional hostname(s) to be covered with the ingress record
  ## e.g:
  ## extraHosts:
  ##   - name: mongodb.local
  ##     path: /
  ##
  extraHosts: []
  ## @param ingress.extraPaths An array with additional arbitrary paths that may need to be added to the ingress under the main host
  ## e.g:
  ## extraPaths:
  ## - path: /*
  ##   backend:
  ##     serviceName: ssl-redirect
  ##     servicePort: use-annotation
  ##
  extraPaths: []
  ## @param ingress.extraTls TLS configuration for additional hostname(s) to be covered with this ingress record
  ## ref: https://kubernetes.io/docs/concepts/services-networking/ingress/#tls
  ## e.g:
  ## extraTls:
  ## - hosts:
  ##     - mongodb.local
  ##   secretName: mongodb.local-tls
  ##
  extraTls: []
  ## @param ingress.secrets Custom TLS certificates as secrets
  ## NOTE: 'key' and 'certificate' are expected in PEM format
  ## NOTE: 'name' should line up with a 'secretName' set further up
  ## If it is not set and you're using cert-manager, this is unneeded, as it will create a secret for you with valid certificates
  ## If it is not set and you're NOT using cert-manager either, self-signed certificates will be created valid for 365 days
  ## It is also possible to create and manage the certificates outside of this helm chart
  ## Please see README.md for more information
  ## e.g:
  ## secrets:
  ##   - name: mongodb.local-tls
  ##     key: |-
  ##       -----BEGIN RSA PRIVATE KEY-----
  ##       ...
  ##       -----END RSA PRIVATE KEY-----
  ##     certificate: |-
  ##       -----BEGIN CERTIFICATE-----
  ##       ...
  ##       -----END CERTIFICATE-----
  ##
  secrets: []
  ## @param ingress.extraRules Additional rules to be covered with this ingress record
  ## ref: https://kubernetes.io/docs/concepts/services-networking/ingress/#ingress-rules
  ## e.g:
  ## extraRules:
  ## - host: example.local
  ##     http:
  ##       path: /
  ##       backend:
  ##         service:
  ##           name: example-svc
  ##           port:
  ##             name: http
  ##
  extraRules: []

enabledLogs:
  - running
