apiVersion: dataprotection.kubeblocks.io/v1alpha1
kind: ActionSet
metadata:
  name: mongodb-physical-backup
  labels:
    clusterdefinition.kubeblocks.io/name: mongodb
    {{- include "mongodb.labels" . | nindent 4 }}
spec:
  env:
    - name: DATA_DIR
      value: /data/mongodb/db
  backupType: Full
  restore:
    prepareData:
      image: {{ .Values.image.registry | default "docker.io" }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}
      command:
      - sh
      - -c
      - |
        set -e
        mkdir -p ${DATA_DIR}
        res=`ls -A ${DATA_DIR}`
        data_protection_file=${DATA_DIR}/.kb-data-protection
        if [ ! -z "${res}" ] && [ ! -f ${data_protection_file} ]; then
          echo "${DATA_DIR} is not empty! Please make sure that the directory is empty before restoring the backup."
          exit 1
        fi
        touch mongodb.backup
        touch ${data_protection_file} && sync
        tar -xvf ${DP_BACKUP_DIR}/${BACKUP_NAME}.tar.gz -C ${DATA_DIR}
        rm -rf ${data_protection_file} && sync
  backup:
    backupData:
      image: {{ .Values.image.registry | default "docker.io" }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}
      command:
      - bash
      - -c
      - |
        {{- .Files.Get "dataprotection/backup-info-collector.sh" | nindent 8 }}

        if [ -d ${DP_BACKUP_DIR} ]; then
          rm -rf ${DP_BACKUP_DIR}
        fi
        mkdir -p ${DP_BACKUP_DIR} && cd ${DATA_DIR}
        START_TIME=`get_current_time`
        # TODO: flush data and locked write, otherwise data maybe inconsistent
        # tar -czvf ${DP_BACKUP_DIR}/${BACKUP_NAME}.tar.gz ./
        rm -rf mongodb.backup
        # stat and save the backup information
        stat_and_save_backup_info $START_TIME
