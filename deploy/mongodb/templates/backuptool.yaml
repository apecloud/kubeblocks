apiVersion: dataprotection.kubeblocks.io/v1alpha1
kind: BackupTool
metadata:
  name: mongodb-physical-backup-tool
  labels:
    clusterdefinition.kubeblocks.io/name: mongodb
    {{- include "mongodb.labels" . | nindent 4 }}
spec:
  image: {{ .Values.image.registry | default "docker.io" }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}
  deployKind: job
  env:
    - name: DATA_DIR
      value: /data/mongodb/db
  physical:
    restoreCommands:
      - |
        set -e
        mkdir -p ${DATA_DIR}
        res=`ls -A ${DATA_DIR}`
        if [ ! -z "${res}" ]; then
          echo "${DATA_DIR} is not empty! Please make sure that the directory is empty before restoring the backup."
          exit 1
        fi
        tar -xvf ${BACKUP_DIR}/${BACKUP_NAME}.tar.gz -C ${DATA_DIR}
    incrementalRestoreCommands: []
  logical:
    restoreCommands: []
    incrementalRestoreCommands: []
  backupCommands:
    - |
     mkdir -p ${BACKUP_DIR} && cd ${DATA_DIR}
     touch mongodb.backup && sync
     START_TIME=$(mongo -u ${DB_USER} -p ${DB_PASSWORD} --port 27017 -host ${DB_HOST} --authenticationDatabase admin  --eval 'db.isMaster().lastWrite.lastWriteDate.getTime()/1000' --quiet)
     START_TIME=$(date -d "@${START_TIME}" -u '+%Y-%m-%dT%H:%M:%SZ')
     tar -czvf ${BACKUP_DIR}/${BACKUP_NAME}.tar.gz ./
     rm -rf mongodb.backup
     STOP_TIME=$(mongo -u ${DB_USER} -p ${DB_PASSWORD} --port 27017 -host ${DB_HOST} --authenticationDatabase admin  --eval 'db.isMaster().lastWrite.lastWriteDate.getTime()/1000' --quiet)
     STOP_TIME=$(date -d "@${STOP_TIME}" -u '+%Y-%m-%dT%H:%M:%SZ')
     TOTAL_SIZE=$(du -shx ${BACKUP_DIR}|awk '{print $1}')
     echo "{\"totalSize\":\"$TOTAL_SIZE\",\"manifests\":{\"backupLog\":{\"startTime\":\"${START_TIME}\",\"stopTime\":\"${STOP_TIME}\"},\"backupTool\":{\"uploadTotalSize\":\"${TOTAL_SIZE}\"}}}" > ${BACKUP_DIR}/backup.info
  incrementalBackupCommands: []
