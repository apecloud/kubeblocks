apiVersion: dataprotection.kubeblocks.io/v1alpha1
kind: BackupTool
metadata:
  name: mongodb-physical-backup-tool
  labels:
    clusterdefinition.kubeblocks.io/name: mongodb
    {{- include "mongodb.labels" . | nindent 4 }}
spec:
  image: {{ .Values.image.registry | default "docker.io" }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}
  deployKind: job
  env:
    - name: DATA_DIR
      value: /data/mongodb/db
  physical:
    restoreCommands:
      - sh
      - -c
      - |
        set -e
        mkdir -p ${DATA_DIR}
        res=`ls -A ${DATA_DIR}`
        data_protection_file=${DATA_DIR}/.kb-data-protection
        if [ ! -z "${res}" ] && [ ! -f ${data_protection_file} ]; then
          echo "${DATA_DIR} is not empty! Please make sure that the directory is empty before restoring the backup."
          exit 1
        fi
        touch ${data_protection_file} && sync
        tar -xvf ${BACKUP_DIR}/${BACKUP_NAME}.tar.gz -C ${DATA_DIR}
        rm -rf ${data_protection_file} && sync
    incrementalRestoreCommands: []
  logical:
    restoreCommands: []
    incrementalRestoreCommands: []
  backupCommands:
    - bash
    - -c
    - |
     if [ -d ${BACKUP_DIR} ]; then
       rm -rf ${BACKUP_DIR}
     fi
     mkdir -p ${BACKUP_DIR} && cd ${DATA_DIR}
     touch mongodb.backup && sync
     {{- .Files.Get "dataprotection/backup-info-collector.sh" | nindent 6 }}

     START_TIME=`get_current_time`
     # TODO: flush data and locked write, otherwise data maybe inconsistent
     tar -czvf ${BACKUP_DIR}/${BACKUP_NAME}.tar.gz ./
     rm -rf mongodb.backup

     # stat and save the backup information
     stat_and_save_backup_info $START_TIME
  incrementalBackupCommands: []
