apiVersion: apps.kubeblocks.io/v1alpha1
kind: ClusterDefinition
metadata:
  name: mongodb
  labels:
    {{- include "mongodb.labels" . | nindent 4 }}
spec:
  type: mongodb
  connectionCredential:
    username: root
    password: {{ (include "mongodb.password" .) | quote  }}
    endpoint: "$(SVC_FQDN):$(SVC_PORT_mongodb)"
    host: "$(SVC_FQDN)"
    port: "$(SVC_PORT_mongodb)"
    headlessEndpoint: "$(KB_CLUSTER_COMP_NAME)-0.$(HEADLESS_SVC_FQDN):$(SVC_PORT_mongodb)"
    headlessHost: "$(KB_CLUSTER_COMP_NAME)-0.$(HEADLESS_SVC_FQDN)"
    headlessPort: "$(SVC_PORT_mongodb)"
  componentDefs:
    - name: mongodb
      characterType: mongodb
      scriptSpecs:
        - name: mongodb-scripts
          templateRef: mongodb-scripts
          volumeName: scripts
          namespace: {{ .Release.Namespace }}
          defaultMode: 0555
      configSpecs:
        - name: mongodb-config
          templateRef: mongodb5.0-config-template
          namespace: {{ .Release.Namespace }}
          volumeName: mongodb-config
          constraintRef: mongodb-config-constraints
          keys:
            - mongodb.conf
          defaultMode: 256
        - name: mongodb-metrics-config-new
          templateRef: mongodb-metrics-config-new
          namespace: {{ .Release.Namespace }}
          volumeName: mongodb-metrics-config
          defaultMode: 0444
      monitor:
        builtIn: false
        exporterConfig:
          scrapePath: /metrics
          scrapePort: 9216
      logConfigs:
        {{- range $name,$pattern := .Values.logConfigs }}
        - name: {{ $name }}
          filePathPattern: {{ $pattern }}
        {{- end }}
      workloadType: Consensus
      consensusSpec:
        leader:
          name: "primary"
          accessMode: ReadWrite
        followers:
          - name: "secondary"
            accessMode: Readonly
        updateStrategy: Serial
      rsmSpec:
        memberUpdateStrategy: Serial
        roles:
        - accessMode: ReadWrite
          canVote: true
          isLeader: true
          name: primary
        - accessMode: Readonly
          canVote: true
          isLeader: false
          name: secondary
      probes:
        roleProbeTimeoutAfterPodsReady: 300
        roleProbe:
          failureThreshold: {{ .Values.roleProbe.failureThreshold }}
          periodSeconds: {{ .Values.roleProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.roleProbe.timeoutSeconds }}
      switchoverSpec:
        withCandidate:
          cmdExecutorConfig:
            image: {{ .Values.image.registry | default "docker.io" }}/{{ .Values.image.repository }}:{{ default .Values.image.tag }}
            command:
              - /scripts/switchover-with-candidate.sh
          scriptSpecSelectors:
            - name: mongodb-scripts
        withoutCandidate:
          cmdExecutorConfig:
            image: {{ .Values.image.registry | default "docker.io" }}/{{ .Values.image.repository }}:{{ default .Values.image.tag }}
            command:
              - /scripts/switchover-without-candidate.sh
          scriptSpecSelectors:
            - name: mongodb-scripts
      service:
        ports:
          - name: mongodb
            protocol: TCP
            port: 27017
      volumeTypes:
        - name: data
          type: data
      podSpec:
        containers:
          - name: mongodb
            ports:
              - name: mongodb
                protocol: TCP
                containerPort: 27017
            command:
              - /scripts/replicaset-setup.sh
            env:
              - name: MONGODB_ROOT_USER
                valueFrom:
                  secretKeyRef:
                    name: $(CONN_CREDENTIAL_SECRET_NAME)
                    key: username
                    optional: false
              - name: MONGODB_ROOT_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: $(CONN_CREDENTIAL_SECRET_NAME)
                    key: password
                    optional: false
            volumeMounts:
              - mountPath: {{ .Values.dataMountPath }}
                name: data
              - mountPath: /etc/mongodb/mongodb.conf
                name: mongodb-config
                subPath: mongodb.conf
              - mountPath: /etc/mongodb/keyfile
                name: mongodb-config
                subPath: keyfile
              - name: scripts
                mountPath: /scripts
          - name: metrics
            image: {{ .Values.metrics.image.registry | default "docker.io" }}/{{ .Values.metrics.image.repository }}:{{ .Values.metrics.image.tag }}
            imagePullPolicy: {{ .Values.metrics.image.pullPolicy | quote }}
            securityContext:
              runAsNonRoot: true
              runAsUser: 1001
            env:
              - name: MONGODB_ROOT_USER
                valueFrom:
                  secretKeyRef:
                    name: $(CONN_CREDENTIAL_SECRET_NAME)
                    key: username
                    optional: false
              - name: MONGODB_ROOT_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: $(CONN_CREDENTIAL_SECRET_NAME)
                    key: password
                    optional: false
            command:
              - "/bin/agamotto"
              - "--config=/opt/conf/metrics-config.yaml"
            ports:
              - name: http-metrics
                containerPort: 9216
            volumeMounts:
              - name: mongodb-metrics-config
                mountPath: /opt/conf
