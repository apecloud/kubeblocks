apiVersion: dataprotection.kubeblocks.io/v1alpha1
kind: ActionSet
metadata:
  name: mongodb-dump-tool
  labels:
    clusterdefinition.kubeblocks.io/name: mongodb
    {{- include "mongodb.labels" . | nindent 4 }}
spec:
  env:
    - name: DATA_DIR
      value: /data/mongodb/db
  restore:
    postReady:
    - job:
        image: {{ .Values.image.registry | default "docker.io" }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}
        command:
        - sh
        - -c
        - |
          mongo_uri="mongodb://${DP_DB_HOST}:27017"
          for dir_name in $(ls ${DP_BACKUP_DIR} -l | grep ^d | awk '{print $9}'); do
            database_dir=${DP_BACKUP_DIR}/$dir_name
            echo "INFO: restoring from ${database_dir}"
            mongorestore --uri ${mongo_uri} -u ${MONGODB_ROOT_USER} -p ${MONGODB_ROOT_PASSWORD} -d $dir_name --authenticationDatabase admin ${database_dir}
          done
  backup:
    backupData:
      image: {{ .Values.image.registry | default "docker.io" }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}
      command
      - bash
      - -c
      - |
        if [ -d ${DP_BACKUP_DIR} ]; then
          rm -rf ${DP_BACKUP_DIR}
        fi
        mkdir -p ${DP_BACKUP_DIR}
        {{- .Files.Get "dataprotection/backup-info-collector.sh" | nindent 8 }}

        # TODO: support endpoint env for sharding cluster.
        mongo_uri="mongodb://${DP_DB_HOST}:27017"
        START_TIME=`get_current_time`
        mongodump --uri ${mongo_uri} -u ${DP_DB_USER} -p ${DP_DB_PASSWORD} --authenticationDatabase admin --out ${DP_BACKUP_DIR}

        # stat and save the backup information
        stat_and_save_backup_info $START_TIME