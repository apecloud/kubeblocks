apiVersion: v1
kind: ConfigMap
metadata:
  name: mongodb-scripts
  labels:
    {{- include "mongodb.labels" . | nindent 4 }}
data:
  mongos-setup.sh: |-
    #!/bin/sh
    
    PORT=27018 
    CONFIG_SVR_NAME=$KB_CLUSTER_NAME"-configsvr"
    DOMAIN=$CONFIG_SVR_NAME"-headless."$KB_NAMESPACE".svc.cluster.local"
    mongos --bind_ip_all --configdb $CONFIG_SVR_NAME/$CONFIG_SVR_NAME"-0."$DOMAIN:$PORT,$CONFIG_SVR_NAME"-1."$DOMAIN:$PORT,$CONFIG_SVR_NAME"-2."$DOMAIN:$PORT
  replicaset-setup.sh: |-
    {{- .Files.Get "scripts/replicaset-setup.tpl" | nindent 4 }}
  replicaset-post-start.sh: |-
    {{- .Files.Get "scripts/replicaset-post-start.tpl" | nindent 4 }}
  backup-log-collector.sh: |-
    {{- .Files.Get "scripts/backup-log-collector.tpl" | nindent 4 }}
  shard-agent.sh: |-
    #!/bin/sh
    
    INDEX=$(echo $KB_POD_NAME | grep -o "\-[0-9]\+\$");
    INDEX=${INDEX#-};
    if [ $INDEX -ne 0 ]; then
      trap : TERM INT; (while true; do sleep 1000; done) & wait
    fi

    # wait main container ready
    PORT=27018
    until mongosh --quiet --port $PORT --eval "rs.status().ok"; do sleep 1; done
    # add shard to mongos
    SHARD_NAME=$(echo $KB_POD_NAME | grep -o ".*-");
    SHARD_NAME=${SHARD_NAME%-};
    DOMAIN=$SHARD_NAME"-headless."$KB_NAMESPACE".svc.cluster.local"
    MONGOS_HOST=$KB_CLUSTER_NAME"-mongos"
    MONGOS_PORT=27017
    SHARD_CONFIG=$SHARD_NAME/$SHARD_NAME"-0."$DOMAIN:$PORT,$SHARD_NAME"-1."$DOMAIN:$PORT,$SHARD_NAME"-2."$DOMAIN:$PORT
    until mongosh --quiet --host $MONGOS_HOST --port $MONGOS_PORT --eval "print('service is ready')"; do sleep 1; done
    mongosh --quiet --host $MONGOS_HOST --port $MONGOS_PORT --eval "sh.addShard(\"$SHARD_CONFIG\")"

    trap : TERM INT; (while true; do sleep 1000; done) & wait
