apiVersion: apps.kubeblocks.io/v1alpha1
kind: ClusterDefinition
metadata:
  name: mongodb-sharding
  labels:
    {{- include "mongodb.labels" . | nindent 4 }}
spec:
  type: mongodb
  connectionCredential:
    username: root
    password: {{ (include "mongodb.password" .) | quote  }}
    endpoint: "$(SVC_FQDN):$(SVC_PORT_tcp-monogdb)"
    host: "$(SVC_FQDN)"
    port: "$(SVC_PORT_tcp-monogdb)"
    headlessEndpoint: "$(KB_CLUSTER_COMP_NAME)-0.$(HEADLESS_SVC_FQDN):$(SVC_PORT_tcp-monogdb)"
    headlessHost: "$(POD_NAME_PREFIX)-0.$(HEADLESS_SVC_FQDN)"
    headlessPort: "$(SVC_PORT_tcp-monogdb)"
  componentDefs:
    - name: mongos
      scriptSpecs:
        - name: mongodb-scripts
          templateRef: mongodb-sharding-scripts
          volumeName: scripts
          namespace: {{ .Release.Namespace }}
          defaultMode: 493
      workloadType: Stateless
      service:
        ports:
          - name: mongos
            port: 27017
            targetPort: mongos
      podSpec:
        containers:
          - name: mongos
            ports:
              - name: mongos
                containerPort: 27017
            command:
              - /scripts/mongos-setup.sh
            volumeMounts:
              - name: scripts
                mountPath: /scripts/mongos-setup.sh
                subPath: mongos-setup.sh
    - name: configsvr
      scriptSpecs:
        - name: mongodb-scripts
          templateRef: mongodb-sharding-scripts
          volumeName: scripts
          namespace: {{ .Release.Namespace }}
          defaultMode: 493
      characterType: mongodb
      workloadType: Consensus
      consensusSpec:
        leader:
          name: "primary"
          accessMode: ReadWrite
        followers:
          - name: "secondary"
            accessMode: Readonly
        updateStrategy: Serial
      probes:
        roleProbe:
          failureThreshold: {{ .Values.roleProbe.failureThreshold }}
          periodSeconds: {{ .Values.roleProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.roleProbe.timeoutSeconds }}
      service:
        ports:
          - name: configsvr
            port: 27018
            targetPort: configsvr
      podSpec:
        containers:
          - name: configsvr
            ports:
              - name: configsvr
                containerPort: 27018
            command:
              - /scripts/replicaset-setup.sh
              - --configsvr
            lifecycle:
              postStart:
                exec:
                  command:
                    - /scripts/replicaset-post-start.sh
                    - CONFIGSVR
                    - "true"
            volumeMounts:
              - name: scripts
                mountPath: /scripts/replicaset-setup.sh
                subPath: replicaset-setup.sh
              - name: scripts
                mountPath: /scripts/replicaset-post-start.sh
                subPath: replicaset-post-start.sh
    - name: shard
      scriptSpecs:
        - name: mongodb-scripts
          templateRef: mongodb-sharding-scripts
          volumeName: scripts
          namespace: {{ .Release.Namespace }}
          defaultMode: 493
      characterType: mongodb
      workloadType: Consensus
      consensusSpec:
        leader:
          name: "primary"
          accessMode: ReadWrite
        followers:
          - name: "secondary"
            accessMode: Readonly
        updateStrategy: BestEffortParallel
      probes:
        roleProbe:
          failureThreshold: {{ .Values.roleProbe.failureThreshold }}
          periodSeconds: {{ .Values.roleProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.roleProbe.timeoutSeconds }}
      service:
        ports:
          - name: shard
            port: 27018
            targetPort: shard
      podSpec:
        containers:
          - name: shard
            ports:
              - name: shard
                containerPort: 27018
            command:
              - /scripts/replicaset-setup.sh
              - --shardsvr
            lifecycle:
              postStart:
                exec:
                  command:
                    - /scripts/replicaset-post-start.sh
                    - SHARD
                    - "false"
            volumeMounts:
              - name: scripts
                mountPath: /scripts/replicaset-setup.sh
                subPath: replicaset-setup.sh
              - name: scripts
                mountPath: /scripts/replicaset-post-start.sh
                subPath: replicaset-post-start.sh
          - name: agent
            command:
              - /scripts/shard-agent.sh
            volumeMounts:
              - name: scripts
                mountPath: /scripts/shard-agent.sh
                subPath: shard-agent.sh
