apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: network-attachment-definitions.k8s.cni.cncf.io
spec:
  group: k8s.cni.cncf.io
  names:
    kind: NetworkAttachmentDefinition
    plural: network-attachment-definitions
    shortNames:
    - net-attach-def
    singular: network-attachment-definition
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: 'NetworkAttachmentDefinition is a CRD schema specified by the
          Network Plumbing Working Group to express the intent for attaching pods
          to one or more logical or physical networks. More information available
          at: https://github.com/k8snetworkplumbingwg/multi-net-spec'
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this represen
              tation of an object. Servers should convert recognized schemas to the
              latest internal value, and may reject unrecognized values. More info:
              https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: NetworkAttachmentDefinition spec defines the desired state
              of a network attachment
            properties:
              config:
                description: NetworkAttachmentDefinition config is a JSON-formatted
                  CNI configuration
                type: string
            type: object
        type: object
    served: true
    storage: true
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: multus
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: multus
rules:
- apiGroups:
  - k8s.cni.cncf.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - pods
  - pods/status
  verbs:
  - get
  - update
- apiGroups:
  - ""
  - events.k8s.io
  resources:
  - events
  verbs:
  - create
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: multus
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: multus
subjects:
- kind: ServiceAccount
  name: multus
  namespace: kube-system
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app: multus
    name: multus
    tier: node
  name: kube-multus-ds
  namespace: kube-system
spec:
  selector:
    matchLabels:
      name: multus
  template:
    metadata:
      labels:
        app: multus
        name: multus
        tier: node
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                - amd64
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
      containers:
      - args:
        - -cni-version=0.3.1
        - -cni-config-dir=/host/etc/cni/net.d
        - -multus-autoconfig-dir=/host/etc/cni/net.d
        - -multus-log-to-stderr=true
        - -multus-log-level=verbose
        command:
        - /usr/src/multus-cni/bin/multus-daemon
        image: ghcr.io/k8snetworkplumbingwg/multus-cni:v3.9.2-thick-amd64
        name: kube-multus
        resources:
          limits:
            cpu: 100m
            memory: 50Mi
          requests:
            cpu: 100m
            memory: 50Mi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /host/etc/cni/net.d
          name: cni
        - mountPath: /host/opt/cni/bin
          name: cnibin
      hostNetwork: true
      initContainers:
      - command:
        - cp
        - /usr/src/multus-cni/bin/multus
        - /host/opt/cni/bin/multus
        image: ghcr.io/k8snetworkplumbingwg/multus-cni:v3.9.2-thick-amd64
        name: install-multus-binary
        resources:
          requests:
            cpu: 10m
            memory: 15Mi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          mountPropagation: Bidirectional
          name: cnibin
      - args:
        - -k8s-service-host=$(KUBERNETES_SERVICE_HOST)
        - -k8s-service-port=$(KUBERNETES_SERVICE_PORT)
        command:
        - /usr/src/multus-cni/bin/generate-kubeconfig
        image: ghcr.io/k8snetworkplumbingwg/multus-cni:v3.9.2-thick-amd64
        name: generate-kubeconfig
        resources:
          requests:
            cpu: 10m
            memory: 15Mi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /host/etc/cni/net.d
          mountPropagation: Bidirectional
          name: cni
      serviceAccountName: multus
      terminationGracePeriodSeconds: 10
      tolerations:
      - effect: NoSchedule
        operator: Exists
      - effect: NoExecute
        operator: Exists
      volumes:
      - hostPath:
          path: /etc/cni/net.d
        name: cni
      - hostPath:
          path: /opt/cni/bin
        name: cnibin
  updateStrategy:
    type: RollingUpdate
