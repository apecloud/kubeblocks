apiVersion: apps.kubeblocks.io/v1alpha1
kind: ClusterDefinition
metadata:
  name: openldap
  labels:
    {{- include "openldap.labels" . | nindent 4 }}
spec:
  connectionCredential:
    endpoint: "$(SVC_FQDN):$(SVC_PORT_ldap)"
    host: "$(SVC_FQDN)"
    port: "$(SVC_PORT_ldap)"
  componentDefs:
    - name: openldap-compdef
      characterType: openldap
      workloadType: Stateful
      service:
        ports:
          - name: ldap
            port: {{ .Values.service.port }}
            targetPort: ldap
      podSpec:
        containers:
          - name: openldap-container
            imagePullPolicy: IfNotPresent
            volumeMounts:
              - mountPath: /var/lib/ldap
                name: openldap
                subPath: ldap-data
              - mountPath: /etc/ldap/slapd.d
                name: openldap
                subPath: ldap-config
            ports:
              - containerPort: 389
                name: ldap
            lifecycle:
              postStart:
                exec:
                  command:
                    - bin/sh
                    - -c
                    - |
                      if [ $KB_REPLICA_COUNT -gt 1 ]; then
                        export LDAP_REPLICATION_CONFIG_SYNCPROV="binddn=\"cn=admin,cn=config\" bindmethod=simple credentials=$LDAP_CONFIG_PASSWORD searchbase=\"cn=config\" type=refreshAndPersist retry=\"60 +\" timeout=1"
                        export LDAP_REPLICATION_DB_SYNCPROV="binddn=\"cn=admin,$LDAP_BASE_DN\" bindmethod=simple credentials=$LDAP_ADMIN_PASSWORD searchbase=\"$LDAP_BASE_DN\" type=refreshAndPersist interval=01:00:00:10 retry=\"60 +\" timeout=1"
                        export LDAP_REPLICATION_HOSTS="#PYTHON2BASH:['ldap://${KB_CLUSTER_NAME}-${KB_COMP_NAME}-0.${KB_CLUSTER_NAME}-${KB_COMP_NAME}-headless', 'ldap://${KB_CLUSTER_NAME}-.${KB_COMP_NAME}-1.${KB_CLUSTER_NAME}-${KB_COMP_NAME}-headless']"
                      fi
            env:
              - name: LDAP_ORGANISATION
                value: "{{ .Values.ldap.organisation }}"
              - name: LDAP_DOMAIN
                value: "{{ .Values.ldap.domain }}"
              - name: LDAP_CONFIG_PASSWORD
                value: "{{ .Values.ldap.adminPassword }}"
              - name: LDAP_ADMIN_PASSWORD
                value: "{{ .Values.ldap.adminPassword }}"
              - name: LDAP_REPLICATION
                value: "{{ .Values.ldap.replication }}"
              - name: LDAP_TLS
                value: "false"
              - name: LDAP_REMOVE_CONFIG_AFTER_SETUP
                value: "false"
              - name: MY_POD_NAME
                valueFrom:
                  fieldRef:
                    fieldPath: metadata.name