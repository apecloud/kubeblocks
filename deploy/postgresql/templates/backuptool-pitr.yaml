apiVersion: dataprotection.kubeblocks.io/v1alpha1
kind: BackupTool
metadata:
  labels:
    clusterdefinition.kubeblocks.io/name: postgresql
    kubeblocks.io/backup-tool-type: pitr
    {{- include "postgresql.labels" . | nindent 4 }}
  name: postgres-pitr
spec:
  backupCommands: []
  deployKind: job
  env:
    - name: VOLUME_DATA_DIR
      value: /home/postgres/pgdata
    - name: VOLUME_LOG_DIR
      value: /home/postgres/pgwal
    - name: RESTORE_DATA_DIR
      value: "$(VOLUME_DATA_DIR)/kb_restore"
    - name: PITR_DIR
      value: "$(VOLUME_DATA_DIR)/pitr"
    - name: DATA_DIR
      value: "$(VOLUME_DATA_DIR)/pgroot/data"
    - name: CONF_DIR
      value: "$(VOLUME_DATA_DIR)/conf"
    - name: LOG_DIR
      value: "$(VOLUME_LOG_DIR)/pgroot/data/pg_wal"
    - name: RECOVERY_TIME
      value: $KB_RECOVERY_TIME
    - name: TIME_FORMAT
      value: 2006-01-02 15:04:05 MST
  image: alpine:3.17
  logical:
    restoreCommands:
      - |
        set -e;
        rm -f ${CONF_DIR}/recovery.conf;
        rm -rf ${DATA_DIR}.old;
        rm -rf ${DATA_DIR}.failed;
  physical:
    restoreCommands:
      - |
        set -e;
        mkdir -p ${PITR_DIR};
        cp -R $LOG_DIR ${PITR_DIR}/;
        chmod 777 -R ${PITR_DIR};
        touch ${DATA_DIR}/recovery.signal;
        mkdir -p ${CONF_DIR};
        chmod 777 -R ${CONF_DIR};
        mkdir -p ${RESTORE_DATA_DIR};
        echo "cp -R ${DATA_DIR}.old ${DATA_DIR}" > ${RESTORE_DATA_DIR}/kb_restore.sh;
        echo -e "restore_command=mv ${PITR_DIR}/pg_wal/%f %p\nrecovery_target_time=${RECOVERY_TIME}\nrecovery_target_action=promote" > ${CONF_DIR}/recovery.conf;
        mv ${DATA_DIR} ${DATA_DIR}.old;
        sync;
  type: pitr