apiVersion: dataprotection.kubeblocks.io/v1alpha1
kind: BackupTool
metadata:
  name: postgres-basebackup
  labels:
    clusterdefinition.kubeblocks.io/name: postgresql
    {{- include "postgresql.labels" . | nindent 4 }}
spec:
  image: {{ .Values.image.registry | default "docker.io" }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}
  deployKind: job
  resources:
    limits:
      cpu: "1"
      memory: 2Gi
    requests:
      cpu: "1"
      memory: 128Mi
  env:
    - name: RESTORE_DATA_DIR
      value: /home/postgres/pgdata/kb_restore
    - name: TMP_DATA_DIR
      value: /home/postgres/pgdata/kb_restore/tmp_data
    - name: TMP_ARCH_DATA_DIR
      value: /home/postgres/pgdata/kb_restore/arch
    - name: DATA_DIR
      value: /home/postgres/pgdata/pgroot/data
  physical:
    restoreCommands:
      - |
        #!/bin/sh
        set -e
        # create a new directory for restore
        mkdir -p ${RESTORE_DATA_DIR} && rm -rf ${RESTORE_DATA_DIR}/*
        cd ${RESTORE_DATA_DIR}
        touch kb_restore.sh && touch kb_restore.signal
        echo "mkdir -p ${DATA_DIR}/../arch" >> kb_restore.sh
        echo "mv -f ${TMP_DATA_DIR}/* ${DATA_DIR}/" >> kb_restore.sh
        echo "mv -f ${TMP_ARCH_DATA_DIR}/* ${DATA_DIR}/../arch" >> kb_restore.sh
        echo "rm -rf ${RESTORE_DATA_DIR}" >> kb_restore.sh

        # extract the data file to the temporary data directory
        mkdir -p ${TMP_DATA_DIR} && mkdir -p ${TMP_ARCH_DATA_DIR}
        rm -rf ${TMP_ARCH_DATA_DIR}/* && rm -rf ${TMP_DATA_DIR}/*
        cd ${BACKUP_DIR}/${BACKUP_NAME}
        tar -xvf base.tar.gz -C ${TMP_DATA_DIR}/
        tar -xvf pg_wal.tar.gz -C ${TMP_ARCH_DATA_DIR}/
        echo "done!"
    incrementalRestoreCommands: []
  logical:
    restoreCommands: []
    incrementalRestoreCommands: []
  backupCommands:
    - >
      set -e;
      mkdir -p ${BACKUP_DIR}/${BACKUP_NAME}/;
      echo ${DB_PASSWORD} | pg_basebackup -Ft -Pv -Xs -z -D ${BACKUP_DIR}/${BACKUP_NAME} -Z5 -h ${DB_HOST} -U standby -W;
  incrementalBackupCommands: []
