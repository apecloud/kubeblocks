rule_files:
  - /etc/config-rule/recording_rules.yml
  - /etc/config-rule/alerting_rules.yml
  - /etc/config-rule/mysql_alert_rules.yml
  - /etc/config-rule/postgresql_alert_rules.yml
  - /etc/config-rule/redis_alert_rules.yml
  - /etc/config-rule/kafka_alert_rules.yml
  - /etc/config-rule/mongodb_alert_rules.yml

scrape_configs:
  - job_name: prometheus
    static_configs:
      - targets:
          - localhost:9090

  # Scrape config for kubeblocks managed service endpoints.
  #
  # The relabeling allows the actual service scrape endpoint to be configured
  # via the following annotations:
  #
  # * `monitor.kubeblocks.io/scrape`: Only scrape services that have a value of
  # `true`.
  # * `monitor.kubeblocks.io/scheme`: If the metrics endpoint is secured then you will need
  # to set this to `https` & most likely set the `tls_config` of the scrape config.
  # * `monitor.kubeblocks.io/path`: If the metrics path is not `/metrics` override this.
  # * `monitor.kubeblocks.io/port`: If the metrics are exposed on a different port to the
  # service then set this appropriately.
  # * `monitor.kubeblocks.io/param_<parameter>`: If the metrics endpoint uses parameters
  # then you can set any parameter
  - job_name: 'kubeblocks-service'
    honor_labels: true

    kubernetes_sd_configs:
      - role: endpoints

    relabel_configs:
      - source_labels: [ __meta_kubernetes_service_label_app_kubernetes_io_managed_by ]
        action: keep
        regex: kubeblocks
      - source_labels: [ __meta_kubernetes_service_label_monitor_kubeblocks_io_managed_by ]
        action: drop
        regex: agamotto
      - source_labels: [ __meta_kubernetes_service_annotation_monitor_kubeblocks_io_scrape ]
        action: keep
        regex: true
      - source_labels: [ __meta_kubernetes_service_annotation_monitor_kubeblocks_io_scheme ]
        action: replace
        target_label: __scheme__
        regex: (https?)
      - source_labels: [ __meta_kubernetes_service_annotation_monitor_kubeblocks_io_path ]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      - source_labels: [ __address__, __meta_kubernetes_service_annotation_monitor_kubeblocks_io_port ]
        action: replace
        target_label: __address__
        regex: (.+?)(?::\d+)?;(\d+)
        replacement: $1:$2
      - action: labelmap
        regex: __meta_kubernetes_service_annotation_monitor_kubeblocks_io_param_(.+)
        replacement: __param_$1
      - action: labelmap
        regex: __meta_kubernetes_service_label_(.+)
      - source_labels: [ __meta_kubernetes_namespace ]
        action: replace
        target_label: namespace
      - source_labels: [ __meta_kubernetes_service_name ]
        action: replace
        target_label: service
      - source_labels: [ __meta_kubernetes_pod_node_name ]
        action: replace
        target_label: node
      - source_labels: [ __meta_kubernetes_pod_name ]
        action: replace
        target_label: pod
      - source_labels: [ __meta_kubernetes_pod_phase ]
        regex: Pending|Succeeded|Failed|Completed
        action: drop

  - job_name: 'kubeblocks-agamotto'
    honor_labels: true

    kubernetes_sd_configs:
      - role: endpoints

    relabel_configs:
      - source_labels: [ __meta_kubernetes_service_label_monitor_kubeblocks_io_managed_by ]
        action: keep
        regex: agamotto
      - source_labels: [ __meta_kubernetes_service_annotation_monitor_kubeblocks_io_scrape ]
        action: keep
        regex: true
      - source_labels: [ __meta_kubernetes_service_annotation_monitor_kubeblocks_io_scheme ]
        action: replace
        target_label: __scheme__
        regex: (https?)
      - source_labels: [ __meta_kubernetes_service_annotation_monitor_kubeblocks_io_path ]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      - source_labels: [ __address__, __meta_kubernetes_service_annotation_monitor_kubeblocks_io_port ]
        action: replace
        target_label: __address__
        regex: (.+?)(?::\d+)?;(\d+)
        replacement: $1:$2
      - action: labelmap
        regex: __meta_kubernetes_service_annotation_monitor_kubeblocks_io_param_(.+)
        replacement: __param_$1
      - source_labels: [ __meta_kubernetes_pod_phase ]
        regex: Pending|Succeeded|Failed|Completed
        action: drop

