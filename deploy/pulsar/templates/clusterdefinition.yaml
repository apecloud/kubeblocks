apiVersion: apps.kubeblocks.io/v1alpha1
kind: ClusterDefinition
metadata:
  name: pulsar
  labels:
    {{- include "pulsar.labels" . | nindent 4 }}
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  type: pulsar
  connectionCredential:
    username: "admin"
    admin-password: "$(RANDOM_PASSWD)"
    endpoint: "http://$(SVC_FQDN):$(SVC_PORT_http)"
    tcpEndpoint: "$(SVC_FQDN):$(SVC_PORT_tcp)"
    mysqlEndpoint: "$(SVC_FQDN):$(SVC_PORT_tcp-mysql)"
    pgEndpoint: "$(SVC_FQDN):$(SVC_PORT_tcp-postgresql)"
  componentDefs:
    - name: bookies-bk
      workloadType: Stateful
      characterType: bookies
      statefulSpec:
        updateStrategy: BestEffortParallel
      configSpecs:
        - name: bookies-bk-config
          templateRef: bookies-bk-config
          namespace: {{ .Release.Namespace }}
          volumeName: bookies-bk-config
      podSpec:
        initContainers:
          - args:
            - |
              echo "waiting zookeeper ready..."
              zkDomain="${zkServers%%:*}"
              until nslookup $zkDomain; do
                sleep 3;
              done;
              echo "zk is ready, start to config bookkeeper..."
              bin/apply-config-from-env.py conf/bookkeeper.conf;
              if bin/bookkeeper shell whatisinstanceid; then
                echo "bookkeeper cluster already initialized";
              else
                echo "bookkeeper init new cluster."
                bin/bookkeeper shell initnewcluster;
              fi
              echo "verify bookkeeper cluster id"
              bin/apply-config-from-env.py conf/bookkeeper.conf;until bin/bookkeeper shell whatisinstanceid; do
                sleep 3;
              done; bin/bookkeeper shell bookieformat -nonInteractive -force -deleteCookie || true
            command:
              - sh
              - -c
            envFrom:
              - configMapRef:
                  name: pulsar-pulsar-cluster-bookies-bookies-bk-config
            image: apachepulsar/pulsar:2.11.1
            imagePullPolicy: IfNotPresent
            name: pulsar-bookkeeper-verify-clusterid
            resources: { }
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
        containers:
          - args:
            - |
              bin/apply-config-from-env.py conf/bookkeeper.conf;
              OPTS="${OPTS} -Dlog4j2.formatMsgNoLookups=true" exec bin/pulsar bookie;
            command:
              - bash
              - -c
            envFrom:
              - configMapRef:
                  ## name: bookies-bk-config
                  name: pulsar-pulsar-cluster-bookies-bookies-bk-config
            ## image: streamnative/sn-platform-slim:2.10.3.4
            image: apachepulsar/pulsar:2.11.1
            imagePullPolicy: IfNotPresent
            livenessProbe:
              failureThreshold: 60
              httpGet:
                path: /api/v1/bookie/state
                port: 8000
                scheme: HTTP
              initialDelaySeconds: 10
              periodSeconds: 30
              successThreshold: 1
              timeoutSeconds: 5
            name: bookie
            ports:
              - containerPort: 8000
                name: http
                protocol: TCP
              - containerPort: 3181
                name: bookie
                protocol: TCP
            readinessProbe:
              failureThreshold: 60
              httpGet:
                path: /api/v1/bookie/is_ready
                port: 8000
                scheme: HTTP
              initialDelaySeconds: 10
              periodSeconds: 30
              successThreshold: 1
              timeoutSeconds: 5
            resources:
              requests:
                cpu: 200m
                memory: 512Mi
            securityContext:
              runAsUser: 0
              fsGroup: 10000
              runAsGroup: 10000
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
              - mountPath: /pulsar/data/bookkeeper/journal-0
                name: journal-0
              - mountPath: /pulsar/data/bookkeeper/ledgers-0
                name: ledgers-0
    - name: zookeeper
      workloadType: Stateful
      characterType: zookeeper
      statefulSpec:
        updateStrategy: BestEffortParallel
      monitor:
        builtIn: false
        exporterConfig:
          scrapePath: /metrics
          scrapePort: 9141
      logConfigs:
        {{- range $name,$pattern := .Values.zookeeper.logConfigs }}
        - name: {{ $name }}
          filePathPattern: {{ $pattern }}
        {{- end }}
      configSpecs:
        - name: zookeepers-zk-config
          templateRef: zookeepers-zk-config
          namespace: {{ .Release.Namespace }}
          volumeName: zookeepers-zk-config
      service:
        ports:
          - name: client
            port: 2181
            targetPort: client
          - name: metrics
            port: 9141
            targetPort: metrics
      podSpec:
        securityContext:
          fsGroup: 0
          runAsGroup: 0
          runAsNonRoot: true
          runAsUser: 10000
        containers:
          - command:
              - bash
              - -c
            args:
              - |-
                bin/apply-config-from-env.py conf/zookeeper.conf;
                bin/generate-zookeeper-config.sh conf/zookeeper.conf; exec bin/pulsar zookeeper;
            env:
              - name: EXTERNAL_PROVIDED_SERVERS
                value: "false"
              - name: OPTS
                value: "-Dlog4j2.formatMsgNoLookups=true -XshowSettings:vm -XX:MaxRAMPercentage=100 -Ddepth=64"
            envFrom:
              - configMapRef:
                  ## name: zookeepers-zk-config
                  name: pulsar-pulsar-cluster-zookeeper-zookeepers-zk-config
            image: apachepulsar/pulsar:2.11.1
            imagePullPolicy: IfNotPresent
            lifecycle: {}
            livenessProbe:
              exec:
                command:
                  - timeout
                  - "30"
                  - bash
                  - -c
                  - echo ruok | nc -q 1 localhost 2181 | grep imok
              failureThreshold: 10
              initialDelaySeconds: 20
              periodSeconds: 30
              successThreshold: 1
              timeoutSeconds: 30
            name: zookeeper
            ports:
              - containerPort: 2181
                name: client
                protocol: TCP
              - containerPort: 2888
                name: tcp-quorum
                protocol: TCP
              - containerPort: 3888
                name: tcp-election
                protocol: TCP
              - containerPort: 9141
                name: metrics
                protocol: TCP
              - containerPort: 9990
                name: http-admin
                protocol: TCP
            readinessProbe:
              exec:
                command:
                  - timeout
                  - "30"
                  - bash
                  - -c
                  - echo ruok | nc -q 1 localhost 2181 | grep imok
              failureThreshold: 10
              initialDelaySeconds: 20
              periodSeconds: 30
              successThreshold: 1
              timeoutSeconds: 30
            resources:
              requests:
                cpu: 50m
                memory: 256Mi
            securityContext:
              allowPrivilegeEscalation: false
              capabilities:
                drop:
                  - ALL
              privileged: false
              runAsGroup: 0
              runAsNonRoot: true
              runAsUser: 10000
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
              - mountPath: /pulsar/data
                name: data
              - mountPath: /pulsar/data-log
                name: data-log