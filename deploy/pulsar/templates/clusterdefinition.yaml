apiVersion: apps.kubeblocks.io/v1alpha1
kind: ClusterDefinition
metadata:
  name: pulsar
  labels:
    {{- include "pulsar.labels" . | nindent 4 }}
spec:
  type: pulsar
  connectionCredential:
    username: "admin"
    admin-password: "$(RANDOM_PASSWD)"
    httpEndpoint: "http://$(SVC_FQDN):$(SVC_PORT_http)"
    pulsarEndpoint: "pulsar://$(SVC_FQDN):$(SVC_PORT_pulsar)"
  componentDefs:
    - name: proxy
      workloadType: Stateful
      characterType: pulsar-proxy
      statefulSpec:
        updateStrategy: BestEffortParallel
      componentDefRef:
      - componentDefName: broker
        componentRefEnv:
        - name: brokerSVC
          valueFrom:
            type: ServiceRef
      # TODO: support monitor
      monitor:
        builtIn: false
        exporterConfig:
          scrapePath: /metrics
          scrapePort: 9141
      logConfigs:
      # TODO: refer to broker configuration
      configSpecs:
        - name: proxy-config
          templateRef: pulsar-proxy-config
          namespace: {{ .Release.Namespace }}
          volumeName: config
          keys:
            - conf
          asEnvFrom:
            - proxy
      scriptSpecs:
        - name: pulsar-scripts
          templateRef: pulsar-scripts
          namespace: {{ .Release.Namespace }}
          volumeName: scripts
          defaultMode: 0777
      service:
        ports:
        - name: pulsar
          port: 6650
          protocol: TCP
          targetPort: 6650
        - name: http
          port: 8080
          protocol: TCP
          targetPort: 8080
      podSpec:
        securityContext:
          runAsNonRoot: true
          runAsUser: 10000
          fsGroup: 0
          runAsGroup: 0
        initContainers:
          - name: check-broker
            command:
              - /kb-scripts/init-proxy.sh
            volumeMounts:
              - name: scripts
                mountPath: /kb-scripts
        containers:
          - name: proxy
            command:
              - /kb-scripts/start-proxy.sh
            securityContext:
              allowPrivilegeEscalation: false
              runAsNonRoot: true
              runAsUser: 10000
              capabilities:
                drop:
                - ALL
              privileged: false
              runAsGroup: 0
            env:
            - name: brokerWebServiceURL
              value: http://$(brokerSVC):8080
            - name: brokerServiceURL
              value: pulsar://$(brokerSVC):6650
            - name: clusterName
              value: $(KB_NAMESPACE)-$(KB_CLUSTER_COMP_NAME)
            - name: webServicePort
              value: "8080"
            ports:
            - containerPort: 6650
              name: pulsar
              protocol: TCP
            - containerPort: 6651
              name: pulsarssl
              protocol: TCP
            - containerPort: 8443
              name: https
              protocol: TCP
            - containerPort: 8080
              name: http
              protocol: TCP
            livenessProbe:
              failureThreshold: 3
              httpGet:
                path: /status.html
                port: http
                scheme: HTTP
              initialDelaySeconds: 30
              periodSeconds: 10
              successThreshold: 1
              timeoutSeconds: 100
            readinessProbe:
              failureThreshold: 3
              httpGet:
                path: /status.html
                port: http
                scheme: HTTP
              initialDelaySeconds: 30
              periodSeconds: 10
              successThreshold: 1
              timeoutSeconds: 100
            startupProbe:
              failureThreshold: 20
              httpGet:
                path: /status.html
                port: http
                scheme: HTTP
              initialDelaySeconds: 5
              periodSeconds: 10
              successThreshold: 1
              timeoutSeconds: 100
            volumeMounts:
              - name: scripts
                mountPath: /kb-scripts
    - name: broker
      workloadType: Stateful
      characterType: pulsar-broker
      statefulSpec:
        updateStrategy: BestEffortParallel
      componentDefRef:
      - componentDefName: zookeeper
        componentRefEnv:
        - name: zookeeperSVC
          valueFrom:
            type: ServiceRef
      # TODO: support monitor
      monitor:
        builtIn: false
        exporterConfig:
          scrapePath: /metrics
          scrapePort: 9141
      logConfigs:
      # TODO: refer to broker configuration
      configSpecs:
        - name: broker-interceptors
          templateRef: pulsar-broker-config
          namespace: {{ .Release.Namespace }}
          volumeName: interceptors
          keys:
            - conf
          asEnvFrom:
            - init-broker-cluster
            - broker
      scriptSpecs:
        - name: pulsar-scripts
          templateRef: pulsar-scripts
          namespace: {{ .Release.Namespace }}
          volumeName: scripts
          defaultMode: 0777
      service:
        ports:
        - name: tcp-pulsar
          port: 6650
          targetPort: 6650
        - name: http
          port: 8080
          targetPort: 8080
      podSpec:
        securityContext:
          runAsNonRoot: true
          runAsUser: 10000
          fsGroup: 0
          runAsGroup: 0
        initContainers:
          - name: init-broker-cluster
            command:
              - /kb-scripts/init-broker.sh
            env:
            - name: brokerServiceUrl
              value: pulsar://$(KB_CLUSTER_COMP_NAME).$(KB_NAMESPACE).svc.cluster.local:6650
            - name: clusterName
              value: $(KB_NAMESPACE)-$(KB_CLUSTER_COMP_NAME)
            - name: webServiceUrl
              value: http://$(KB_CLUSTER_COMP_NAME).$(KB_NAMESPACE).svc.cluster.local:8080
            - name: zookeeperServers
              value: $(zookeeperSVC):2181
            - name: configurationStoreServers
              value: $(zookeeperSVC):2181
            volumeMounts:
              - name: scripts
                mountPath: /kb-scripts
          - name: init-sysctl
            command:
              - /kb-scripts/init-broker-sysctl.sh
            securityContext:
              privileged: true
              runAsNonRoot: false
              runAsUser: 0
            volumeMounts:
              - name: scripts
                mountPath: /kb-scripts
        containers:
          - name: broker
            securityContext:
              allowPrivilegeEscalation: false
              runAsNonRoot: true
              runAsUser: 10000
              capabilities:
                drop:
                - ALL
              privileged: false
              runAsGroup: 0
            command:
              - /kb-scripts/start-broker.sh
            resources:
              requests:
                cpu: 200m
                memory: 512Mi
            env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: PULSAR_PREFIX_brokerServicePort
              value: "6650"
            - name: PULSAR_PREFIX_internalListenerName
              value: cluster
            - name: PULSAR_PREFIX_advertisedListeners
              value: cluster:pulsar://$(POD_NAME).pulsar1-broker-headless.pulsar.svc.cluster.local:6650
            - name: PULSAR_PREFIX_bindAddresses
            - name: brokerServiceUrl
              value: pulsar://$(KB_CLUSTER_COMP_NAME).$(KB_NAMESPACE).svc.cluster.local:6650
            - name: clusterName
              value: $(KB_NAMESPACE)-$(KB_CLUSTER_COMP_NAME)
            - name: webServiceUrl
              value: http://$(KB_CLUSTER_COMP_NAME).$(KB_NAMESPACE).svc.cluster.local:8080
            - name: zookeeperServers
              value: $(zookeeperSVC):2181
            - name: configurationStoreServers
              value: $(zookeeperSVC):2181
            ports:
              - containerPort: 6650
                name: tcp-pulsar
                protocol: TCP
              - containerPort: 8080
                name: http
                protocol: TCP
            livenessProbe:
              failureThreshold: 30
              httpGet:
                path: /status.html
                port: http
                scheme: HTTP
              initialDelaySeconds: 5
              periodSeconds: 10
              successThreshold: 1
              timeoutSeconds: 100
            readinessProbe:
              failureThreshold: 3
              httpGet:
                path: /status.html
                port: http
                scheme: HTTP
              initialDelaySeconds: 30
              periodSeconds: 10
              successThreshold: 1
              timeoutSeconds: 100
            startupProbe:
              failureThreshold: 30
              httpGet:
                path: /status.html
                port: http
                scheme: HTTP
              initialDelaySeconds: 5
              periodSeconds: 10
              successThreshold: 1
              timeoutSeconds: 100
            volumeMounts:
            - name: interceptors
              mountPath: /pulsar/plugin_configs/interceptors
              readOnly: true
            - name: scripts
              mountPath: /kb-scripts
    - name: bookies
      workloadType: Stateful
      characterType: bookies
      statefulSpec:
        updateStrategy: BestEffortParallel
      configSpecs:
        - name: bookies-config
          templateRef: pulsar-bookies-config
          namespace: {{ .Release.Namespace }}
          volumeName: bookies-config
          keys:
            - conf
          asEnvFrom:
            - init-bookies
            - bookies
      scriptSpecs:
        - name: pulsar-scripts
          templateRef: pulsar-scripts
          namespace: {{ .Release.Namespace }}
          volumeName: scripts
          defaultMode: 0777
      podSpec:
        initContainers:
          - name: init-bookies
            command:
              - /kb-scripts/init-bookies.sh
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
              - name: scripts
                mountPath: /kb-scripts
        containers:
          - name: bookies
            command:
              - /kb-scripts/start-bookies.sh
            livenessProbe:
              failureThreshold: 60
              httpGet:
                path: /api/v1/bookie/state
                port: 8000
                scheme: HTTP
              initialDelaySeconds: 10
              periodSeconds: 30
              successThreshold: 1
              timeoutSeconds: 5
            ports:
              - containerPort: 8000
                name: http
                protocol: TCP
              - containerPort: 3181
                name: bookie
                protocol: TCP
            readinessProbe:
              failureThreshold: 60
              httpGet:
                path: /api/v1/bookie/is_ready
                port: 8000
                scheme: HTTP
              initialDelaySeconds: 10
              periodSeconds: 30
              successThreshold: 1
              timeoutSeconds: 5
            resources:
              requests:
                cpu: 200m
                memory: 512Mi
            securityContext:
              runAsUser: 0
              runAsGroup: 10000
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
              - mountPath: /pulsar/data/bookkeeper/journal
                name: journal
              - mountPath: /pulsar/data/bookkeeper/ledgers
                name: ledgers
              - name: scripts
                mountPath: /kb-scripts
    - name: zookeeper
      workloadType: Stateful
      characterType: zookeeper
      statefulSpec:
        updateStrategy: BestEffortParallel
      monitor:
        builtIn: false
        exporterConfig:
          scrapePath: /metrics
          scrapePort: 9141
      logConfigs:
        {{- range $name,$pattern := .Values.zookeeper.logConfigs }}
        - name: {{ $name }}
          filePathPattern: {{ $pattern }}
        {{- end }}
      configSpecs:
        - name: zookeeper-config
          templateRef: pulsar-zookeeper-config
          namespace: {{ .Release.Namespace }}
          volumeName: zookeeper-config
          keys:
            - conf
          asEnvFrom:
            - zookeeper
      scriptSpecs:
        - name: pulsar-scripts
          templateRef: pulsar-scripts
          namespace: {{ .Release.Namespace }}
          volumeName: scripts
          defaultMode: 0777
      service:
        ports:
          - name: client
            port: 2181
            targetPort: client
          - name: metrics
            port: 9141
            targetPort: metrics
      podSpec:
        securityContext:
          fsGroup: 0
          runAsGroup: 0
          runAsNonRoot: true
          runAsUser: 10000
        containers:
          - name: zookeeper
            command:
              - /kb-scripts/start-zookeeper.sh
            env:
              - name: EXTERNAL_PROVIDED_SERVERS
                value: "false"
              - name: OPTS
                value: "-Dlog4j2.formatMsgNoLookups=true -XshowSettings:vm -XX:MaxRAMPercentage=100 -Ddepth=64"
            ports:
              - containerPort: 2181
                name: client
                protocol: TCP
              - containerPort: 2888
                name: tcp-quorum
                protocol: TCP
              - containerPort: 3888
                name: tcp-election
                protocol: TCP
              - containerPort: 9141
                name: metrics
                protocol: TCP
              - containerPort: 9990
                name: http-admin
                protocol: TCP
            livenessProbe:
              exec:
                command:
                  - timeout
                  - "30"
                  - bash
                  - -c
                  - echo ruok | nc -q 1 localhost 2181 | grep imok
              failureThreshold: 10
              initialDelaySeconds: 20
              periodSeconds: 30
              successThreshold: 1
              timeoutSeconds: 30
            readinessProbe:
              exec:
                command:
                  - timeout
                  - "30"
                  - bash
                  - -c
                  - echo ruok | nc -q 1 localhost 2181 | grep imok
              failureThreshold: 10
              initialDelaySeconds: 20
              periodSeconds: 30
              successThreshold: 1
              timeoutSeconds: 30
            resources:
              requests:
                cpu: 50m
                memory: 256Mi
            securityContext:
              allowPrivilegeEscalation: false
              capabilities:
                drop:
                  - ALL
              privileged: false
              runAsGroup: 0
              runAsNonRoot: true
              runAsUser: 10000
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
              - mountPath: /pulsar/data
                name: data
              - mountPath: /pulsar/data-log
                name: data-log
              - name: scripts
                mountPath: /kb-scripts