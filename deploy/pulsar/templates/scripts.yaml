apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "pulsar.name" . }}-scripts
  labels:
    {{- include "pulsar.labels" . | nindent 4 }}
data:
  init-proxy.sh: |-
    #!/bin/sh
    while [ "$(curl -s -o /dev/null -w '%{http_code}' http://${brokerSVC}:80/status.html)" -ne "200" ]; do
      echo "pulsar cluster isn't initialized yet..."; sleep 3;
    done
  start-proxy.sh: |-
    #!/bin/sh
    bin/apply-config-from-env.py conf/proxy.conf && echo 'OK' > status && exec bin/pulsar proxy
  init-broker.sh: |-
    #!/bin/sh
    set -x
    echo "INFO: wait for zookeeper ready..."
    zkDomain="${zookeeperServers%%:*}"
    until echo ruok | nc -q 1 ${zkDomain} 2181 | grep imok; do
      sleep 2;
    done;
    idx=${KB_POD_NAME##*-}
    if [ $idx -ne 0 ]; then
      # if not the first pod, do it
      until bin/bookkeeper org.apache.zookeeper.ZooKeeperMain -server ${zookeeperServers} get /admin/clusters/${clusterName}; do
        echo "INFO: wait for init the meta cluster..."
        sleep 3;
      done
      echo "INFO: cluster already initialized" && exit 0
    fi
    # if the pod is the first pod, do it
    if bin/bookkeeper org.apache.zookeeper.ZooKeeperMain -server ${zookeeperServers} get /admin/clusters/${clusterName}; then
      echo "INFO: cluster already initialized" && exit 0
    fi
    echo "INFO: init cluster metadata for cluster: ${clusterName}"
    bin/pulsar initialize-cluster-metadata \
    --cluster ${clusterName} \
    --zookeeper ${zookeeperServers} \
    --configuration-store ${zookeeperServers} \
    --web-service-url ${webServiceUrl} \
    --broker-service-url ${brokerServiceUrl}

    (curl -sf -XPOST http://127.0.0.1:15020/quitquitquit || true) && exit 0
  init-broker-sysctl.sh: |-
    #!/bin/sh
    sysctl -w net.ipv4.tcp_keepalive_time=1 && sysctl -w net.ipv4.tcp_keepalive_intvl=11 && sysctl -w net.ipv4.tcp_keepalive_probes=3
  init-bookies.sh: |-
    #!/bin/bash
    echo "waiting zookeeper ready..."
    zkDomain="${zkServers%%:*}"
    until echo ruok | nc -q 1 ${zkDomain} 2181 | grep imok; do
      sleep 2;
    done;
    echo "zk is ready, start to config bookkeeper..."
    bin/apply-config-from-env.py conf/bookkeeper.conf;
    if bin/bookkeeper shell whatisinstanceid; then
      echo "bookkeeper cluster already initialized";
    else
      echo "bookkeeper init new cluster."
      bin/bookkeeper shell initnewcluster;
    fi
  prestop-bookies.sh: |-
    #!/bin/bash
    current_component_replicas=`cat /etc/annotations/component-replicas`
    idx=${KB_POD_NAME##*-}
    if [[ $idx -ge $current_component_replicas && $current_component_replicas -ne 0 ]]; then
       bin/bookkeeper shell bookieformat -nonInteractive -force -deleteCookie || true
    fi
  start-bookies.sh: |-
    #!/bin/bash
    set -e

    bin/apply-config-from-env.py conf/bookkeeper.conf;
    OPTS="${OPTS} -Dlog4j2.formatMsgNoLookups=true" exec bin/pulsar bookie;
  start-zookeeper.sh: |-
    #!/bin/bash
    set -e

    bin/apply-config-from-env.py conf/zookeeper.conf;
    bin/generate-zookeeper-config.sh conf/zookeeper.conf; exec bin/pulsar zookeeper;
  check-bookies.sh: |-
    #!/bin/bash
    set -x
    bin/apply-config-from-env.py conf/bookkeeper.conf
    until bin/bookkeeper shell whatisinstanceid; do
      sleep 3;
    done;
    sysctl -w net.ipv4.tcp_keepalive_time=1 && sysctl -w net.ipv4.tcp_keepalive_intvl=11 && sysctl -w net.ipv4.tcp_keepalive_probes=3
  start-bookies-recovery.sh: |-
    #!/bin/sh
    bin/apply-config-from-env.py conf/bookkeeper.conf
    exec bin/bookkeeper autorecovery