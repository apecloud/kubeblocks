apiVersion: dataprotection.kubeblocks.io/v1alpha1
kind: BackupTool
metadata:
  name: redis-physical-backup-tool
  labels:
    clusterdefinition.kubeblocks.io/name: redis
    {{- include "redis.labels" . | nindent 4 }}
spec:
  image: {{ include "redis.image" . }}
  deployKind: job
  env:
    - name: DATA_DIR
      value: /data
  physical:
    restoreCommands:
      - sh
      - -c
      - |
        set -e
        mkdir -p ${DATA_DIR}
        res=`ls -A ${DATA_DIR}`
        if [ ! -z "${res}" ]; then
          echo "${DATA_DIR} is not empty! Please make sure that the directory is empty before restoring the backup."
          exit 1
        fi
        tar -xvf ${BACKUP_DIR}/${BACKUP_NAME}.tar.gz -C ${DATA_DIR}
  logical:
    restoreCommands: []
  backupCommands:
    - bash
    - -c
    - |
      set -e
      connect_url="redis-cli -h ${DB_HOST} -p 6379 -a ${DB_PASSWORD}"
      last_save=$(${connect_url} LASTSAVE)
      echo "INFO: start BGSAVE"
      ${connect_url} BGSAVE
      echo "INFO: wait for saving rdb successfully"
      while true; do
        end_save=$(${connect_url} LASTSAVE)
        if [ $end_save -ne $last_save ];then
           break
        fi
        sleep 1
      done
      echo "INFO: start to save data file..."
      mkdir -p ${BACKUP_DIR} && cd ${DATA_DIR}
      tar -czvf ${BACKUP_DIR}/${BACKUP_NAME}.tar.gz ./
      echo "INFO: save data file successfully"
