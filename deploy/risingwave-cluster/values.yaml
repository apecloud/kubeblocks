clusterVersionOverride: ""
nameOverride: ""
fullnameOverride: ""

## @param terminationPolicy define Cluster termination policy. One of DoNotTerminate, Halt, Delete, WipeOut.
##
terminationPolicy: Delete

## Service configurations
##
service:
  ## @param service.type RisingWave SQL frontend service type, valid options are ExternalName, ClusterIP, NodePort, and LoadBalancer.
  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  ##
  type: ClusterIP

## @param tolerations define global Tolerations for the cluster all pod's assignment.
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
##
tolerations: [ ]

## @param topologySpreadConstraints Topology Spread Constraints for pod assignment spread across your cluster among failure-domains. Evaluated as a template.
## Ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/#spread-constraints-for-pods
##
topologyKeys:
- kubernetes.io/hostname

## @param affinity is affinity setting for RisingWave cluster pods assignment.
##
affinity: { }

serviceAccount:
  ## @param serviceAccount.name is the name of the service account to use.
  ## Used by all RisingWave component pods.
  ##
  name: ""

## RisingWave Configuration
##
risingwave:
  meta:
    ## @param risingwave.meta.replicas
    ## Number of meta replicas.
    ##
    replicas: 1

    ## @param risingwave.meta.resources
    ## Resource management
    ## more info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    ##
    resources:
      requests:
        cpu: "500m"
        memory: "500Mi"
      limits:
        cpu: "1"
        memory: "1Gi"


  frontend:
    ## @param risingwave.frontend.replicas
    ## Number of frontend replicas.
    ##
    replicas: 1

    ## @param risingwave.frontend.resources
    ## Resource management
    ## more info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    ##
    resources:
      requests:
        cpu: "500m"
        memory: "500Mi"
      limits:
        cpu: "1"
        memory: "1Gi"


  compute:
    ## @param risingwave.compute.replicas
    ## Number of compute replicas.
    ##
    replicas: 1

    ## @param risingwave.compute.resources
    ## Resource management
    ## more info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    ##
    resources:
      requests:
        cpu: "500m"
        memory: "500Mi"
      limits:
        cpu: "1"
        memory: "1Gi"


  compactor:
    ## @param risingwave.compactor.replicas
    ## Number of compactor replicas.
    ##
    replicas: 1

    ## @param risingwave.compactor.resources
    ## Resource management
    ## more info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    ##
    resources:
      requests:
        cpu: "500m"
        memory: "500Mi"
      limits:
        cpu: "1"
        memory: "1Gi"


  connector:
    ## @param risingwave.connector.replicas
    ## Number of connector replicas.
    ##
    replicas: 1

    ## @param risingwave.connector.resources
    ## Resource management
    ## more info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    ##
    resources:
      requests:
        cpu: "500m"
        memory: "500Mi"
      limits:
        cpu: "1"
        memory: "1Gi"


  metaStore:
    etcd:
      ## @param risingwave.metaStore.etcd.endpoint
      ## etcd endpoint.
      ##
      endpoints: "etcd:2379"

      ## @param risingwave.metaStore.etcd.authentication
      ## etcd authentication.
      authentication:
        ## @param risingwave.metaStore.etcd.authentication.enabled.
        ## Enable authentication or not.
        ##
        enabled: false

        ## @param risingwave.metaStore.etcd.authentication.username
        ## etcd username. Leave it empty for no authentication.
        ##
        username: ""

        ## @param risingwave.metaStore.etcd.authentication.password
        ## etcd password. Leave it empty for no authentication.
        ##
        password: ""


  stateStore:
    ## @param risingwave.stateStore.dataDirectory data directory.
    dataDirectory: "risingwave"

    s3:
      ## @param risingwave.stateStore.s3.endpoint
      ## Endpoint for S3 compatible services. Leave it empty for standard AWS S3.
      ##
      endpoint: ""

      ## @param risingwave.stateStore.s3.region
      ## Region of S3 bucket.
      ##
      region: ""

      ## @param risingwave.stateStore.s3.bucket
      ## S3 bucket name.
      ##
      bucket: ""

      ## @param risingwave.stateStore.s3.credentials
      ## S3 credentials.
      ##
      authentication:
        ## @param risingwave.stateStore.s3.credentials.serviceAccountName
        ## Use IAM role on service account for authentication. If set, accessKey and secretAccessKey will be ignored.
        ## Also, the global service account name will be overriden if set.
        ##
        serviceAccountName: ""

        ## @param risingwave.stateStore.s3.credentials.accessKey
        ## S3 access key.
        ##
        accessKey: ""

        ## @param risingwave.stateStore.s3.credentials.secretAccessKey
        ## S3 secret access key.
        ##
        secretAccessKey: ""