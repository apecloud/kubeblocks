apiVersion: dbaas.kubeblocks.io/v1alpha1
kind: ClusterDefinition
metadata:
  name: apecloud-wesql
  labels:
    {{- include "wesqlapp.labels" . | nindent 4 }}
spec:
  type: state.mysql
  connectionCredential:
    user: {{ .Values.auth.rootUser }}
    password: "$(RANDOM_PASSWORD)"
  components:
    - typeName: replicasets
      characterType: mysql
      probes:
        roleChangedProbe:
          failureThreshold: {{ .Values.roleChangedProbe.failureThreshold }}
          periodSeconds: {{ .Values.roleChangedProbe.periodSeconds }}
          successThreshold: {{ .Values.roleChangedProbe.successThreshold }}
      monitor:
        builtIn: true
      logConfigs:
        {{- range $name,$pattern := .Values.logConfigs }}
        - name: {{ $name }}
          filePathPattern: {{ $pattern }}
        {{- end }}
      configTemplateRefs:
        - name: mysql-3node-tpl-8.0
          volumeName: mysql-config
      defaultReplicas: 3
      componentType: Consensus
      consensusSpec:
        leader:
          name: leader
          accessMode: ReadWrite
        followers:
          - name: follower
            accessMode: Readonly
      service:
        ports:
          - protocol: TCP
            port: 3306
            targetPort: mysql
      podSpec:
      initContainers:
        - name: init
          image: lynnleelhl/kubectl:latest
          imagePullPolicy: IfNotPresent
          command: ["sh", "-c"]
          args:
            - |
              leader=$KB_REPLICASETS_LEADER
              followers=$KB_REPLICASETS_FOLLOWERS
              echo $leader
              echo $followers
              sub_follower=`echo "$followers" | grep "$KB_POD_NAME"`
              echo $KB_POD_NAME
              echo $sub_follower
              if [ -z "$leader" -o "$KB_POD_NAME" = "$leader" -o ! -z "$sub_follower" ]; then
                exit 0;
              else
                idx=${KB_POD_NAME##*-}
                host=$(eval echo \$KB_REPLICASETS_"$idx"_HOSTNAME)
                echo "$host"
                echo "kubectl exec -i $leader -c mysql -- bash -c \"mysql -e \"call dbms_consensus.add_follower('$host:13306');\" & pid=\$!; sleep 1; if ! ps \$pid > /dev/null; then wait \$pid; code=\$?; exit \$code; fi\""
                kubectl exec -i $leader -c mysql -- bash -c "mysql -e \"call dbms_consensus.add_follower('$host:13306');\" & pid=\$!; sleep 1; if ! ps \$pid > /dev/null; then wait \$pid; code=\$?; exit \$code; fi"
              fi
        containers:
          - name: mysql
            imagePullPolicy: IfNotPresent
            volumeMounts:
              - mountPath: /data/mysql
                name: data
#              - mountPath: /log/mysql
#                name: log
              - mountPath: /opt/mysql
                name: mysql-config
            ports:
              - containerPort: 3306
                name: mysql
              - containerPort: 13306
                name: paxos
            env:
              - name: MYSQL_ROOT_HOST
                value: {{ .Values.auth.rootHost | default "%" | quote }}
              - name: MYSQL_ROOT_USER
                value: {{ .Values.auth.rootUser | default "root" | quote }}
              - name: MYSQL_ROOT_PASSWORD
                value: {{ .Values.auth.rootPassword | quote }}
              - name: MYSQL_ALLOW_EMPTY_PASSWORD
                value: {{- if not .Values.auth.rootPassword }} "yes" {{- else }} "no" {{- end }}
              - name: MYSQL_DATABASE
                value: {{- if .Values.auth.createDatabase }} {{ .Values.auth.database | quote }}  {{- else }} "" {{- end }}
              - name: MYSQL_USER
                value: {{ .Values.auth.username | default "" | quote }}
              - name: MYSQL_PASSWORD
                value: {{ .Values.auth.password | default "" | quote }}
              - name: CLUSTER_ID
                value: {{ .Values.cluster.clusterId | default "1" | quote }}
              - name: CLUSTER_START_INDEX
                value: {{ .Values.cluster.clusterStartIndex | default "1" | quote }}
              - name: REPLICATIONUSER
                value: {{ .Values.auth.replicationUser | default "replicator" | quote }}
              - name: REPLICATION_PASSWORD
                value: {{ .Values.auth.replicationPassword | default "" | quote }}
              - name: MYSQL_TEMPLATE_CONFIG
                value: {{ if .Values.cluster.templateConfig }}{{ .Values.cluster.templateConfig }}{{ end }}
              - name: MYSQL_CUSTOM_CONFIG
                value: {{ if .Values.cluster.customConfig }}{{ .Values.cluster.customConfig }}{{ end }}
              - name: MYSQL_DYNAMIC_CONFIG
                value: {{ if .Values.cluster.dynamicConfig }}{{ .Values.cluster.dynamicConfig }}{{ end }}
            command: ["/bin/bash", "-c"]
            args:
              - |
                cluster_info=""; for (( i=0; i< $KB_REPLICASETS_N; i++ )); do
                  if [ $i -ne 0 ]; then
                    cluster_info="$cluster_info;";
                  fi;
                  host=$(eval echo \$KB_REPLICASETS_"$i"_HOSTNAME)
                  cluster_info="$cluster_info$host:13306";
                done;
                idx=${KB_POD_NAME##*-}
                echo $idx
                host=$(eval echo \$KB_REPLICASETS_"$idx"_HOSTNAME)
                cluster_info="$cluster_info@$(($idx+1))";
                echo $cluster_info;
                mkdir -p /data/mysql/data;
                chmod +777 -R /data/mysql;
                leader=$KB_REPLICASETS_LEADER
                echo $leader
                if [ -z $leader ]; then
                  echo "docker-entrypoint.sh mysqld --defaults-file=/opt/mysql/my.cnf --cluster-start-index=$CLUSTER_START_INDEX --cluster-info=\"$cluster_info\" --cluster-id=$CLUSTER_ID"
                  docker-entrypoint.sh mysqld --defaults-file=/opt/mysql/my.cnf --cluster-start-index=$CLUSTER_START_INDEX --cluster-info="$cluster_info" --cluster-id=$CLUSTER_ID
                elif [ "$KB_POD_NAME" != "$leader" ]; then
                  echo "docker-entrypoint.sh mysqld --defaults-file=/opt/mysql/my.cnf --cluster-start-index=$CLUSTER_START_INDEX --cluster-info=\"$host:13306\" --cluster-id=$CLUSTER_ID"
                  docker-entrypoint.sh mysqld --defaults-file=/opt/mysql/my.cnf --cluster-start-index=$CLUSTER_START_INDEX --cluster-info="$host:13306" --cluster-id=$CLUSTER_ID
                else
                  echo "docker-entrypoint.sh mysqld --defaults-file=/opt/mysql/my.cnf --cluster-start-index=$CLUSTER_START_INDEX --cluster-info=\"$host:13306@1\" --cluster-id=$CLUSTER_ID"
                  docker-entrypoint.sh mysqld --defaults-file=/opt/mysql/my.cnf --cluster-start-index=$CLUSTER_START_INDEX --cluster-info="$host:13306@1" --cluster-id=$CLUSTER_ID
                fi
