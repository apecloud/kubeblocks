apiVersion: dbaas.kubeblocks.io/v1alpha1
kind: ClusterDefinition
metadata:
  name: cluster-definition-etcd
spec:
  type: state.etcd
  components:
    - typeName: etcd
      characterType: etcd
      componentType: Consensus
      consensusSpec:
        leader:
          name: "leader"
          accessMode: ReadWrite
        followers:
          - name: "follower"
            accessMode: ReadWrite
        updateStrategy: BestEffortParallel
      probes:
        roleChangedProbe:
          periodSeconds: 2
      service:
        ports:
          - protocol: TCP
            port: 2379
      defaultReplicas: 3
      podSpec:
        containers:
          - name: etcd
            imagePullPolicy: IfNotPresent
            ports:
              - containerPort: 2379
                protocol: TCP
                name: client
              - containerPort: 2380
                protocol: TCP
                name: peer
            volumeMounts:
              - name: data
                mountPath: /var/run/etcd
            command:
              - bin/sh
              - -c
              - |
                echo "start etcd..."
                PEERS=""
                i=0
                while [ $i -lt $KB_ETCD_N ]; do
                	if [ $i -ne 0 ]; then
                		PEERS="$PEERS,";
                	fi;
                	host=$(eval echo \$KB_ETCD_"$i"_HOSTNAME)
                	svc=${host%"-$i"}
                	PEERS="$PEERS$host=http://$host:2380"
                    i=$(( i + 1))
                done
                exec etcd --name ${HOSTNAME} \
                --listen-peer-urls http://0.0.0.0:2380 \
                --listen-client-urls http://0.0.0.0:2379 \
                --advertise-client-urls http://${HOSTNAME}:2379 \
                --initial-advertise-peer-urls http://${HOSTNAME}:2380 \
                --initial-cluster-token etcd-cluster-1 \
                --initial-cluster ${PEERS} \
                --initial-cluster-state new \
                --data-dir /var/run/etcd/default.etcd
  connectionCredential:
    user: root