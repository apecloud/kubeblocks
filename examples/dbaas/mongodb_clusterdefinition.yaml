apiVersion: dbaas.kubeblocks.io/v1alpha1
kind: ClusterDefinition
metadata:
  name: mongodb-cluster-definition
spec:
  type: mongodb
  components:
    - typeName: mongos
      defaultReplicas: 1
      componentType: Stateless
      podSpec:
        containers:
          - name: mongos
            command:
              - bin/sh
              - -c
              - |
                mongos --config /etc/mongodb/config.yaml
    - typeName: configsvr
      defaultReplicas: 3
      componentType: Consensus
      consensusSpec:
        leader:
          name: "primary"
          accessMode: ReadWrite
        followers:
          - name: "secondary"
            accessMode: ReadWrite
        updateStrategy: Serial
      service:
        ports:
          - protocol: TCP
            port: 27019
      podSpec:
        containers:
          - name: configsvr
            ports:
              - name: configsvr
                protocol: TCP
                containerPort: 27019
            env:
              - name: POD_NAME
                valueFrom:
                  fieldRef:
                    fieldPath: metadata.name
            command:
              - bin/sh
              - -c
              - |
                RPL_SET_NAME=$(echo $POD_NAME | grep -o ".*-");
                RPL_SET_NAME=${RPL_SET_NAME%-};
                mongod --configsvr --bind_ip_all --replSet $RPL_SET_NAME
            lifecycle:
              postStart:
                exec:
                  command:
                    - bin/sh
                    - -c
                    - |
                      PORT=27019
                      INDEX=$(echo $POD_NAME | grep -o "\-[0-9]\+");
                      INDEX=${INDEX#-};
                      if [ $INDEX -ne 0 ]; then exit 0; fi
                      
                      until mongosh --port $PORT --eval "print('ready')"; do sleep 1; done
                      
                      RPL_SET_NAME=$(echo $POD_NAME | grep -o ".*-");
                      RPL_SET_NAME=${RPL_SET_NAME%-};
                      
                      MEMBERS=""
                      i=0
                      while [ $i -lt $KB_CONFIGSVR_N ]; do
                        if [ $i -ne 0 ]; then MEMBERS="$MEMBERS,"; fi
                        host=$(eval echo \$KB_CONFIGSVR_"$i"_HOSTNAME)
                        host=$host"."$KB_NAMESPACE".svc.cluster.local"
                        until mongosh --port $PORT --host $host --eval "print('peer is ready')"; do sleep 1; done
                        MEMBERS="$MEMBERS{_id: $i, host: \"$host:$PORT\"}"
                        i=$(( i + 1))
                      done
                      mongosh --port $PORT --eval "rs.initiate({_id: \"$RPL_SET_NAME\", configsvr: true, members: [$MEMBERS]})"
    - typeName: shard
      defaultReplicas: 3
      componentType: Consensus
      consensusSpec:
        leader:
          name: "primary"
          accessMode: ReadWrite
        followers:
          - name: "secondary"
            accessMode: ReadWrite
        updateStrategy: BestEffortParallel
      service:
        ports:
          - protocol: TCP
            port: 27018
      podSpec:
        containers:
          - name: shard
            ports:
              - name: shard
                protocol: TCP
                containerPort: 27018
            env:
              - name: POD_NAME
                valueFrom:
                  fieldRef:
                    fieldPath: metadata.name
            command:
              - bin/sh
              - -c
              - |
                RPL_SET_NAME=$(echo $POD_NAME | grep -o ".*-");
                RPL_SET_NAME=${RPL_SET_NAME%-};
                mongod --shardsvr --bind_ip_all --replSet $RPL_SET_NAME
            lifecycle:
              postStart:
                exec:
                  command:
                    - bin/sh
                    - -c
                    - |
                      PORT=27018
                      INDEX=$(echo $POD_NAME | grep -o "\-[0-9]\+");
                      INDEX=${INDEX#-};
                      if [ $INDEX -ne 0 ]; then exit 0; fi

                      until mongosh --port $PORT --eval "print('ready')"; do sleep 1; done

                      RPL_SET_NAME=$(echo $POD_NAME | grep -o ".*-");
                      RPL_SET_NAME=${RPL_SET_NAME%-};

                      MEMBERS=""
                      i=0
                      while [ $i -lt $KB_SHARD_N ]; do
                        if [ $i -ne 0 ]; then MEMBERS="$MEMBERS,"; fi
                        host=$(eval echo \$KB_SHARD_"$i"_HOSTNAME)
                        host=$host"."$KB_NAMESPACE".svc.cluster.local"
                        until mongosh --port $PORT --host $host --eval "print('peer is ready')"; do sleep 1; done
                        MEMBERS="$MEMBERS{_id: $i, host: \"$host:$PORT\"}"
                        i=$(( i + 1))
                      done
                      mongosh --port $PORT --eval "rs.initiate({_id: \"$RPL_SET_NAME\", members: [$MEMBERS]})"