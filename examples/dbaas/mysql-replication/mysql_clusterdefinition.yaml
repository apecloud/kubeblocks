apiVersion: dbaas.kubeblocks.io/v1alpha1
kind: ClusterDefinition
metadata:
  name: apecloud-mysql
spec:
  type: state.mysql-8
  components:
    - typeName: replication
      defaultReplicas: 2
      minReplicas: 1
      maxReplicas: 16
      componentType: Replication
      replicationSpec:
      service:
        ports:
          - protocol: TCP
            port: 6379
      configTemplateRefs:
        - name: mysql-primary-config-8.0.31
          volumeName: primary
        - name: mysql-secondary-config-8.0.31
          volumeName: secondary
      monitor:
        builtIn: false
        exporterConfig:
          scrapePort: 9104
          scrapePath: "/metrics"
      podSpec:
        initContainers:
          - name: mysql-init-container
            image: mysql:8.0.31
            command:
              - /bin/bash
              - "-c"
              - | 
                set -ex
                echo [mysqld] > /etc/mysql/conf.d/server-id.cnf
                [[ $KB_POD_NAME =~ -([0-9]+)-([0-9]+)$ ]] || exit 1
                ordinal=${BASH_REMATCH[1]}
                echo server-id=$((100 + $ordinal)) >> /etc/mysql/conf.d/server-id.cnf
                PRIMARY_ROLE=primary
                KB_ROLE_NAME=`cat /etc/conf/role/labels`
                if [ $KB_ROLE_NAME = "$PRIMARY_ROLE" ]; then
                  cp /etc/mnt/primary/mysql.cnf /etc/mysql/conf.d
                else
                  cp /etc/mnt/secondary/mysql.cnf /etc/mysql/conf.d
                fi
            volumeMounts:
              - name: data
                mountPath: /var/lib/mysql
              - name: conf
                mountPath: /etc/mysql/conf.d
              - name: primary
                mountPath: /etc/mnt/primary
              - name: secondary
                mountPath: /etc/mnt/secondary
              - name: pod-role
                mountPath: /etc/conf/role
        containers:
          - name: mysql
            image: mysql:8.0.31
            ports:
              - name: mysql
                containerPort: 3306
            volumeMounts:
              - name: data
                mountPath: /var/lib/mysql
              - name: conf
                mountPath: /etc/mysql/conf.d
              - name: primary
                mountPath: /etc/mnt/primary
              - name: secondary
                mountPath: /etc/mnt/secondary
              - name: pod-role
                mountPath: /etc/conf/role
            env:
              - name: MYSQL_ALLOW_EMPTY_PASSWORD
                value: "1"
            lifecycle:
              postStart:
                exec:
                  command:
                    - /bin/bash
                    - "-c"
                    - |
                      set -ex
                      SECONDARY_ROLE=secondary
                      KB_ROLE_NAME=`cat /etc/conf/role/labels`
                      if [ $KB_ROLE_NAME = "$SECONDARY_ROLE" ]; then
                        until mysql -h $KB_PRIMARY_POD_NAME -P3306 -e "SELECT 1"; do sleep 1; done
                        mysql -e "CHANGE MASTER TO MASTER_HOST='$KB_PRIMARY_POD_NAME',MASTER_PORT=3306,MASTER_USER='root',MASTER_PASSWORD='',master_auto_position=1,MASTER_CONNECT_RETRY=10;START SLAVE;"
                      else
                        echo "primary instance skip create a replication relationship."
                        exit 0
                      fi
          - name: mysql-exporter
            image: prom/mysqld-exporter:v0.14.0
            imagePullPolicy: IfNotPresent
            resources:
              requests:
                cpu: 100m
                memory: 100Mi
            ports:
              - name: metrics
                containerPort: 9104
                protocol: TCP
            livenessProbe:
              httpGet:
                path: /
                port: 9104
            readinessProbe:
              httpGet:
                path: /
                port: 9104
            env:
              - name: "MYSQL_MONITOR_USER"
                value: "root"
              - name: "MYSQL_MONITOR_PASSWORD"
                value: ""
              - name: "DATA_SOURCE_NAME"
                value: "$(MYSQL_MONITOR_USER):$(MYSQL_MONITOR_PASSWORD)@(localhost:3306)/"
        volumes:
          - name: conf
            emptyDir: { }
          - name: pod-role
            downwardAPI:
              items:
                - path: "labels"
                  fieldRef:
                    fieldPath: metadata.labels['kubeblocks.io/role']
  connectionCredential:
    user: ""
    password: ""