apiVersion: apps.kubeblocks.io/v1alpha1
kind: Cluster
metadata:
  name: pulsar-cluster
  namespace: default
  annotations:
    # KB_PULSAR_BROKER_NODEPORT: enable NodePort services
    "kubeblocks.io/extra-env": '{"KB_PULSAR_BROKER_NODEPORT": "false"}'
spec:
  # Specifies the behavior when a Cluster is deleted.
  # - `DoNotTerminate`: Prevents deletion of the Cluster. This policy ensures that all resources remain intact.
  # - `Halt`: Deletes Cluster resources like Pods and Services but retains Persistent Volume Claims (PVCs), allowing for data preservation while stopping other operations.
  # - `Delete`: Extends the `Halt` policy by also removing PVCs, leading to a thorough cleanup while removing all persistent data.
  # - `WipeOut`: An aggressive policy that deletes all Cluster resources, including volume snapshots and backups in external storage. This results in complete data removal and should be used cautiously, primarily in non-production environments to avoid irreversible data loss.
  terminationPolicy: Delete
  # Defines the list of services that are exposed by a Cluster. This field allows selected components, either from `componentSpecs` or `shardingSpecs`, to be exposed as cluster-level services. Services defined here can be referenced by other clusters using the ServiceRefClusterSelector.
  services:
  - name: proxy
    serviceName: proxy
    componentSelector: pulsar-proxy
    spec:
      # - ClusterIP
      # - NodePort
      type: ClusterIP
      ports:
      - name: pulsar
        port: 6650
        targetPort: 6650
      - name: http
        port: 80
        targetPort: 8080
  - name: broker-bootstrap
    serviceName: broker-bootstrap
    componentSelector: pulsar-broker
    spec:
      # - ClusterIP
      # - NodePort
      type: ClusterIP
      ports:
      - name: pulsar
        port: 6650
        targetPort: 6650
      - name: http
        port: 80
        targetPort: 8080
      - name: kafka-client
        port: 9092
        targetPort: 9092
  # Specifies a list of ClusterComponentSpec objects used to define the individual components that make up a Cluster. This field allows for detailed configuration of each component within the Cluster.
  # Note: `shardingSpecs` and `componentSpecs` cannot both be empty; at least one must be defined to configure a cluster.
  # ClusterComponentSpec defines the specifications for a Component in a Cluster.
  componentSpecs:
    # Specifies the name of the Component. This name is also part of the Service DNS name and must comply with the IANA service naming rule. 
  - name: pulsar-broker
    componentDef: pulsar-broker
    disableExporter: true
    serviceAccountName: kb-pulsar-cluster
    replicas: 1
    resources:
      limits:
        cpu: '0.5'
        memory: 0.5Gi
      requests:
        cpu: '0.5'
        memory: 0.5Gi
    volumeClaimTemplates:
    - name: data
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 20Gi
  - name: pulsar-proxy
    componentDef: pulsar-proxy
    replicas: 1
    resources:
      limits:
        cpu: '0.5'
        memory: 0.5Gi
      requests:
        cpu: '0.5'
        memory: 0.5Gi
  - name: bookies
    componentDef: pulsar-bookkeeper
    replicas: 3
    resources:
      limits:
        cpu: '0.5'
        memory: 0.5Gi
      requests:
        cpu: '0.5'
        memory: 0.5Gi
    volumeClaimTemplates:
    - name: journal
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 20Gi
    - name: ledgers
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 20Gi
  - name: bookies-recovery
    componentDef: pulsar-bkrecovery
    replicas: 1
    resources:
      limits:
        cpu: '0.5'
        memory: 0.5Gi
      requests:
        cpu: '0.5'
        memory: 0.5Gi
  - name: zookeeper
    componentDef: pulsar-zookeeper
    replicas: 3
    resources:
      limits:
        cpu: '0.5'
        memory: 0.5Gi
      requests:
        cpu: '0.5'
        memory: 0.5Gi
    volumeClaimTemplates:
    - name: data
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 20Gi
