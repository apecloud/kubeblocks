apiVersion: apps.kubeblocks.io/v1alpha1
kind: Cluster
metadata:
  name: pulsar-cluster
  namespace: default
  annotations:
    # KB_PULSAR_BROKER_NODEPORT: enable NodePort services
    "kubeblocks.io/extra-env": '{"KB_PULSAR_BROKER_NODEPORT": "false"}'
spec:
  # Specifies the name of the ClusterDefinition to use when creating a Cluster.
  clusterDefinitionRef: pulsar
  # Refers to the ClusterVersion name. Deprecated since v0.9, use ComponentVersion instead. This field is maintained for backward compatibility and its use is discouraged. Existing usage should be updated to the current preferred approach to avoid compatibility issues in future releases.
  clusterVersionRef: pulsar-3.0.2
  # Specifies the behavior when a Cluster is deleted.
  # - `DoNotTerminate`: Prevents deletion of the Cluster. This policy ensures that all resources remain intact.
  # - `Halt`: Deletes Cluster resources like Pods and Services but retains Persistent Volume Claims (PVCs), allowing for data preservation while stopping other operations.
  # - `Delete`: Extends the `Halt` policy by also removing PVCs, leading to a thorough cleanup while removing all persistent data.
  # - `WipeOut`: An aggressive policy that deletes all Cluster resources, including volume snapshots and backups in external storage. This results in complete data removal and should be used cautiously, primarily in non-production environments to avoid irreversible data loss.
  terminationPolicy: Delete
  # Defines a set of node affinity scheduling rules for the Cluster's Pods. This field helps control the placement of Pods on nodes within the cluster.
  affinity:
   # Specifies the anti-affinity level of Pods within a Component. It determines how pods should be spread across nodes to improve availability and performance.
    podAntiAffinity: Preferred
    # Represents the key of node labels used to define the topology domain for Pod anti-affinity and Pod spread constraints. 
    topologyKeys:
    - kubernetes.io/hostname
    # Determines the level of resource isolation between Pods. It can have the following values: `SharedNode` and `DedicatedNode`. 
    # - SharedNode: Allow that multiple Pods may share the same node, which is the default behavior of K8s. 
    # - DedicatedNode: Each Pod runs on a dedicated node, ensuring that no two Pods share the same node. 
    tenancy: SharedNode
  # An array that specifies tolerations attached to the Cluster's Pods, allowing them to be scheduled onto nodes with matching taints.
  tolerations:
    - key: kb-data
      operator: Equal
      value: "true"
      effect: NoSchedule
  services:
  - name: proxy
    serviceName: proxy
    componentSelector: pulsar-proxy
    spec:
      # - ClusterIP
      # - NodePort
      type: ClusterIP
      ports:
      - name: pulsar
        port: 6650
        targetPort: 6650
      - name: http
        port: 80
        targetPort: 8080
  - name: broker-bootstrap
    serviceName: broker-bootstrap
    componentSelector: pulsar-broker
    spec:
      # - ClusterIP
      # - NodePort
      type: ClusterIP
      ports:
      - name: pulsar
        port: 6650
        targetPort: 6650
      - name: http
        port: 80
        targetPort: 8080
      - name: kafka-client
        port: 9092
        targetPort: 9092
  # Specifies a list of ClusterComponentSpec objects used to define the individual components that make up a Cluster. This field allows for detailed configuration of each component within the Cluster. Note: `shardingSpecs` and `componentSpecs` cannot both be empty; at least one must be defined to configure a cluster. ClusterComponentSpec defines the specifications for a Component in a Cluster.
  componentSpecs:
  - name: pulsar-broker
    componentDefRef: pulsar-broker
    serviceRefs:
    - name: pulsarZookeeper
      namespace: default
      serviceDescriptor: pulsar-cluster-zookeeper-service
    disableExporter: true
    serviceAccountName: kb-pulsar-cluster
    replicas: 1
    resources:
      limits:
        cpu: '0.5'
        memory: 0.5Gi
      requests:
        cpu: '0.5'
        memory: 0.5Gi
    volumeClaimTemplates:
    - name: data
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 20Gi
  - name: pulsar-proxy
    componentDefRef: pulsar-proxy
    serviceRefs:
    - name: pulsarZookeeper
      namespace: default
      serviceDescriptor: pulsar-cluster-zookeeper-service
    disableExporter: true
    replicas: 1
    resources:
      limits:
        cpu: '0.5'
        memory: 0.5Gi
      requests:
        cpu: '0.5'
        memory: 0.5Gi
  - name: bookies
    componentDefRef: bookies
    serviceRefs:
    - name: pulsarZookeeper
      namespace: default
      serviceDescriptor: pulsar-cluster-zookeeper-service
    disableExporter: true
    replicas: 3
    resources:
      limits:
        cpu: '0.5'
        memory: 0.5Gi
      requests:
        cpu: '0.5'
        memory: 0.5Gi
    volumeClaimTemplates:
    - name: journal
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 20Gi
    - name: ledgers
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 20Gi
  - name: bookies-recovery
    componentDefRef: bookies-recovery
    serviceRefs:
    - name: pulsarZookeeper
      namespace: default
      serviceDescriptor: pulsar-cluster-zookeeper-service
    disableExporter: true
    replicas: 1
    resources:
      limits:
        cpu: '0.5'
        memory: 0.5Gi
      requests:
        cpu: '0.5'
        memory: 0.5Gi
  - name: zookeeper
    componentDefRef: zookeeper
    disableExporter: true
    replicas: 3
    resources:
      limits:
        cpu: '0.5'
        memory: 0.5Gi
      requests:
        cpu: '0.5'
        memory: 0.5Gi
    volumeClaimTemplates:
    - name: data
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 20Gi
---
apiVersion: apps.kubeblocks.io/v1alpha1
kind: ServiceDescriptor
metadata:
  name: pulsar-cluster-zookeeper-service
  namespace: default
spec:
  # Specifies the type or nature of the service.
  # Should represent a well-known application cluster type, such as {mysql, redis, zookeeper}.
  serviceKind: zookeeper
  # Represents the version of the service reference.
  serviceVersion: 3.8.5
  # Represents the endpoint of the service connection credential.
  endpoint:
    value: "pulsar-cluster-zookeeper"
  # Represents the port of the service connection credential.
  port:
    value: "2181"
