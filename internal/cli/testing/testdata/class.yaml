apiVersion: apps.kubeblocks.io/v1alpha1
kind: ComponentClassDefinition
metadata:
  name: kb.classes.default.apecloud-mysql.mysql
  labels:
    class.kubeblocks.io/provider: kubeblocks
    apps.kubeblocks.io/component-def-ref: mysql
    clusterdefinition.kubeblocks.io/name: apecloud-mysql
spec:
  groups:
  - # resource constraint name, such as general, memory-optimized, cpu-optimized etc.
    resourceConstraintRef: kb-resource-constraint-general
    # class schema template, you can set default resource values here
    template: |
      cpu: "{{ or .cpu 1 }}"
      memory: "{{ or .memory 4 }}Gi"
      volumes:
      - name: data
        size: "{{ or .dataStorageSize 10 }}Gi"
      - name: log
        size: "{{ or .logStorageSize 1 }}Gi"
    # class schema template variables
    vars: [ cpu, memory, dataStorageSize, logStorageSize ]
    series:
    - # class name generator, you can reference variables in class schema template
      # it's also ok to define static class name in following class definitions
      namingTemplate: "general-{{ .cpu }}c{{ .memory }}g"

      # class definitions, we support two kinds of class definitions:
      # 1. define arguments for class schema variables, class schema will be dynamically generated
      # 2. statically define complete class schema
      classes:
      - args: [ "1", "1", "10", "1" ]
      - args: [ "2", "2", "10", "1" ]
      - args: [ "2", "4", "10", "1" ]
      - args: [ "2", "8", "10", "1" ]
      - args: [ "4", "16", "10", "1" ]
      - args: [ "8", "32", "10", "1" ]
      - args: [ "16", "64", "20", "1" ]
      - args: [ "32", "128", "20", "1" ]
      - args: [ "64", "256", "20", "1" ]
      - args: [ "128", "512", "20", "1" ]

  - resourceConstraintRef: kb-resource-constraint-memory-optimized
    template: |
      cpu: "{{ or .cpu 1 }}"
      memory: "{{ or .memory 8 }}Gi"
      volumes:
      - name: data
        size: "{{ or .dataStorageSize 10 }}Gi"
      - name: log
        size: "{{ or .logStorageSize 1 }}Gi"
    vars: [ cpu, memory, dataStorageSize, logStorageSize ]
    series:
    - namingTemplate: "mo-{{ .cpu }}c{{ .memory }}g"
      classes:
      - args: [ "2", "16", "10", "1" ]
      - args: [ "4", "32", "10", "1" ]
      - args: [ "8", "64", "10", "1" ]
      - args: [ "12", "96", "10", "1" ]
      - args: [ "24", "192", "20", "1" ]
      - args: [ "48", "384", "20", "1" ]
      - args: [ "2", "32", "10", "1" ]
      - args: [ "4", "64", "10", "1" ]
      - args: [ "8", "128", "10", "1" ]
      - args: [ "16", "256", "10", "1" ]
      - args: [ "32", "512", "20", "1" ]
      - args: [ "48", "768", "20", "1" ]
      - args: [ "64", "1024", "20", "1" ]
      - args: [ "128", "2048", "20", "1" ]
status:
  classes:
  - name: general-1c1g
    resourceConstraintRef: kb-resource-constraint-general
    cpu: 1
    memory: 1Gi
    storage:
    - name: data
      size: 100Gi
    - name: log
      size: 10Gi