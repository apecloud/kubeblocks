---
# Source: kubeblocks/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubeblocks
  labels:
    helm.sh/chart: kubeblocks-0.6.0-beta.21
    app.kubernetes.io/name: kubeblocks
    app.kubernetes.io/instance: kubeblocks
    app.kubernetes.io/version: "0.6.0-beta.21"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: "apps"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kubeblocks
      app.kubernetes.io/instance: kubeblocks
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 40%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kubeblocks
        app.kubernetes.io/instance: kubeblocks
    spec:
      priorityClassName: 
      serviceAccountName: kubeblocks
      securityContext:
        runAsNonRoot: true
      initContainers: # only download tools image to local
        - name: tools
          image: "registry.cn-hangzhou.aliyuncs.com/apecloud/kubeblocks-tools:0.6.0-beta.21"
          imagePullPolicy: IfNotPresent
          command:
            - /bin/true
        - name: datascript
          image: "registry.cn-hangzhou.aliyuncs.com/apecloud/kubeblocks-datascript:0.6.0-beta.21"
          imagePullPolicy: IfNotPresent
          command:
            - /bin/true
      containers:
        - name: manager
          args:
            - "--health-probe-bind-address=:8081"
            - "--metrics-bind-address=:8080"
            - "--leader-elect"
            - "--zap-devel=false"
            - "--zap-time-encoding=iso8601"
            - "--zap-encoder=console"
            - "--extensions=true"
            - "--apps=true"
            - "--workloads=true"
            - "--storage=true"
            - "--dataprotection=false"
          env:
            - name: CM_NAMESPACE
              value: default
            - name: CM_AFFINITY
              value: "{\"nodeAffinity\":{\"preferredDuringSchedulingIgnoredDuringExecution\":[{\"preference\":{\"matchExpressions\":[{\"key\":\"kb-controller\",\"operator\":\"In\",\"values\":[\"true\"]}]},\"weight\":100}]}}"
            - name: CM_TOLERATIONS
              value: "[{\"effect\":\"NoSchedule\",\"key\":\"kb-controller\",\"operator\":\"Equal\",\"value\":\"true\"}]"
            - name: KUBEBLOCKS_IMAGE_PULL_POLICY
              value: IfNotPresent
            - name: KUBEBLOCKS_TOOLS_IMAGE
              value: "registry.cn-hangzhou.aliyuncs.com/apecloud/kubeblocks-tools:0.6.0-beta.21"
            - name: KUBEBLOCKS_DATASCRIPT_CLIENTS_IMAGE
              value: "registry.cn-hangzhou.aliyuncs.com/apecloud/kubeblocks-datascript:0.6.0-beta.21"
            - name: KUBEBLOCKS_SERVICEACCOUNT_NAME
              value: kubeblocks
            - name: VOLUMESNAPSHOT
              value: "true"
            - name: ENABLE_RBAC_MANAGER
              value: "true"
            - name: ADDON_JOB_TTL
              value: 
            - name: ADDON_JOB_IMAGE_PULL_POLICY
              value: IfNotPresent
            - name: KUBEBLOCKS_ADDON_SA_NAME
              value: kubeblocks-addon-installer
            - name: KUBEBLOCKS_ADDON_HELM_INSTALL_OPTIONS
              value: --atomic --cleanup-on-fail --wait --insecure-skip-tls-verify
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
          image: "registry.cn-hangzhou.aliyuncs.com/apecloud/kubeblocks:0.6.0-beta.21"
          imagePullPolicy: IfNotPresent
          ports:
            - name: webhook-server
              containerPort: 9443
              protocol: TCP
            - name: health
              containerPort: 8081
              protocol: TCP
            - name: metrics
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: health
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /readyz
              port: health
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            {}
          volumeMounts:
          - mountPath: /etc/kubeblocks
            name: manager-config
      dnsPolicy: ClusterFirst
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: kb-controller
                operator: In
                values:
                - "true"
            weight: 100
      tolerations:
        - effect: NoSchedule
          key: kb-controller
          operator: Equal
          value: "true"
      terminationGracePeriodSeconds: 10
      volumes:
        - name: manager-config
          configMap:
            name: kubeblocks-manager-config
---
# Source: kubeblocks/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubeblocks-dataprotection
  labels:
    helm.sh/chart: kubeblocks-0.6.0-beta.21
    app.kubernetes.io/name: kubeblocks
    app.kubernetes.io/instance: kubeblocks
    app.kubernetes.io/version: "0.6.0-beta.21"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: "dataprotection"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kubeblocks
      app.kubernetes.io/instance: kubeblocks
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 40%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kubeblocks
        app.kubernetes.io/instance: kubeblocks
    spec:
      priorityClassName: 
      serviceAccountName: kubeblocks
      securityContext:
        runAsNonRoot: true
      initContainers: # only download tools image to local
        - name: tools
          image: "registry.cn-hangzhou.aliyuncs.com/apecloud/kubeblocks-tools:0.6.0-beta.21"
          imagePullPolicy: IfNotPresent
          command:
            - /bin/true
      containers:
        - name: manager
          args:
            - "--health-probe-bind-address=:8081"
            - "--metrics-bind-address=:8080"
            - "--leader-elect"
            - "--leader-elect-id=abd03fda"
            - "--zap-devel=false"
            - "--zap-time-encoding=iso8601"
            - "--zap-encoder=console"
            - "--dataprotection=true"
            - "--apps=false"
            - "--extensions=false"
            - "--workloads=false"
            - "--storage=false"
          env:
            - name: CM_NAMESPACE
              value: default
            - name: CM_AFFINITY
              value: "{\"nodeAffinity\":{\"preferredDuringSchedulingIgnoredDuringExecution\":[{\"preference\":{\"matchExpressions\":[{\"key\":\"kb-controller\",\"operator\":\"In\",\"values\":[\"true\"]}]},\"weight\":100}]}}"
            - name: CM_TOLERATIONS
              value: "[{\"effect\":\"NoSchedule\",\"key\":\"kb-controller\",\"operator\":\"Equal\",\"value\":\"true\"}]"
            - name: KUBEBLOCKS_IMAGE_PULL_POLICY
              value: IfNotPresent
            - name: KUBEBLOCKS_TOOLS_IMAGE
              value: "registry.cn-hangzhou.aliyuncs.com/apecloud/kubeblocks-tools:0.6.0-beta.21"
            - name: KUBEBLOCKS_SERVICEACCOUNT_NAME
              value: kubeblocks
            - name: VOLUMESNAPSHOT
              value: "true"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
          image: "registry.cn-hangzhou.aliyuncs.com/apecloud/kubeblocks:0.6.0-beta.21"
          imagePullPolicy: IfNotPresent
          ports:
            - name: webhook-server
              containerPort: 9443
              protocol: TCP
            - name: health
              containerPort: 8081
              protocol: TCP
            - name: metrics
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: health
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /readyz
              port: health
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            {}
          volumeMounts:
            - mountPath: /etc/kubeblocks
              name: manager-config
      dnsPolicy: ClusterFirst
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: kb-controller
                operator: In
                values:
                - "true"
            weight: 100
      tolerations:
        - effect: NoSchedule
          key: kb-controller
          operator: Equal
          value: "true"
      terminationGracePeriodSeconds: 10
      volumes:
        - name: manager-config
          configMap:
            name: kubeblocks-manager-config
