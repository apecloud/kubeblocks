/*
Copyright (C) 2022-2023 ApeCloud Co., Ltd

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

// BackupSpecApplyConfiguration represents an declarative configuration of the BackupSpec type for use
// with apply.
type BackupSpecApplyConfiguration struct {
	BackupName       *string `json:"backupName,omitempty"`
	BackupPolicyName *string `json:"backupPolicyName,omitempty"`
	BackupType       *string `json:"backupType,omitempty"`
	ParentBackupName *string `json:"parentBackupName,omitempty"`
}

// BackupSpecApplyConfiguration constructs an declarative configuration of the BackupSpec type for use with
// apply.
func BackupSpec() *BackupSpecApplyConfiguration {
	return &BackupSpecApplyConfiguration{}
}

// WithBackupName sets the BackupName field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the BackupName field is set to the value of the last call.
func (b *BackupSpecApplyConfiguration) WithBackupName(value string) *BackupSpecApplyConfiguration {
	b.BackupName = &value
	return b
}

// WithBackupPolicyName sets the BackupPolicyName field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the BackupPolicyName field is set to the value of the last call.
func (b *BackupSpecApplyConfiguration) WithBackupPolicyName(value string) *BackupSpecApplyConfiguration {
	b.BackupPolicyName = &value
	return b
}

// WithBackupType sets the BackupType field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the BackupType field is set to the value of the last call.
func (b *BackupSpecApplyConfiguration) WithBackupType(value string) *BackupSpecApplyConfiguration {
	b.BackupType = &value
	return b
}

// WithParentBackupName sets the ParentBackupName field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ParentBackupName field is set to the value of the last call.
func (b *BackupSpecApplyConfiguration) WithParentBackupName(value string) *BackupSpecApplyConfiguration {
	b.ParentBackupName = &value
	return b
}
