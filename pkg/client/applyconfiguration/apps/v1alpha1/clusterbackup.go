/*
Copyright (C) 2022-2023 ApeCloud Co., Ltd

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/apecloud/kubeblocks/apis/dataprotection/v1alpha1"
)

// ClusterBackupApplyConfiguration represents an declarative configuration of the ClusterBackup type for use
// with apply.
type ClusterBackupApplyConfiguration struct {
	Enabled                 *bool                  `json:"enabled,omitempty"`
	RetentionPeriod         *string                `json:"retentionPeriod,omitempty"`
	Method                  *v1alpha1.BackupMethod `json:"method,omitempty"`
	CronExpression          *string                `json:"cronExpression,omitempty"`
	StartingDeadlineMinutes *int64                 `json:"startingDeadlineMinutes,omitempty"`
	RepoName                *string                `json:"repoName,omitempty"`
	PITREnabled             *bool                  `json:"pitrEnabled,omitempty"`
}

// ClusterBackupApplyConfiguration constructs an declarative configuration of the ClusterBackup type for use with
// apply.
func ClusterBackup() *ClusterBackupApplyConfiguration {
	return &ClusterBackupApplyConfiguration{}
}

// WithEnabled sets the Enabled field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Enabled field is set to the value of the last call.
func (b *ClusterBackupApplyConfiguration) WithEnabled(value bool) *ClusterBackupApplyConfiguration {
	b.Enabled = &value
	return b
}

// WithRetentionPeriod sets the RetentionPeriod field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the RetentionPeriod field is set to the value of the last call.
func (b *ClusterBackupApplyConfiguration) WithRetentionPeriod(value string) *ClusterBackupApplyConfiguration {
	b.RetentionPeriod = &value
	return b
}

// WithMethod sets the Method field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Method field is set to the value of the last call.
func (b *ClusterBackupApplyConfiguration) WithMethod(value v1alpha1.BackupMethod) *ClusterBackupApplyConfiguration {
	b.Method = &value
	return b
}

// WithCronExpression sets the CronExpression field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the CronExpression field is set to the value of the last call.
func (b *ClusterBackupApplyConfiguration) WithCronExpression(value string) *ClusterBackupApplyConfiguration {
	b.CronExpression = &value
	return b
}

// WithStartingDeadlineMinutes sets the StartingDeadlineMinutes field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the StartingDeadlineMinutes field is set to the value of the last call.
func (b *ClusterBackupApplyConfiguration) WithStartingDeadlineMinutes(value int64) *ClusterBackupApplyConfiguration {
	b.StartingDeadlineMinutes = &value
	return b
}

// WithRepoName sets the RepoName field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the RepoName field is set to the value of the last call.
func (b *ClusterBackupApplyConfiguration) WithRepoName(value string) *ClusterBackupApplyConfiguration {
	b.RepoName = &value
	return b
}

// WithPITREnabled sets the PITREnabled field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the PITREnabled field is set to the value of the last call.
func (b *ClusterBackupApplyConfiguration) WithPITREnabled(value bool) *ClusterBackupApplyConfiguration {
	b.PITREnabled = &value
	return b
}
