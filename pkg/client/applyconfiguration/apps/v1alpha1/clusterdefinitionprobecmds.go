/*
Copyright (C) 2022-2023 ApeCloud Co., Ltd

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

// ClusterDefinitionProbeCMDsApplyConfiguration represents an declarative configuration of the ClusterDefinitionProbeCMDs type for use
// with apply.
type ClusterDefinitionProbeCMDsApplyConfiguration struct {
	Writes  []string `json:"writes,omitempty"`
	Queries []string `json:"queries,omitempty"`
}

// ClusterDefinitionProbeCMDsApplyConfiguration constructs an declarative configuration of the ClusterDefinitionProbeCMDs type for use with
// apply.
func ClusterDefinitionProbeCMDs() *ClusterDefinitionProbeCMDsApplyConfiguration {
	return &ClusterDefinitionProbeCMDsApplyConfiguration{}
}

// WithWrites adds the given value to the Writes field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the Writes field.
func (b *ClusterDefinitionProbeCMDsApplyConfiguration) WithWrites(values ...string) *ClusterDefinitionProbeCMDsApplyConfiguration {
	for i := range values {
		b.Writes = append(b.Writes, values[i])
	}
	return b
}

// WithQueries adds the given value to the Queries field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the Queries field.
func (b *ClusterDefinitionProbeCMDsApplyConfiguration) WithQueries(values ...string) *ClusterDefinitionProbeCMDsApplyConfiguration {
	for i := range values {
		b.Queries = append(b.Queries, values[i])
	}
	return b
}
