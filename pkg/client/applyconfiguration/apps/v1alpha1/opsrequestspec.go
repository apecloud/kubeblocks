/*
Copyright (C) 2022-2023 ApeCloud Co., Ltd

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/apecloud/kubeblocks/apis/apps/v1alpha1"
)

// OpsRequestSpecApplyConfiguration represents an declarative configuration of the OpsRequestSpec type for use
// with apply.
type OpsRequestSpecApplyConfiguration struct {
	ClusterRef             *string                               `json:"clusterRef,omitempty"`
	Cancel                 *bool                                 `json:"cancel,omitempty"`
	Type                   *v1alpha1.OpsType                     `json:"type,omitempty"`
	TTLSecondsAfterSucceed *int32                                `json:"ttlSecondsAfterSucceed,omitempty"`
	Upgrade                *UpgradeApplyConfiguration            `json:"upgrade,omitempty"`
	HorizontalScalingList  []HorizontalScalingApplyConfiguration `json:"horizontalScaling,omitempty"`
	VolumeExpansionList    []VolumeExpansionApplyConfiguration   `json:"volumeExpansion,omitempty"`
	RestartList            []ComponentOpsApplyConfiguration      `json:"restart,omitempty"`
	SwitchoverList         []SwitchoverApplyConfiguration        `json:"switchover,omitempty"`
	VerticalScalingList    []VerticalScalingApplyConfiguration   `json:"verticalScaling,omitempty"`
	Reconfigure            *ReconfigureApplyConfiguration        `json:"reconfigure,omitempty"`
	ExposeList             []ExposeApplyConfiguration            `json:"expose,omitempty"`
	RestoreFrom            *RestoreFromSpecApplyConfiguration    `json:"restoreFrom,omitempty"`
	TTLSecondsBeforeAbort  *int32                                `json:"ttlSecondsBeforeAbort,omitempty"`
	ScriptSpec             *ScriptSpecApplyConfiguration         `json:"scriptSpec,omitempty"`
	BackupSpec             *BackupSpecApplyConfiguration         `json:"backupSpec,omitempty"`
}

// OpsRequestSpecApplyConfiguration constructs an declarative configuration of the OpsRequestSpec type for use with
// apply.
func OpsRequestSpec() *OpsRequestSpecApplyConfiguration {
	return &OpsRequestSpecApplyConfiguration{}
}

// WithClusterRef sets the ClusterRef field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ClusterRef field is set to the value of the last call.
func (b *OpsRequestSpecApplyConfiguration) WithClusterRef(value string) *OpsRequestSpecApplyConfiguration {
	b.ClusterRef = &value
	return b
}

// WithCancel sets the Cancel field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Cancel field is set to the value of the last call.
func (b *OpsRequestSpecApplyConfiguration) WithCancel(value bool) *OpsRequestSpecApplyConfiguration {
	b.Cancel = &value
	return b
}

// WithType sets the Type field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Type field is set to the value of the last call.
func (b *OpsRequestSpecApplyConfiguration) WithType(value v1alpha1.OpsType) *OpsRequestSpecApplyConfiguration {
	b.Type = &value
	return b
}

// WithTTLSecondsAfterSucceed sets the TTLSecondsAfterSucceed field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the TTLSecondsAfterSucceed field is set to the value of the last call.
func (b *OpsRequestSpecApplyConfiguration) WithTTLSecondsAfterSucceed(value int32) *OpsRequestSpecApplyConfiguration {
	b.TTLSecondsAfterSucceed = &value
	return b
}

// WithUpgrade sets the Upgrade field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Upgrade field is set to the value of the last call.
func (b *OpsRequestSpecApplyConfiguration) WithUpgrade(value *UpgradeApplyConfiguration) *OpsRequestSpecApplyConfiguration {
	b.Upgrade = value
	return b
}

// WithHorizontalScalingList adds the given value to the HorizontalScalingList field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the HorizontalScalingList field.
func (b *OpsRequestSpecApplyConfiguration) WithHorizontalScalingList(values ...*HorizontalScalingApplyConfiguration) *OpsRequestSpecApplyConfiguration {
	for i := range values {
		if values[i] == nil {
			panic("nil value passed to WithHorizontalScalingList")
		}
		b.HorizontalScalingList = append(b.HorizontalScalingList, *values[i])
	}
	return b
}

// WithVolumeExpansionList adds the given value to the VolumeExpansionList field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the VolumeExpansionList field.
func (b *OpsRequestSpecApplyConfiguration) WithVolumeExpansionList(values ...*VolumeExpansionApplyConfiguration) *OpsRequestSpecApplyConfiguration {
	for i := range values {
		if values[i] == nil {
			panic("nil value passed to WithVolumeExpansionList")
		}
		b.VolumeExpansionList = append(b.VolumeExpansionList, *values[i])
	}
	return b
}

// WithRestartList adds the given value to the RestartList field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the RestartList field.
func (b *OpsRequestSpecApplyConfiguration) WithRestartList(values ...*ComponentOpsApplyConfiguration) *OpsRequestSpecApplyConfiguration {
	for i := range values {
		if values[i] == nil {
			panic("nil value passed to WithRestartList")
		}
		b.RestartList = append(b.RestartList, *values[i])
	}
	return b
}

// WithSwitchoverList adds the given value to the SwitchoverList field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the SwitchoverList field.
func (b *OpsRequestSpecApplyConfiguration) WithSwitchoverList(values ...*SwitchoverApplyConfiguration) *OpsRequestSpecApplyConfiguration {
	for i := range values {
		if values[i] == nil {
			panic("nil value passed to WithSwitchoverList")
		}
		b.SwitchoverList = append(b.SwitchoverList, *values[i])
	}
	return b
}

// WithVerticalScalingList adds the given value to the VerticalScalingList field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the VerticalScalingList field.
func (b *OpsRequestSpecApplyConfiguration) WithVerticalScalingList(values ...*VerticalScalingApplyConfiguration) *OpsRequestSpecApplyConfiguration {
	for i := range values {
		if values[i] == nil {
			panic("nil value passed to WithVerticalScalingList")
		}
		b.VerticalScalingList = append(b.VerticalScalingList, *values[i])
	}
	return b
}

// WithReconfigure sets the Reconfigure field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Reconfigure field is set to the value of the last call.
func (b *OpsRequestSpecApplyConfiguration) WithReconfigure(value *ReconfigureApplyConfiguration) *OpsRequestSpecApplyConfiguration {
	b.Reconfigure = value
	return b
}

// WithExposeList adds the given value to the ExposeList field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the ExposeList field.
func (b *OpsRequestSpecApplyConfiguration) WithExposeList(values ...*ExposeApplyConfiguration) *OpsRequestSpecApplyConfiguration {
	for i := range values {
		if values[i] == nil {
			panic("nil value passed to WithExposeList")
		}
		b.ExposeList = append(b.ExposeList, *values[i])
	}
	return b
}

// WithRestoreFrom sets the RestoreFrom field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the RestoreFrom field is set to the value of the last call.
func (b *OpsRequestSpecApplyConfiguration) WithRestoreFrom(value *RestoreFromSpecApplyConfiguration) *OpsRequestSpecApplyConfiguration {
	b.RestoreFrom = value
	return b
}

// WithTTLSecondsBeforeAbort sets the TTLSecondsBeforeAbort field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the TTLSecondsBeforeAbort field is set to the value of the last call.
func (b *OpsRequestSpecApplyConfiguration) WithTTLSecondsBeforeAbort(value int32) *OpsRequestSpecApplyConfiguration {
	b.TTLSecondsBeforeAbort = &value
	return b
}

// WithScriptSpec sets the ScriptSpec field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ScriptSpec field is set to the value of the last call.
func (b *OpsRequestSpecApplyConfiguration) WithScriptSpec(value *ScriptSpecApplyConfiguration) *OpsRequestSpecApplyConfiguration {
	b.ScriptSpec = value
	return b
}

// WithBackupSpec sets the BackupSpec field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the BackupSpec field is set to the value of the last call.
func (b *OpsRequestSpecApplyConfiguration) WithBackupSpec(value *BackupSpecApplyConfiguration) *OpsRequestSpecApplyConfiguration {
	b.BackupSpec = value
	return b
}
