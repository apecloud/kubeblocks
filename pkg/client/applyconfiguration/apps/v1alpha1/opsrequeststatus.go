/*
Copyright (C) 2022-2023 ApeCloud Co., Ltd

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/apecloud/kubeblocks/apis/apps/v1alpha1"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// OpsRequestStatusApplyConfiguration represents an declarative configuration of the OpsRequestStatus type for use
// with apply.
type OpsRequestStatusApplyConfiguration struct {
	ClusterGeneration   *int64                                                 `json:"clusterGeneration,omitempty"`
	Phase               *v1alpha1.OpsPhase                                     `json:"phase,omitempty"`
	Progress            *string                                                `json:"progress,omitempty"`
	LastConfiguration   *LastConfigurationApplyConfiguration                   `json:"lastConfiguration,omitempty"`
	Components          map[string]OpsRequestComponentStatusApplyConfiguration `json:"components,omitempty"`
	StartTimestamp      *v1.Time                                               `json:"startTimestamp,omitempty"`
	CompletionTimestamp *v1.Time                                               `json:"completionTimestamp,omitempty"`
	CancelTimestamp     *v1.Time                                               `json:"cancelTimestamp,omitempty"`
	ReconfiguringStatus *ReconfiguringStatusApplyConfiguration                 `json:"reconfiguringStatus,omitempty"`
	Conditions          []v1.Condition                                         `json:"conditions,omitempty"`
}

// OpsRequestStatusApplyConfiguration constructs an declarative configuration of the OpsRequestStatus type for use with
// apply.
func OpsRequestStatus() *OpsRequestStatusApplyConfiguration {
	return &OpsRequestStatusApplyConfiguration{}
}

// WithClusterGeneration sets the ClusterGeneration field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ClusterGeneration field is set to the value of the last call.
func (b *OpsRequestStatusApplyConfiguration) WithClusterGeneration(value int64) *OpsRequestStatusApplyConfiguration {
	b.ClusterGeneration = &value
	return b
}

// WithPhase sets the Phase field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Phase field is set to the value of the last call.
func (b *OpsRequestStatusApplyConfiguration) WithPhase(value v1alpha1.OpsPhase) *OpsRequestStatusApplyConfiguration {
	b.Phase = &value
	return b
}

// WithProgress sets the Progress field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Progress field is set to the value of the last call.
func (b *OpsRequestStatusApplyConfiguration) WithProgress(value string) *OpsRequestStatusApplyConfiguration {
	b.Progress = &value
	return b
}

// WithLastConfiguration sets the LastConfiguration field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the LastConfiguration field is set to the value of the last call.
func (b *OpsRequestStatusApplyConfiguration) WithLastConfiguration(value *LastConfigurationApplyConfiguration) *OpsRequestStatusApplyConfiguration {
	b.LastConfiguration = value
	return b
}

// WithComponents puts the entries into the Components field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, the entries provided by each call will be put on the Components field,
// overwriting an existing map entries in Components field with the same key.
func (b *OpsRequestStatusApplyConfiguration) WithComponents(entries map[string]OpsRequestComponentStatusApplyConfiguration) *OpsRequestStatusApplyConfiguration {
	if b.Components == nil && len(entries) > 0 {
		b.Components = make(map[string]OpsRequestComponentStatusApplyConfiguration, len(entries))
	}
	for k, v := range entries {
		b.Components[k] = v
	}
	return b
}

// WithStartTimestamp sets the StartTimestamp field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the StartTimestamp field is set to the value of the last call.
func (b *OpsRequestStatusApplyConfiguration) WithStartTimestamp(value v1.Time) *OpsRequestStatusApplyConfiguration {
	b.StartTimestamp = &value
	return b
}

// WithCompletionTimestamp sets the CompletionTimestamp field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the CompletionTimestamp field is set to the value of the last call.
func (b *OpsRequestStatusApplyConfiguration) WithCompletionTimestamp(value v1.Time) *OpsRequestStatusApplyConfiguration {
	b.CompletionTimestamp = &value
	return b
}

// WithCancelTimestamp sets the CancelTimestamp field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the CancelTimestamp field is set to the value of the last call.
func (b *OpsRequestStatusApplyConfiguration) WithCancelTimestamp(value v1.Time) *OpsRequestStatusApplyConfiguration {
	b.CancelTimestamp = &value
	return b
}

// WithReconfiguringStatus sets the ReconfiguringStatus field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ReconfiguringStatus field is set to the value of the last call.
func (b *OpsRequestStatusApplyConfiguration) WithReconfiguringStatus(value *ReconfiguringStatusApplyConfiguration) *OpsRequestStatusApplyConfiguration {
	b.ReconfiguringStatus = value
	return b
}

// WithConditions adds the given value to the Conditions field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the Conditions field.
func (b *OpsRequestStatusApplyConfiguration) WithConditions(values ...v1.Condition) *OpsRequestStatusApplyConfiguration {
	for i := range values {
		b.Conditions = append(b.Conditions, values[i])
	}
	return b
}
