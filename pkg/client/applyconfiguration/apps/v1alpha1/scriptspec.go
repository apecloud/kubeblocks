/*
Copyright (C) 2022-2023 ApeCloud Co., Ltd

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

// ScriptSpecApplyConfiguration represents an declarative configuration of the ScriptSpec type for use
// with apply.
type ScriptSpecApplyConfiguration struct {
	ComponentOpsApplyConfiguration `json:",inline"`
	Image                          *string                         `json:"image,omitempty"`
	Secret                         *ScriptSecretApplyConfiguration `json:"secret,omitempty"`
	Script                         []string                        `json:"script,omitempty"`
	ScriptFrom                     *ScriptFromApplyConfiguration   `json:"scriptFrom,omitempty"`
}

// ScriptSpecApplyConfiguration constructs an declarative configuration of the ScriptSpec type for use with
// apply.
func ScriptSpec() *ScriptSpecApplyConfiguration {
	return &ScriptSpecApplyConfiguration{}
}

// WithComponentName sets the ComponentName field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ComponentName field is set to the value of the last call.
func (b *ScriptSpecApplyConfiguration) WithComponentName(value string) *ScriptSpecApplyConfiguration {
	b.ComponentName = &value
	return b
}

// WithImage sets the Image field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Image field is set to the value of the last call.
func (b *ScriptSpecApplyConfiguration) WithImage(value string) *ScriptSpecApplyConfiguration {
	b.Image = &value
	return b
}

// WithSecret sets the Secret field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Secret field is set to the value of the last call.
func (b *ScriptSpecApplyConfiguration) WithSecret(value *ScriptSecretApplyConfiguration) *ScriptSpecApplyConfiguration {
	b.Secret = value
	return b
}

// WithScript adds the given value to the Script field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the Script field.
func (b *ScriptSpecApplyConfiguration) WithScript(values ...string) *ScriptSpecApplyConfiguration {
	for i := range values {
		b.Script = append(b.Script, values[i])
	}
	return b
}

// WithScriptFrom sets the ScriptFrom field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ScriptFrom field is set to the value of the last call.
func (b *ScriptSpecApplyConfiguration) WithScriptFrom(value *ScriptFromApplyConfiguration) *ScriptSpecApplyConfiguration {
	b.ScriptFrom = value
	return b
}
