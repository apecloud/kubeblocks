/*
Copyright (C) 2022-2023 ApeCloud Co., Ltd

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/apecloud/kubeblocks/apis/dataprotection/v1alpha1"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// BackupStatusApplyConfiguration represents an declarative configuration of the BackupStatus type for use
// with apply.
type BackupStatusApplyConfiguration struct {
	Phase                            *v1alpha1.BackupPhase              `json:"phase,omitempty"`
	ParentBackupName                 *string                            `json:"parentBackupName,omitempty"`
	Expiration                       *v1.Time                           `json:"expiration,omitempty"`
	StartTimestamp                   *v1.Time                           `json:"startTimestamp,omitempty"`
	CompletionTimestamp              *v1.Time                           `json:"completionTimestamp,omitempty"`
	Duration                         *v1.Duration                       `json:"duration,omitempty"`
	TotalSize                        *string                            `json:"totalSize,omitempty"`
	FailureReason                    *string                            `json:"failureReason,omitempty"`
	PersistentVolumeClaimName        *string                            `json:"persistentVolumeClaimName,omitempty"`
	LogFilePersistentVolumeClaimName *string                            `json:"logFilePersistentVolumeClaimName,omitempty"`
	BackupToolName                   *string                            `json:"backupToolName,omitempty"`
	SourceCluster                    *string                            `json:"sourceCluster,omitempty"`
	AvailableReplicas                *int32                             `json:"availableReplicas,omitempty"`
	Manifests                        *ManifestsStatusApplyConfiguration `json:"manifests,omitempty"`
}

// BackupStatusApplyConfiguration constructs an declarative configuration of the BackupStatus type for use with
// apply.
func BackupStatus() *BackupStatusApplyConfiguration {
	return &BackupStatusApplyConfiguration{}
}

// WithPhase sets the Phase field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Phase field is set to the value of the last call.
func (b *BackupStatusApplyConfiguration) WithPhase(value v1alpha1.BackupPhase) *BackupStatusApplyConfiguration {
	b.Phase = &value
	return b
}

// WithParentBackupName sets the ParentBackupName field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ParentBackupName field is set to the value of the last call.
func (b *BackupStatusApplyConfiguration) WithParentBackupName(value string) *BackupStatusApplyConfiguration {
	b.ParentBackupName = &value
	return b
}

// WithExpiration sets the Expiration field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Expiration field is set to the value of the last call.
func (b *BackupStatusApplyConfiguration) WithExpiration(value v1.Time) *BackupStatusApplyConfiguration {
	b.Expiration = &value
	return b
}

// WithStartTimestamp sets the StartTimestamp field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the StartTimestamp field is set to the value of the last call.
func (b *BackupStatusApplyConfiguration) WithStartTimestamp(value v1.Time) *BackupStatusApplyConfiguration {
	b.StartTimestamp = &value
	return b
}

// WithCompletionTimestamp sets the CompletionTimestamp field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the CompletionTimestamp field is set to the value of the last call.
func (b *BackupStatusApplyConfiguration) WithCompletionTimestamp(value v1.Time) *BackupStatusApplyConfiguration {
	b.CompletionTimestamp = &value
	return b
}

// WithDuration sets the Duration field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Duration field is set to the value of the last call.
func (b *BackupStatusApplyConfiguration) WithDuration(value v1.Duration) *BackupStatusApplyConfiguration {
	b.Duration = &value
	return b
}

// WithTotalSize sets the TotalSize field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the TotalSize field is set to the value of the last call.
func (b *BackupStatusApplyConfiguration) WithTotalSize(value string) *BackupStatusApplyConfiguration {
	b.TotalSize = &value
	return b
}

// WithFailureReason sets the FailureReason field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the FailureReason field is set to the value of the last call.
func (b *BackupStatusApplyConfiguration) WithFailureReason(value string) *BackupStatusApplyConfiguration {
	b.FailureReason = &value
	return b
}

// WithPersistentVolumeClaimName sets the PersistentVolumeClaimName field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the PersistentVolumeClaimName field is set to the value of the last call.
func (b *BackupStatusApplyConfiguration) WithPersistentVolumeClaimName(value string) *BackupStatusApplyConfiguration {
	b.PersistentVolumeClaimName = &value
	return b
}

// WithLogFilePersistentVolumeClaimName sets the LogFilePersistentVolumeClaimName field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the LogFilePersistentVolumeClaimName field is set to the value of the last call.
func (b *BackupStatusApplyConfiguration) WithLogFilePersistentVolumeClaimName(value string) *BackupStatusApplyConfiguration {
	b.LogFilePersistentVolumeClaimName = &value
	return b
}

// WithBackupToolName sets the BackupToolName field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the BackupToolName field is set to the value of the last call.
func (b *BackupStatusApplyConfiguration) WithBackupToolName(value string) *BackupStatusApplyConfiguration {
	b.BackupToolName = &value
	return b
}

// WithSourceCluster sets the SourceCluster field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the SourceCluster field is set to the value of the last call.
func (b *BackupStatusApplyConfiguration) WithSourceCluster(value string) *BackupStatusApplyConfiguration {
	b.SourceCluster = &value
	return b
}

// WithAvailableReplicas sets the AvailableReplicas field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the AvailableReplicas field is set to the value of the last call.
func (b *BackupStatusApplyConfiguration) WithAvailableReplicas(value int32) *BackupStatusApplyConfiguration {
	b.AvailableReplicas = &value
	return b
}

// WithManifests sets the Manifests field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Manifests field is set to the value of the last call.
func (b *BackupStatusApplyConfiguration) WithManifests(value *ManifestsStatusApplyConfiguration) *BackupStatusApplyConfiguration {
	b.Manifests = value
	return b
}
