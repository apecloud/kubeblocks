/*
Copyright (C) 2022-2023 ApeCloud Co., Ltd

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/apecloud/kubeblocks/apis/dataprotection/v1alpha1"
)

// BackupStatusUpdateApplyConfiguration represents an declarative configuration of the BackupStatusUpdate type for use
// with apply.
type BackupStatusUpdateApplyConfiguration struct {
	Path                       *string                           `json:"path,omitempty"`
	ContainerName              *string                           `json:"containerName,omitempty"`
	Script                     *string                           `json:"script,omitempty"`
	UseTargetPodServiceAccount *bool                             `json:"useTargetPodServiceAccount,omitempty"`
	UpdateStage                *v1alpha1.BackupStatusUpdateStage `json:"updateStage,omitempty"`
}

// BackupStatusUpdateApplyConfiguration constructs an declarative configuration of the BackupStatusUpdate type for use with
// apply.
func BackupStatusUpdate() *BackupStatusUpdateApplyConfiguration {
	return &BackupStatusUpdateApplyConfiguration{}
}

// WithPath sets the Path field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Path field is set to the value of the last call.
func (b *BackupStatusUpdateApplyConfiguration) WithPath(value string) *BackupStatusUpdateApplyConfiguration {
	b.Path = &value
	return b
}

// WithContainerName sets the ContainerName field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ContainerName field is set to the value of the last call.
func (b *BackupStatusUpdateApplyConfiguration) WithContainerName(value string) *BackupStatusUpdateApplyConfiguration {
	b.ContainerName = &value
	return b
}

// WithScript sets the Script field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Script field is set to the value of the last call.
func (b *BackupStatusUpdateApplyConfiguration) WithScript(value string) *BackupStatusUpdateApplyConfiguration {
	b.Script = &value
	return b
}

// WithUseTargetPodServiceAccount sets the UseTargetPodServiceAccount field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the UseTargetPodServiceAccount field is set to the value of the last call.
func (b *BackupStatusUpdateApplyConfiguration) WithUseTargetPodServiceAccount(value bool) *BackupStatusUpdateApplyConfiguration {
	b.UseTargetPodServiceAccount = &value
	return b
}

// WithUpdateStage sets the UpdateStage field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the UpdateStage field is set to the value of the last call.
func (b *BackupStatusUpdateApplyConfiguration) WithUpdateStage(value v1alpha1.BackupStatusUpdateStage) *BackupStatusUpdateApplyConfiguration {
	b.UpdateStage = &value
	return b
}
