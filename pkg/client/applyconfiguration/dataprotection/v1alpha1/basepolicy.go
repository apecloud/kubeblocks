/*
Copyright (C) 2022-2023 ApeCloud Co., Ltd

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

// BasePolicyApplyConfiguration represents an declarative configuration of the BasePolicy type for use
// with apply.
type BasePolicyApplyConfiguration struct {
	Target              *TargetClusterApplyConfiguration       `json:"target,omitempty"`
	BackupsHistoryLimit *int32                                 `json:"backupsHistoryLimit,omitempty"`
	OnFailAttempted     *int32                                 `json:"onFailAttempted,omitempty"`
	BackupStatusUpdates []BackupStatusUpdateApplyConfiguration `json:"backupStatusUpdates,omitempty"`
}

// BasePolicyApplyConfiguration constructs an declarative configuration of the BasePolicy type for use with
// apply.
func BasePolicy() *BasePolicyApplyConfiguration {
	return &BasePolicyApplyConfiguration{}
}

// WithTarget sets the Target field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Target field is set to the value of the last call.
func (b *BasePolicyApplyConfiguration) WithTarget(value *TargetClusterApplyConfiguration) *BasePolicyApplyConfiguration {
	b.Target = value
	return b
}

// WithBackupsHistoryLimit sets the BackupsHistoryLimit field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the BackupsHistoryLimit field is set to the value of the last call.
func (b *BasePolicyApplyConfiguration) WithBackupsHistoryLimit(value int32) *BasePolicyApplyConfiguration {
	b.BackupsHistoryLimit = &value
	return b
}

// WithOnFailAttempted sets the OnFailAttempted field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the OnFailAttempted field is set to the value of the last call.
func (b *BasePolicyApplyConfiguration) WithOnFailAttempted(value int32) *BasePolicyApplyConfiguration {
	b.OnFailAttempted = &value
	return b
}

// WithBackupStatusUpdates adds the given value to the BackupStatusUpdates field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the BackupStatusUpdates field.
func (b *BasePolicyApplyConfiguration) WithBackupStatusUpdates(values ...*BackupStatusUpdateApplyConfiguration) *BasePolicyApplyConfiguration {
	for i := range values {
		if values[i] == nil {
			panic("nil value passed to WithBackupStatusUpdates")
		}
		b.BackupStatusUpdates = append(b.BackupStatusUpdates, *values[i])
	}
	return b
}
