/*
Copyright (C) 2022-2023 ApeCloud Co., Ltd

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/apecloud/kubeblocks/apis/dataprotection/v1alpha1"
	resource "k8s.io/apimachinery/pkg/api/resource"
)

// PersistentVolumeClaimApplyConfiguration represents an declarative configuration of the PersistentVolumeClaim type for use
// with apply.
type PersistentVolumeClaimApplyConfiguration struct {
	Name                      *string                                      `json:"name,omitempty"`
	StorageClassName          *string                                      `json:"storageClassName,omitempty"`
	InitCapacity              *resource.Quantity                           `json:"initCapacity,omitempty"`
	CreatePolicy              *v1alpha1.CreatePVCPolicy                    `json:"createPolicy,omitempty"`
	PersistentVolumeConfigMap *PersistentVolumeConfigMapApplyConfiguration `json:"persistentVolumeConfigMap,omitempty"`
}

// PersistentVolumeClaimApplyConfiguration constructs an declarative configuration of the PersistentVolumeClaim type for use with
// apply.
func PersistentVolumeClaim() *PersistentVolumeClaimApplyConfiguration {
	return &PersistentVolumeClaimApplyConfiguration{}
}

// WithName sets the Name field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Name field is set to the value of the last call.
func (b *PersistentVolumeClaimApplyConfiguration) WithName(value string) *PersistentVolumeClaimApplyConfiguration {
	b.Name = &value
	return b
}

// WithStorageClassName sets the StorageClassName field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the StorageClassName field is set to the value of the last call.
func (b *PersistentVolumeClaimApplyConfiguration) WithStorageClassName(value string) *PersistentVolumeClaimApplyConfiguration {
	b.StorageClassName = &value
	return b
}

// WithInitCapacity sets the InitCapacity field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the InitCapacity field is set to the value of the last call.
func (b *PersistentVolumeClaimApplyConfiguration) WithInitCapacity(value resource.Quantity) *PersistentVolumeClaimApplyConfiguration {
	b.InitCapacity = &value
	return b
}

// WithCreatePolicy sets the CreatePolicy field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the CreatePolicy field is set to the value of the last call.
func (b *PersistentVolumeClaimApplyConfiguration) WithCreatePolicy(value v1alpha1.CreatePVCPolicy) *PersistentVolumeClaimApplyConfiguration {
	b.CreatePolicy = &value
	return b
}

// WithPersistentVolumeConfigMap sets the PersistentVolumeConfigMap field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the PersistentVolumeConfigMap field is set to the value of the last call.
func (b *PersistentVolumeClaimApplyConfiguration) WithPersistentVolumeConfigMap(value *PersistentVolumeConfigMapApplyConfiguration) *PersistentVolumeClaimApplyConfiguration {
	b.PersistentVolumeConfigMap = value
	return b
}
