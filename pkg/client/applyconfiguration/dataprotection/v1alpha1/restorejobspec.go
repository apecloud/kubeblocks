/*
Copyright (C) 2022-2023 ApeCloud Co., Ltd

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	v1 "k8s.io/api/core/v1"
)

// RestoreJobSpecApplyConfiguration represents an declarative configuration of the RestoreJobSpec type for use
// with apply.
type RestoreJobSpecApplyConfiguration struct {
	BackupJobName      *string                          `json:"backupJobName,omitempty"`
	Target             *TargetClusterApplyConfiguration `json:"target,omitempty"`
	TargetVolumes      []v1.Volume                      `json:"targetVolumes,omitempty"`
	TargetVolumeMounts []v1.VolumeMount                 `json:"targetVolumeMounts,omitempty"`
	OnFailAttempted    *int32                           `json:"onFailAttempted,omitempty"`
}

// RestoreJobSpecApplyConfiguration constructs an declarative configuration of the RestoreJobSpec type for use with
// apply.
func RestoreJobSpec() *RestoreJobSpecApplyConfiguration {
	return &RestoreJobSpecApplyConfiguration{}
}

// WithBackupJobName sets the BackupJobName field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the BackupJobName field is set to the value of the last call.
func (b *RestoreJobSpecApplyConfiguration) WithBackupJobName(value string) *RestoreJobSpecApplyConfiguration {
	b.BackupJobName = &value
	return b
}

// WithTarget sets the Target field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Target field is set to the value of the last call.
func (b *RestoreJobSpecApplyConfiguration) WithTarget(value *TargetClusterApplyConfiguration) *RestoreJobSpecApplyConfiguration {
	b.Target = value
	return b
}

// WithTargetVolumes adds the given value to the TargetVolumes field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the TargetVolumes field.
func (b *RestoreJobSpecApplyConfiguration) WithTargetVolumes(values ...v1.Volume) *RestoreJobSpecApplyConfiguration {
	for i := range values {
		b.TargetVolumes = append(b.TargetVolumes, values[i])
	}
	return b
}

// WithTargetVolumeMounts adds the given value to the TargetVolumeMounts field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the TargetVolumeMounts field.
func (b *RestoreJobSpecApplyConfiguration) WithTargetVolumeMounts(values ...v1.VolumeMount) *RestoreJobSpecApplyConfiguration {
	for i := range values {
		b.TargetVolumeMounts = append(b.TargetVolumeMounts, values[i])
	}
	return b
}

// WithOnFailAttempted sets the OnFailAttempted field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the OnFailAttempted field is set to the value of the last call.
func (b *RestoreJobSpecApplyConfiguration) WithOnFailAttempted(value int32) *RestoreJobSpecApplyConfiguration {
	b.OnFailAttempted = &value
	return b
}
