/*
Copyright (C) 2022-2023 ApeCloud Co., Ltd

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

// AddonDefaultInstallSpecItemApplyConfiguration represents an declarative configuration of the AddonDefaultInstallSpecItem type for use
// with apply.
type AddonDefaultInstallSpecItemApplyConfiguration struct {
	AddonInstallSpecApplyConfiguration `json:",inline"`
	Selectors                          []SelectorRequirementApplyConfiguration `json:"selectors,omitempty"`
}

// AddonDefaultInstallSpecItemApplyConfiguration constructs an declarative configuration of the AddonDefaultInstallSpecItem type for use with
// apply.
func AddonDefaultInstallSpecItem() *AddonDefaultInstallSpecItemApplyConfiguration {
	return &AddonDefaultInstallSpecItemApplyConfiguration{}
}

// WithReplicas sets the Replicas field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Replicas field is set to the value of the last call.
func (b *AddonDefaultInstallSpecItemApplyConfiguration) WithReplicas(value int32) *AddonDefaultInstallSpecItemApplyConfiguration {
	b.Replicas = &value
	return b
}

// WithPVEnabled sets the PVEnabled field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the PVEnabled field is set to the value of the last call.
func (b *AddonDefaultInstallSpecItemApplyConfiguration) WithPVEnabled(value bool) *AddonDefaultInstallSpecItemApplyConfiguration {
	b.PVEnabled = &value
	return b
}

// WithStorageClass sets the StorageClass field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the StorageClass field is set to the value of the last call.
func (b *AddonDefaultInstallSpecItemApplyConfiguration) WithStorageClass(value string) *AddonDefaultInstallSpecItemApplyConfiguration {
	b.StorageClass = &value
	return b
}

// WithTolerations sets the Tolerations field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Tolerations field is set to the value of the last call.
func (b *AddonDefaultInstallSpecItemApplyConfiguration) WithTolerations(value string) *AddonDefaultInstallSpecItemApplyConfiguration {
	b.Tolerations = &value
	return b
}

// WithResources sets the Resources field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Resources field is set to the value of the last call.
func (b *AddonDefaultInstallSpecItemApplyConfiguration) WithResources(value *ResourceRequirementsApplyConfiguration) *AddonDefaultInstallSpecItemApplyConfiguration {
	b.Resources = value
	return b
}

// WithEnabled sets the Enabled field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Enabled field is set to the value of the last call.
func (b *AddonDefaultInstallSpecItemApplyConfiguration) WithEnabled(value bool) *AddonDefaultInstallSpecItemApplyConfiguration {
	b.Enabled = &value
	return b
}

// WithExtraItems adds the given value to the ExtraItems field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the ExtraItems field.
func (b *AddonDefaultInstallSpecItemApplyConfiguration) WithExtraItems(values ...*AddonInstallExtraItemApplyConfiguration) *AddonDefaultInstallSpecItemApplyConfiguration {
	for i := range values {
		if values[i] == nil {
			panic("nil value passed to WithExtraItems")
		}
		b.ExtraItems = append(b.ExtraItems, *values[i])
	}
	return b
}

// WithSelectors adds the given value to the Selectors field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the Selectors field.
func (b *AddonDefaultInstallSpecItemApplyConfiguration) WithSelectors(values ...*SelectorRequirementApplyConfiguration) *AddonDefaultInstallSpecItemApplyConfiguration {
	for i := range values {
		if values[i] == nil {
			panic("nil value passed to WithSelectors")
		}
		b.Selectors = append(b.Selectors, *values[i])
	}
	return b
}
