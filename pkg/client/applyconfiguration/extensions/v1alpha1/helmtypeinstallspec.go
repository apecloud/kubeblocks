/*
Copyright (C) 2022-2023 ApeCloud Co., Ltd

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/apecloud/kubeblocks/apis/extensions/v1alpha1"
)

// HelmTypeInstallSpecApplyConfiguration represents an declarative configuration of the HelmTypeInstallSpec type for use
// with apply.
type HelmTypeInstallSpecApplyConfiguration struct {
	ChartLocationURL  *string                              `json:"chartLocationURL,omitempty"`
	InstallOptions    *v1alpha1.HelmInstallOptions         `json:"installOptions,omitempty"`
	InstallValues     *HelmInstallValuesApplyConfiguration `json:"installValues,omitempty"`
	ValuesMapping     *HelmValuesMappingApplyConfiguration `json:"valuesMapping,omitempty"`
	ChartsImage       *string                              `json:"chartsImage,omitempty"`
	ChartsPathInImage *string                              `json:"chartsPathInImage,omitempty"`
}

// HelmTypeInstallSpecApplyConfiguration constructs an declarative configuration of the HelmTypeInstallSpec type for use with
// apply.
func HelmTypeInstallSpec() *HelmTypeInstallSpecApplyConfiguration {
	return &HelmTypeInstallSpecApplyConfiguration{}
}

// WithChartLocationURL sets the ChartLocationURL field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ChartLocationURL field is set to the value of the last call.
func (b *HelmTypeInstallSpecApplyConfiguration) WithChartLocationURL(value string) *HelmTypeInstallSpecApplyConfiguration {
	b.ChartLocationURL = &value
	return b
}

// WithInstallOptions sets the InstallOptions field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the InstallOptions field is set to the value of the last call.
func (b *HelmTypeInstallSpecApplyConfiguration) WithInstallOptions(value v1alpha1.HelmInstallOptions) *HelmTypeInstallSpecApplyConfiguration {
	b.InstallOptions = &value
	return b
}

// WithInstallValues sets the InstallValues field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the InstallValues field is set to the value of the last call.
func (b *HelmTypeInstallSpecApplyConfiguration) WithInstallValues(value *HelmInstallValuesApplyConfiguration) *HelmTypeInstallSpecApplyConfiguration {
	b.InstallValues = value
	return b
}

// WithValuesMapping sets the ValuesMapping field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ValuesMapping field is set to the value of the last call.
func (b *HelmTypeInstallSpecApplyConfiguration) WithValuesMapping(value *HelmValuesMappingApplyConfiguration) *HelmTypeInstallSpecApplyConfiguration {
	b.ValuesMapping = value
	return b
}

// WithChartsImage sets the ChartsImage field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ChartsImage field is set to the value of the last call.
func (b *HelmTypeInstallSpecApplyConfiguration) WithChartsImage(value string) *HelmTypeInstallSpecApplyConfiguration {
	b.ChartsImage = &value
	return b
}

// WithChartsPathInImage sets the ChartsPathInImage field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ChartsPathInImage field is set to the value of the last call.
func (b *HelmTypeInstallSpecApplyConfiguration) WithChartsPathInImage(value string) *HelmTypeInstallSpecApplyConfiguration {
	b.ChartsPathInImage = &value
	return b
}
