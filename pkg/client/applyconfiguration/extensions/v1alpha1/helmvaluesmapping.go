/*
Copyright (C) 2022-2023 ApeCloud Co., Ltd

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

// HelmValuesMappingApplyConfiguration represents an declarative configuration of the HelmValuesMapping type for use
// with apply.
type HelmValuesMappingApplyConfiguration struct {
	HelmValuesMappingItemApplyConfiguration `json:",inline"`
	ExtraItems                              []HelmValuesMappingExtraItemApplyConfiguration `json:"extras,omitempty"`
}

// HelmValuesMappingApplyConfiguration constructs an declarative configuration of the HelmValuesMapping type for use with
// apply.
func HelmValuesMapping() *HelmValuesMappingApplyConfiguration {
	return &HelmValuesMappingApplyConfiguration{}
}

// WithHelmValueMap sets the HelmValueMap field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the HelmValueMap field is set to the value of the last call.
func (b *HelmValuesMappingApplyConfiguration) WithHelmValueMap(value *HelmValueMapTypeApplyConfiguration) *HelmValuesMappingApplyConfiguration {
	b.HelmValueMap = value
	return b
}

// WithHelmJSONMap sets the HelmJSONMap field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the HelmJSONMap field is set to the value of the last call.
func (b *HelmValuesMappingApplyConfiguration) WithHelmJSONMap(value *HelmJSONValueMapTypeApplyConfiguration) *HelmValuesMappingApplyConfiguration {
	b.HelmJSONMap = value
	return b
}

// WithResourcesMapping sets the ResourcesMapping field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ResourcesMapping field is set to the value of the last call.
func (b *HelmValuesMappingApplyConfiguration) WithResourcesMapping(value *ResourceMappingItemApplyConfiguration) *HelmValuesMappingApplyConfiguration {
	b.ResourcesMapping = value
	return b
}

// WithExtraItems adds the given value to the ExtraItems field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the ExtraItems field.
func (b *HelmValuesMappingApplyConfiguration) WithExtraItems(values ...*HelmValuesMappingExtraItemApplyConfiguration) *HelmValuesMappingApplyConfiguration {
	for i := range values {
		if values[i] == nil {
			panic("nil value passed to WithExtraItems")
		}
		b.ExtraItems = append(b.ExtraItems, *values[i])
	}
	return b
}
