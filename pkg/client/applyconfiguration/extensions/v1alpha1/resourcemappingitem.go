/*
Copyright (C) 2022-2023 ApeCloud Co., Ltd

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

// ResourceMappingItemApplyConfiguration represents an declarative configuration of the ResourceMappingItem type for use
// with apply.
type ResourceMappingItemApplyConfiguration struct {
	Storage *string                               `json:"storage,omitempty"`
	CPU     *ResourceReqLimItemApplyConfiguration `json:"cpu,omitempty"`
	Memory  *ResourceReqLimItemApplyConfiguration `json:"memory,omitempty"`
}

// ResourceMappingItemApplyConfiguration constructs an declarative configuration of the ResourceMappingItem type for use with
// apply.
func ResourceMappingItem() *ResourceMappingItemApplyConfiguration {
	return &ResourceMappingItemApplyConfiguration{}
}

// WithStorage sets the Storage field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Storage field is set to the value of the last call.
func (b *ResourceMappingItemApplyConfiguration) WithStorage(value string) *ResourceMappingItemApplyConfiguration {
	b.Storage = &value
	return b
}

// WithCPU sets the CPU field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the CPU field is set to the value of the last call.
func (b *ResourceMappingItemApplyConfiguration) WithCPU(value *ResourceReqLimItemApplyConfiguration) *ResourceMappingItemApplyConfiguration {
	b.CPU = value
	return b
}

// WithMemory sets the Memory field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Memory field is set to the value of the last call.
func (b *ResourceMappingItemApplyConfiguration) WithMemory(value *ResourceReqLimItemApplyConfiguration) *ResourceMappingItemApplyConfiguration {
	b.Memory = value
	return b
}
