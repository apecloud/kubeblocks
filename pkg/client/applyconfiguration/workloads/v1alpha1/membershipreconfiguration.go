/*
Copyright (C) 2022-2023 ApeCloud Co., Ltd

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

// MembershipReconfigurationApplyConfiguration represents an declarative configuration of the MembershipReconfiguration type for use
// with apply.
type MembershipReconfigurationApplyConfiguration struct {
	SwitchoverAction  *ActionApplyConfiguration `json:"switchoverAction,omitempty"`
	MemberJoinAction  *ActionApplyConfiguration `json:"memberJoinAction,omitempty"`
	MemberLeaveAction *ActionApplyConfiguration `json:"memberLeaveAction,omitempty"`
	LogSyncAction     *ActionApplyConfiguration `json:"logSyncAction,omitempty"`
	PromoteAction     *ActionApplyConfiguration `json:"promoteAction,omitempty"`
}

// MembershipReconfigurationApplyConfiguration constructs an declarative configuration of the MembershipReconfiguration type for use with
// apply.
func MembershipReconfiguration() *MembershipReconfigurationApplyConfiguration {
	return &MembershipReconfigurationApplyConfiguration{}
}

// WithSwitchoverAction sets the SwitchoverAction field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the SwitchoverAction field is set to the value of the last call.
func (b *MembershipReconfigurationApplyConfiguration) WithSwitchoverAction(value *ActionApplyConfiguration) *MembershipReconfigurationApplyConfiguration {
	b.SwitchoverAction = value
	return b
}

// WithMemberJoinAction sets the MemberJoinAction field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the MemberJoinAction field is set to the value of the last call.
func (b *MembershipReconfigurationApplyConfiguration) WithMemberJoinAction(value *ActionApplyConfiguration) *MembershipReconfigurationApplyConfiguration {
	b.MemberJoinAction = value
	return b
}

// WithMemberLeaveAction sets the MemberLeaveAction field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the MemberLeaveAction field is set to the value of the last call.
func (b *MembershipReconfigurationApplyConfiguration) WithMemberLeaveAction(value *ActionApplyConfiguration) *MembershipReconfigurationApplyConfiguration {
	b.MemberLeaveAction = value
	return b
}

// WithLogSyncAction sets the LogSyncAction field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the LogSyncAction field is set to the value of the last call.
func (b *MembershipReconfigurationApplyConfiguration) WithLogSyncAction(value *ActionApplyConfiguration) *MembershipReconfigurationApplyConfiguration {
	b.LogSyncAction = value
	return b
}

// WithPromoteAction sets the PromoteAction field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the PromoteAction field is set to the value of the last call.
func (b *MembershipReconfigurationApplyConfiguration) WithPromoteAction(value *ActionApplyConfiguration) *MembershipReconfigurationApplyConfiguration {
	b.PromoteAction = value
	return b
}
