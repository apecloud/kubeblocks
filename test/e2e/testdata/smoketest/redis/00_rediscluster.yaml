---
# Source: redis-cluster/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kb-mycluster-redis-cluster
  labels:
    
    helm.sh/chart: redis-cluster-0.5.1-beta.0
    app.kubernetes.io/name: redis-cluster
    app.kubernetes.io/instance: mycluster
    app.kubernetes.io/version: "7.0.6"
    app.kubernetes.io/managed-by: Helm
---
# Source: redis-cluster/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: kb-mycluster-redis-cluster
  namespace: default
  labels:
    
    helm.sh/chart: redis-cluster-0.5.1-beta.0
    app.kubernetes.io/name: redis-cluster
    app.kubernetes.io/instance: mycluster
    app.kubernetes.io/version: "7.0.6"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
---
# Source: redis-cluster/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: kb-mycluster-redis-cluster
  labels:
    
    helm.sh/chart: redis-cluster-0.5.1-beta.0
    app.kubernetes.io/name: redis-cluster
    app.kubernetes.io/instance: mycluster
    app.kubernetes.io/version: "7.0.6"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kb-mycluster-redis-cluster
subjects:
  - kind: ServiceAccount
    name: kb-mycluster-redis-cluster
    namespace: default
---
# Source: redis-cluster/templates/cluster.yaml
apiVersion: apps.kubeblocks.io/v1alpha1
kind: Cluster
metadata:
  name: mycluster-redis-cluster
  labels: 
    helm.sh/chart: redis-cluster-0.5.1-beta.0
    app.kubernetes.io/name: redis-cluster
    app.kubernetes.io/instance: mycluster
    app.kubernetes.io/version: "7.0.6"
    app.kubernetes.io/managed-by: Helm
spec:
  clusterDefinitionRef: redis  # ref clusterDefinition.name
  clusterVersionRef: redis-7.0.6 # ref clusterVersion.name
  terminationPolicy: Delete
  affinity:
    topologyKeys: 
      - kubernetes.io/hostname
  componentSpecs:
    - name: redis # user-defined
      componentDefRef: redis # ref clusterDefinition componentDefs.name
      monitor: false
      enabledLogs:     ["running"]
      replicas: 2
      serviceAccountName: kb-mycluster-redis-cluster
      primaryIndex: 0
      switchPolicy:
        type: Noop
      resources:
        limits:
          cpu: "500m"
          memory: "3Gi"
        requests:
          cpu: "500m"
          memory: "1Gi"
      volumeClaimTemplates:
        - name: data # ref clusterdefinition components.containers.volumeMounts.name
          spec:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 1Gi
    - name: redis-sentinel # user-defined
      componentDefRef: redis-sentinel # ref clusterDefinition componentDefs.name
      replicas: 3
      resources:
        limits:
          cpu: "500m"
          memory: "3Gi"
        requests:
          cpu: "500m"
          memory: "1Gi"
      volumeClaimTemplates:
        - name: data # ref clusterdefinition components.containers.volumeMounts.name
          spec:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 1Gi
