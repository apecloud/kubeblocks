---
# Source: redis/templates/primary-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-primary-config-7.0.5
data:
  redis.conf: |-
    bind 0.0.0.0
    port 6379
    tcp-backlog 511
    timeout 0
    tcp-keepalive 300
    daemonize no
    pidfile /var/run/redis_6379.pid
    loglevel notice
    logfile "/data/running.log"
    databases 16
    always-show-logo no
    set-proc-title yes
    proc-title-template "{title} {listen-addr} {server-mode}"
    stop-writes-on-bgsave-error yes
    rdbcompression yes
    rdbchecksum yes
    dbfilename dump.rdb
    rdb-del-sync-files no
    dir ./
    replica-serve-stale-data yes
    replica-read-only yes
    repl-diskless-sync yes
    repl-diskless-sync-delay 5
    repl-diskless-sync-max-replicas 0
    repl-diskless-load disabled
    repl-disable-tcp-nodelay no
    replica-priority 100
    acllog-max-len 128
    lazyfree-lazy-eviction no
    lazyfree-lazy-expire no
    lazyfree-lazy-server-del no
    replica-lazy-flush no
    lazyfree-lazy-user-del no
    lazyfree-lazy-user-flush no
    oom-score-adj no
    oom-score-adj-values 0 200 800
    disable-thp yes
    appendonly yes
    appendfilename "appendonly.aof"
    appenddirname "appendonlydir"
    appendfsync everysec
    no-appendfsync-on-rewrite no
    auto-aof-rewrite-percentage 100
    auto-aof-rewrite-min-size 64mb
    aof-load-truncated yes
    aof-use-rdb-preamble yes
    aof-timestamp-enabled no
    slowlog-log-slower-than 10000
    slowlog-max-len 128
    latency-monitor-threshold 0
    notify-keyspace-events ""
    hash-max-listpack-entries 512
    hash-max-listpack-value 64
    list-max-listpack-size -2
    list-compress-depth 0
    set-max-intset-entries 512
    zset-max-listpack-entries 128
    zset-max-listpack-value 64
    hll-sparse-max-bytes 3000
    stream-node-max-bytes 4096
    stream-node-max-entries 100
    activerehashing yes
    client-output-buffer-limit normal 0 0 0
    client-output-buffer-limit replica 256mb 64mb 60
    client-output-buffer-limit pubsub 32mb 8mb 60
    hz 10
    dynamic-hz yes
    aof-rewrite-incremental-fsync yes
    rdb-save-incremental-fsync yes
    jemalloc-bg-thread yes
---
# Source: redis/templates/scripts.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-scripts
data:
  init.sh: |
    #!/bin/sh
    set -ex
    KB_PRIMARY_POD_NAME_PREFIX=${KB_PRIMARY_POD_NAME%%\.*}
    if [ "$KB_PRIMARY_POD_NAME_PREFIX" = "$KB_POD_NAME" ]; then
        cp /etc/conf/primary/redis.conf /etc/conf
    else
        cp /etc/conf/secondary/redis.conf /etc/conf
    fi
  setup.sh: |
    #!/bin/sh
    set -ex
    KB_PRIMARY_POD_NAME_PREFIX=${KB_PRIMARY_POD_NAME%%\.*}
    if [ "$KB_PRIMARY_POD_NAME_PREFIX" = "$KB_POD_NAME" ]; then
      echo "primary instance skip create a replication relationship."
      exit 0
    else
      until redis-cli -h $KB_PRIMARY_POD_NAME -p 6379 ping; do sleep 1; done
      redis-cli -h 127.0.0.1 -p 6379 replicaof $KB_PRIMARY_POD_NAME 6379 || exit 1
    fi
---
# Source: redis/templates/secondary-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-secondary-config-7.0.5
data:
  redis.conf: |-
    bind 0.0.0.0
    port 6379
    tcp-backlog 511
    timeout 0
    tcp-keepalive 300
    daemonize no
    pidfile /var/run/redis_6379.pid
    loglevel notice
    logfile "/data/running.log"
    databases 16
    always-show-logo no
    set-proc-title yes
    proc-title-template "{title} {listen-addr} {server-mode}"
    stop-writes-on-bgsave-error yes
    rdbcompression yes
    rdbchecksum yes
    dbfilename dump.rdb
    rdb-del-sync-files no
    dir ./
    replica-serve-stale-data yes
    replica-read-only yes
    repl-diskless-sync yes
    repl-diskless-sync-delay 5
    repl-diskless-sync-max-replicas 0
    repl-diskless-load disabled
    repl-disable-tcp-nodelay no
    replica-priority 100
    acllog-max-len 128
    lazyfree-lazy-eviction no
    lazyfree-lazy-expire no
    lazyfree-lazy-server-del no
    replica-lazy-flush no
    lazyfree-lazy-user-del no
    lazyfree-lazy-user-flush no
    oom-score-adj no
    oom-score-adj-values 0 200 800
    disable-thp yes
    appendonly no
    appendfilename "appendonly.aof"
    appenddirname "appendonlydir"
    appendfsync everysec
    no-appendfsync-on-rewrite no
    auto-aof-rewrite-percentage 100
    auto-aof-rewrite-min-size 64mb
    aof-load-truncated yes
    aof-use-rdb-preamble yes
    aof-timestamp-enabled no
    slowlog-log-slower-than 10000
    slowlog-max-len 128
    latency-monitor-threshold 0
    notify-keyspace-events ""
    hash-max-listpack-entries 512
    hash-max-listpack-value 64
    list-max-listpack-size -2
    list-compress-depth 0
    set-max-intset-entries 512
    zset-max-listpack-entries 128
    zset-max-listpack-value 64
    hll-sparse-max-bytes 3000
    stream-node-max-bytes 4096
    stream-node-max-entries 100
    activerehashing yes
    client-output-buffer-limit normal 0 0 0
    client-output-buffer-limit replica 256mb 64mb 60
    client-output-buffer-limit pubsub 32mb 8mb 60
    hz 10
    dynamic-hz yes
    aof-rewrite-incremental-fsync yes
    rdb-save-incremental-fsync yes
    jemalloc-bg-thread yes
---
# Source: redis/templates/clusterdefinition.yaml
apiVersion: apps.kubeblocks.io/v1alpha1
kind: ClusterDefinition
metadata:
  name: apecloud-redis
  labels:
    helm.sh/chart: redis-0.1.0
    app.kubernetes.io/name: redis
    app.kubernetes.io/instance: mycluster
    app.kubernetes.io/version: "7.0.5"
    app.kubernetes.io/managed-by: Helm
spec:
  connectionCredential:
    username: ""
    password: ""
    endpoint: "$(SVC_FQDN):$(SVC_PORT_redis)"
    host: "$(SVC_FQDN)"
    port: "$(SVC_PORT_redis)"
  componentDefs:
    - name: redis
      workloadType: Replication
      characterType: redis
      replicationSpec:
        switchPolicies:
          - type: MaximumAvailability
            switchStatements:
              demote:
                - replicaof $KB_NEW_PRIMARY_ROLE_NAME 6379
              promote:
                - replicaof no one
              follow:
                - replicaof $KB_NEW_PRIMARY_ROLE_NAME 6379
          - type: MaximumDataProtection
            switchStatements:
              demote:
                - replicaof $KB_NEW_PRIMARY_ROLE_NAME 6379
              promote:
                - replicaof no one
              follow:
                - replicaof $KB_NEW_PRIMARY_ROLE_NAME 6379
        switchCmdExecutorConfig:
          image: redis:7.0.5
          switchSteps:
          - role: NewPrimary
            command:
              - /bin/sh
              - -c
            args:
              - redis-cli -h $(KB_SWITCH_ROLE_ENDPOINT) -p 6379 $(KB_SWITCH_PROMOTE_STATEMENT)
          - role: Secondaries
            command:
              - /bin/sh
              - -c
            args:
              - redis-cli -h $(KB_SWITCH_ROLE_ENDPOINT) -p 6379 $(KB_SWITCH_FOLLOW_STATEMENT)
          - role: OldPrimary
            command:
              - /bin/sh
              - -c
            args:
              - redis-cli -h $(KB_SWITCH_ROLE_ENDPOINT) -p 6379 $(KB_SWITCH_DEMOTE_STATEMENT)
      service:
        ports:
          - protocol: TCP
            port: 6379
      configSpec:
        configTemplateRefs:
          - name: redis-primary-config
            configTplRef: redis-primary-config-7.0.5
            namespace: default
            volumeName: primary
          - name: redis-secondary-config
            configTplRef: redis-secondary-config-7.0.5
            namespace: default
            volumeName: secondary
          - name: redis-scripts
            configTplRef: redis-scripts
            namespace: default
            volumeName: scripts
            defaultMode: 493
      monitor:
        builtIn: false
        exporterConfig:
          scrapePort: 9121
          scrapePath: "/metrics"
      logConfigs:
        - name: running
          filePathPattern: /data/running.log
      podSpec:
        initContainers:
          - name: redis-init-container
            image: redis:7.0.5
            command: ["/scripts/init.sh"]
            volumeMounts:
              - name: data
                mountPath: /data
              - name: conf
                mountPath: /etc/conf
              - name: primary
                mountPath: /etc/conf/primary
              - name: secondary
                mountPath: /etc/conf/secondary
              - name: scripts
                mountPath: /scripts
        containers:
          - name: redis
            image: redis:7.0.5
            ports:
              - name: redis
                containerPort: 6379
            volumeMounts:
              - name: data
                mountPath: /data
              - name: conf
                mountPath: /etc/conf
              - name: primary
                mountPath: /etc/conf/primary
              - name: secondary
                mountPath: /etc/conf/secondary
              - name: scripts
                mountPath: /scripts
            args: [ "/etc/conf/redis.conf" ]
            lifecycle:
              postStart:
                exec:
                  command: ["/scripts/setup.sh"]
          - name: redis-exporter
            image: oliver006/redis_exporter:latest
            imagePullPolicy: IfNotPresent
            resources:
              requests:
                cpu: 100m
                memory: 100Mi
            ports:
              - name: metrics
                containerPort: 9121
                protocol: TCP
            livenessProbe:
              httpGet:
                path: /
                port: 9121
            readinessProbe:
              httpGet:
                path: /
                port: 9121
        volumes:
          - name: conf
            emptyDir: { }
      systemAccounts:
        cmdExecutorConfig:
          image: docker.io/redis:7.0.5
          command:
          - /bin/sh
          - -c
          args:
          - redis-cli -h $(KB_ACCOUNT_ENDPOINT) $(KB_ACCOUNT_STATEMENT)
        passwordConfig:
          length: 10
          numDigits: 5
          numSymbols: 0
          letterCase: MixedCases
        accounts:
          - name: kbadmin
            provisionPolicy:
              type: CreateByStmt
              scope: AnyPods
              statements:
                creation: ACL SETUSER $(USERNAME) ON >$(PASSWD) allcommands allkeys
          - name: kbdataprotection
            provisionPolicy:
              type: CreateByStmt
              scope: AnyPods
              statements:
                creation: ACL SETUSER $(USERNAME) ON >$(PASSWD) allcommands allkeys
          - name: kbmonitoring
            provisionPolicy:
              type: CreateByStmt
              scope: AnyPods
              statements:
                creation: ACL SETUSER $(USERNAME) ON >$(PASSWD) allkeys +get
          - name: kbprobe
            provisionPolicy:
              type: CreateByStmt
              scope: AnyPods
              statements:
                creation: ACL SETUSER $(USERNAME) ON >$(PASSWD) allkeys +get
          - name: kbreplicator
            provisionPolicy:
              type: CreateByStmt
              scope: AnyPods
              statements:
                creation: ACL SETUSER $(USERNAME) ON >$(PASSWD) +psync +replconf +ping
---
# Source: redis/templates/clusterversion.yaml
apiVersion: apps.kubeblocks.io/v1alpha1
kind: ClusterVersion
metadata:
  name: redis-7.0.5
  labels:
    helm.sh/chart: redis-0.1.0
    app.kubernetes.io/name: redis
    app.kubernetes.io/instance: mycluster
    app.kubernetes.io/version: "7.0.5"
    app.kubernetes.io/managed-by: Helm
spec:
  clusterDefinitionRef: apecloud-redis
  componentVersions:
  - componentDefRef: redis
    versionsContext:
      containers:
      - name: redis
        image: redis:7.0.5
        imagePullPolicy: IfNotPresent
---
# Source: apecloud-redis-rep-cluster/templates/cluster.yaml
apiVersion: apps.kubeblocks.io/v1alpha1
kind: Cluster
metadata:
  name: mycluster
  labels: 
    helm.sh/chart: apecloud-redis-rep-cluster-0.1.0
    app.kubernetes.io/name: apecloud-redis-rep-cluster
    app.kubernetes.io/instance: mycluster
    app.kubernetes.io/version: "7.0.5"
    app.kubernetes.io/managed-by: Helm
spec:
  clusterDefinitionRef: apecloud-redis  # ref clusterDefinition.name
  clusterVersionRef: redis-7.0.5 # ref clusterVersion.name
  terminationPolicy: Delete
  affinity:
    topologyKeys: 
      - kubernetes.io/hostname
  componentSpecs:
    - name: redis-repl # user-defined
      componentDefRef: redis # ref clusterDefinition componentDefs.name
      monitor: false
      enabledLogs:     ["running"]
      replicas: 2
      primaryIndex: 0
      switchPolicy:
        type: MaximumAvailability
      volumeClaimTemplates:
        - name: data # ref clusterdefinition components.containers.volumeMounts.name
          spec:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 1Gi
