apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/component-name: %s
    app.kubernetes.io/instance: %s
    app.kubernetes.io/name: state.mysql-cluster-definition-consensus
    app.kubernetes.io/managed-by: kubeblocks
  name: %s
  namespace: default
spec:
  podManagementPolicy: Parallel
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/component-name: %s
      app.kubernetes.io/instance: %s
      app.kubernetes.io/name: state.mysql-cluster-definition-consensus
      kubeblocks.io/test: test
      app.kubernetes.io/managed-by: kubeblocks
  template:
    metadata:
      labels:
        app.kubernetes.io/component-name: %s
        app.kubernetes.io/instance: %s
        app.kubernetes.io/name: state.mysql-cluster-definition-consensus
        kubeblocks.io/test: test
        app.kubernetes.io/managed-by: kubeblocks
    spec:
      containers:
      - args:
        - |
          cluster_info=""; for (( i=0; i<$KB_consensus_N; i++ )); do
            if [ $i -ne 0 ]; then
              cluster_info="$cluster_info;";
            fi;
            host=$(eval echo \$KB_consensus_"$i"_HOSTNAME)
            cluster_info="$cluster_info$host:13306";
          done; idx=0; while IFS='-' read -ra ADDR; do
            for i in "${ADDR[@]}"; do
              idx=$i;
            done;
          done <<< "$KB_POD_NAME"; echo $idx; cluster_info="$cluster_info@$(($idx+1))"; echo $cluster_info; docker-entrypoint.sh mysqld --cluster-start-index=1 --cluster-info="$cluster_info" --cluster-id=1
        command:
        - /bin/bash
        - -c
        env:
        - name: MYSQL_ROOT_HOST
          value: '%s'
        - name: MYSQL_ROOT_USER
          value: root
        - name: MYSQL_ROOT_PASSWORD
        - name: MYSQL_ALLOW_EMPTY_PASSWORD
          value: "yes"
        - name: MYSQL_DATABASE
          value: mydb
        - name: MYSQL_USER
          value: u1
        - name: MYSQL_PASSWORD
          value: u1
        - name: CLUSTER_ID
          value: "1"
        - name: CLUSTER_START_INDEX
          value: "1"
        - name: REPLICATIONUSER
          value: replicator
        - name: REPLICATION_PASSWORD
        - name: MYSQL_TEMPLATE_CONFIG
        - name: MYSQL_CUSTOM_CONFIG
        - name: MYSQL_DYNAMIC_CONFIG
        - name: KB_POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: KB_consensus_N
          value: "3"
        image: docker.io/apecloud/wesql-server:latest
        imagePullPolicy: IfNotPresent
        name: mysql
        resources:
          limits:
            cpu: 280m
            memory: 380Mi
        ports:
        - containerPort: 3306
          name: mysql
          protocol: TCP
        - containerPort: 13306
          name: paxos
          protocol: TCP
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
  updateStrategy:
    type: OnDelete